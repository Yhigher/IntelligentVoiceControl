///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.10.1.4655 for 8051              29/Apr/2024  11:26:06
// Copyright 2004-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Components\stack\zdo\ZDObject.c
//    Command line       =  
//        -f C:\Users\Со\AppData\Local\Temp\EW5DF0.tmp
//        (D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Components\stack\zdo\ZDObject.c
//        -D xNWK_AUTO_POLL -D ZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D
//        xMT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\EndDeviceEB\List
//        -lA
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\EndDeviceEB\List
//        --diag_suppress Pe001,Pa010 -o
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\EndDeviceEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 8 -f
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0x520
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440) -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\Source\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\osal\mcu\ccsoc\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes --no_code_motion)
//    Locale             =  Chinese (Simplified)_China.936
//    List file          =  
//        D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Projects\zstack\Samples\GenericApp_project\CC2530DB\EndDeviceEB\List\ZDObject.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V5
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?VB
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN __INIT_XDATA_Z

        PUBLIC `??NLME_PermitJoiningTimeout::?relay`
        FUNCTION `??NLME_PermitJoiningTimeout::?relay`,0203H
        PUBLIC `??ZDMatchSendState::?relay`
        FUNCTION `??ZDMatchSendState::?relay`,0203H
        PUBLIC `??ZDO_AnyClusterMatches::?relay`
        FUNCTION `??ZDO_AnyClusterMatches::?relay`,0203H
        PUBLIC `??ZDO_BuildSimpleDescBuf::?relay`
        FUNCTION `??ZDO_BuildSimpleDescBuf::?relay`,0203H
        FUNCTION `??ZDO_CompareClusterLists::?relay`,0203H
        PUBLIC `??ZDO_ConvertOTAClusters::?relay`
        FUNCTION `??ZDO_ConvertOTAClusters::?relay`,0203H
        FUNCTION `??ZDO_CopyMatchInfo::?relay`,0203H
        FUNCTION `??ZDO_EndDeviceBindMatchTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_EndDeviceTimeoutCB::?relay`
        FUNCTION `??ZDO_EndDeviceTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_Init::?relay`
        FUNCTION `??ZDO_Init::?relay`,0203H
        PUBLIC `??ZDO_MatchEndDeviceBind::?relay`
        FUNCTION `??ZDO_MatchEndDeviceBind::?relay`,0203H
        PUBLIC `??ZDO_ParseAddrRsp::?relay`
        FUNCTION `??ZDO_ParseAddrRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseBindUnbindReq::?relay`
        FUNCTION `??ZDO_ParseBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseDeviceAnnce::?relay`
        FUNCTION `??ZDO_ParseDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParseEPListRsp::?relay`
        FUNCTION `??ZDO_ParseEPListRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceBindReq::?relay`
        FUNCTION `??ZDO_ParseEndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmNwkDiscRsp::?relay`
        FUNCTION `??ZDO_ParseMgmNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtBindRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtLqiRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtRtgRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseNodeDescRsp::?relay`
        FUNCTION `??ZDO_ParseNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParsePowerDescRsp::?relay`
        FUNCTION `??ZDO_ParsePowerDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseServerDiscRsp::?relay`
        FUNCTION `??ZDO_ParseServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescBuf::?relay`
        FUNCTION `??ZDO_ParseSimpleDescBuf::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ParseSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseUserDescRsp::?relay`
        FUNCTION `??ZDO_ParseUserDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessBindUnbindReq::?relay`
        FUNCTION `??ZDO_ProcessBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtDirectJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtRtgReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtRtgReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessServerDiscReq::?relay`
        FUNCTION `??ZDO_ProcessServerDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescReq::?relay`
        FUNCTION `??ZDO_ProcessUserDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescSet::?relay`
        FUNCTION `??ZDO_ProcessUserDescSet::?relay`,0203H
        FUNCTION `??ZDO_RemoveMatchMemory::?relay`,0203H
        PUBLIC `??ZDO_StartDevice::?relay`
        FUNCTION `??ZDO_StartDevice::?relay`,0203H
        PUBLIC `??ZDO_UpdateAddrManager::?relay`
        FUNCTION `??ZDO_UpdateAddrManager::?relay`,0203H
        PUBLIC `??ZDO_UpdateNwkStatus::?relay`
        FUNCTION `??ZDO_UpdateNwkStatus::?relay`,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDMatchSendState
        FUNCTION ZDMatchSendState,0a1203H
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 45, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,080203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CompareClusterLists,080203H
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,080203H
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CopyMatchInfo,0a1203H
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 17, STACK
        FUNCTION ZDO_EndDeviceBindMatchTimeoutCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_MatchEndDeviceBind
        FUNCTION ZDO_MatchEndDeviceBind,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 63, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 40, STACK
        FUNCTION ZDO_RemoveMatchMemory,021203H
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC apsChannelMask
        PUBLIC matchED
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
`??APSME_BindRequest::?relay` SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
`??APSME_GetRequest::?relay` SYMBOL "?relay", APSME_GetRequest
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
`??APSME_LookupNwkAddr::?relay` SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
`??APSME_UnBindRequest::?relay` SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
`??APS_ReflectorInit::?relay` SYMBOL "?relay", APS_ReflectorInit
APS_SetEndDeviceBindTimeout SYMBOL "APS_SetEndDeviceBindTimeout"
`??APS_SetEndDeviceBindTimeout::?relay` SYMBOL "?relay", APS_SetEndDeviceBindTimeout
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
`??AddrMgrEntryLookupNwk::?relay` SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
`??AddrMgrEntryUpdate::?relay` SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
`??AddrMgrExtAddrSet::?relay` SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
`??AddrMgrExtAddrValid::?relay` SYMBOL "?relay", AddrMgrExtAddrValid
AssocCount          SYMBOL "AssocCount"
`??AssocCount::?relay` SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
`??AssocFindDevice::?relay` SYMBOL "?relay", AssocFindDevice
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
`??NLME_CheckNewAddrSet::?relay` SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_DeviceJoiningInit SYMBOL "NLME_DeviceJoiningInit"
`??NLME_DeviceJoiningInit::?relay` SYMBOL "?relay", NLME_DeviceJoiningInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
`??NLME_DirectJoinRequest::?relay` SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
`??NLME_GetCoordExtAddr::?relay` SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
`??NLME_GetCoordShortAddr::?relay` SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetRequest     SYMBOL "NLME_GetRequest"
`??NLME_GetRequest::?relay` SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
`??NLME_IsAddressBroadcast::?relay` SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
`??NLME_LeaveReq::?relay` SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkDiscoveryRequest SYMBOL "NLME_NetworkDiscoveryRequest"
`??NLME_NetworkDiscoveryRequest::?relay` SYMBOL "?relay", NLME_NetworkDiscoveryRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
`??NLME_NwkDiscReq2::?relay` SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
`??NLME_NwkDiscTerm::?relay` SYMBOL "?relay", NLME_NwkDiscTerm
NLME_OrphanJoinRequest SYMBOL "NLME_OrphanJoinRequest"
`??NLME_OrphanJoinRequest::?relay` SYMBOL "?relay", NLME_OrphanJoinRequest
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
`??NLME_PermitJoiningRequest::?relay` SYMBOL "?relay", NLME_PermitJoiningRequest
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
`??RTG_RemoveRtgEntry::?relay` SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
`??ZDApp_NVUpdate::?relay` SYMBOL "?relay", ZDApp_NVUpdate
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZMacSetReq          SYMBOL "ZMacSetReq"
`??ZMacSetReq::?relay` SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
`??afEndPoints::?relay` SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
`??afFindSimpleDesc::?relay` SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
`??afNumEndPoints::?relay` SYMBOL "?relay", afNumEndPoints
bindNumOfEntries    SYMBOL "bindNumOfEntries"
`??bindNumOfEntries::?relay` SYMBOL "?relay", bindNumOfEntries
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
`??nwkNeighborRemoveAllStranded::?relay` SYMBOL "?relay", nwkNeighborRemoveAllStranded
nwk_ScanJoiningOrphan SYMBOL "nwk_ScanJoiningOrphan"
`??nwk_ScanJoiningOrphan::?relay` SYMBOL "?relay", nwk_ScanJoiningOrphan
osal_build_uint32   SYMBOL "osal_build_uint32"
`??osal_build_uint32::?relay` SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
`??osal_msg_find::?relay` SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
`??osal_set_event::?relay` SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
`??NLME_PermitJoiningTimeout::?relay` SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDMatchSendState    SYMBOL "ZDMatchSendState"
`??ZDMatchSendState::?relay` SYMBOL "?relay", ZDMatchSendState
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
`??ZDO_AnyClusterMatches::?relay` SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
`??ZDO_BuildSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
`??ZDO_ConvertOTAClusters::?relay` SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
`??ZDO_EndDeviceTimeoutCB::?relay` SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_Init            SYMBOL "ZDO_Init"
`??ZDO_Init::?relay` SYMBOL "?relay", ZDO_Init
ZDO_MatchEndDeviceBind SYMBOL "ZDO_MatchEndDeviceBind"
`??ZDO_MatchEndDeviceBind::?relay` SYMBOL "?relay", ZDO_MatchEndDeviceBind
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
`??ZDO_ParseAddrRsp::?relay` SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
`??ZDO_ParseBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
`??ZDO_ParseDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
`??ZDO_ParseEPListRsp::?relay` SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
`??ZDO_ParseEndDeviceBindReq::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
`??ZDO_ParseMgmNwkDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
`??ZDO_ParseMgmtBindRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
`??ZDO_ParseMgmtLqiRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
`??ZDO_ParseMgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
`??ZDO_ParseMgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
`??ZDO_ParseMgmtRtgRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
`??ZDO_ParseNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
`??ZDO_ParsePowerDescRsp::?relay` SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
`??ZDO_ParseServerDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
`??ZDO_ParseSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
`??ZDO_ParseSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
`??ZDO_ParseUserDescRsp::?relay` SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
`??ZDO_ProcessBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
`??ZDO_ProcessMgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
`??ZDO_ProcessMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
`??ZDO_ProcessMgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
`??ZDO_ProcessMgmtRtgReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
`??ZDO_ProcessServerDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
`??ZDO_ProcessUserDescReq::?relay` SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
`??ZDO_ProcessUserDescSet::?relay` SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
`??ZDO_StartDevice::?relay` SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
`??ZDO_UpdateAddrManager::?relay` SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
`??ZDO_UpdateNwkStatus::?relay` SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN `??APSME_BindRequest::?relay`
        FUNCTION `??APSME_BindRequest::?relay`,00H
        EXTERN `??APSME_GetRequest::?relay`
        FUNCTION `??APSME_GetRequest::?relay`,00H
        EXTERN `??APSME_LookupNwkAddr::?relay`
        FUNCTION `??APSME_LookupNwkAddr::?relay`,00H
        EXTERN `??APSME_UnBindRequest::?relay`
        FUNCTION `??APSME_UnBindRequest::?relay`,00H
        EXTERN `??APS_ReflectorInit::?relay`
        FUNCTION `??APS_ReflectorInit::?relay`,00H
        EXTERN `??APS_SetEndDeviceBindTimeout::?relay`
        FUNCTION `??APS_SetEndDeviceBindTimeout::?relay`,00H
        EXTERN `??AddrMgrEntryLookupNwk::?relay`
        FUNCTION `??AddrMgrEntryLookupNwk::?relay`,00H
        EXTERN `??AddrMgrEntryUpdate::?relay`
        FUNCTION `??AddrMgrEntryUpdate::?relay`,00H
        EXTERN `??AddrMgrExtAddrSet::?relay`
        FUNCTION `??AddrMgrExtAddrSet::?relay`,00H
        EXTERN `??AddrMgrExtAddrValid::?relay`
        FUNCTION `??AddrMgrExtAddrValid::?relay`,00H
        EXTERN `??AssocCount::?relay`
        FUNCTION `??AssocCount::?relay`,00H
        EXTERN `??AssocFindDevice::?relay`
        FUNCTION `??AssocFindDevice::?relay`,00H
        EXTERN `??NLME_CheckNewAddrSet::?relay`
        FUNCTION `??NLME_CheckNewAddrSet::?relay`,00H
        EXTERN `??NLME_DeviceJoiningInit::?relay`
        FUNCTION `??NLME_DeviceJoiningInit::?relay`,00H
        EXTERN `??NLME_DirectJoinRequest::?relay`
        FUNCTION `??NLME_DirectJoinRequest::?relay`,00H
        EXTERN `??NLME_GetCoordExtAddr::?relay`
        FUNCTION `??NLME_GetCoordExtAddr::?relay`,00H
        EXTERN `??NLME_GetCoordShortAddr::?relay`
        FUNCTION `??NLME_GetCoordShortAddr::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetRequest::?relay`
        FUNCTION `??NLME_GetRequest::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??NLME_IsAddressBroadcast::?relay`
        FUNCTION `??NLME_IsAddressBroadcast::?relay`,00H
        EXTERN `??NLME_LeaveReq::?relay`
        FUNCTION `??NLME_LeaveReq::?relay`,00H
        EXTERN `??NLME_NetworkDiscoveryRequest::?relay`
        FUNCTION `??NLME_NetworkDiscoveryRequest::?relay`,00H
        EXTERN `??NLME_NwkDiscReq2::?relay`
        FUNCTION `??NLME_NwkDiscReq2::?relay`,00H
        EXTERN `??NLME_NwkDiscTerm::?relay`
        FUNCTION `??NLME_NwkDiscTerm::?relay`,00H
        EXTERN `??NLME_OrphanJoinRequest::?relay`
        FUNCTION `??NLME_OrphanJoinRequest::?relay`,00H
        EXTERN `??NLME_PermitJoiningRequest::?relay`
        FUNCTION `??NLME_PermitJoiningRequest::?relay`,00H
        EXTERN `??RTG_RemoveRtgEntry::?relay`
        FUNCTION `??RTG_RemoveRtgEntry::?relay`,00H
        EXTERN `??ZDApp_NVUpdate::?relay`
        FUNCTION `??ZDApp_NVUpdate::?relay`,00H
        EXTERN `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,00H
        EXTERN `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,00H
        EXTERN `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,00H
        EXTERN `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,00H
        EXTERN `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,00H
        EXTERN `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,00H
        EXTERN `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,00H
        EXTERN `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,00H
        EXTERN `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,00H
        EXTERN `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,00H
        EXTERN `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,00H
        EXTERN `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,00H
        EXTERN `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,00H
        EXTERN `??ZMacSetReq::?relay`
        FUNCTION `??ZMacSetReq::?relay`,00H
        EXTERN `??afEndPoints::?relay`
        FUNCTION `??afEndPoints::?relay`,00H
        EXTERN `??afFindSimpleDesc::?relay`
        FUNCTION `??afFindSimpleDesc::?relay`,00H
        EXTERN `??afNumEndPoints::?relay`
        FUNCTION `??afNumEndPoints::?relay`,00H
        EXTERN `??bindNumOfEntries::?relay`
        FUNCTION `??bindNumOfEntries::?relay`,00H
        EXTERN `??nwkNeighborRemoveAllStranded::?relay`
        FUNCTION `??nwkNeighborRemoveAllStranded::?relay`,00H
        EXTERN `??nwk_ScanJoiningOrphan::?relay`
        FUNCTION `??nwk_ScanJoiningOrphan::?relay`,00H
        EXTERN `??osal_build_uint32::?relay`
        FUNCTION `??osal_build_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_find::?relay`
        FUNCTION `??osal_msg_find::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??osal_set_event::?relay`
        FUNCTION `??osal_set_event::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AIB_MaxBindingTime
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_SetEndDeviceBindTimeout
        FUNCTION APS_SetEndDeviceBindTimeout,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DeviceJoiningInit
        FUNCTION NLME_DeviceJoiningInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkDiscoveryRequest
        FUNCTION NLME_NetworkDiscoveryRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_OrphanJoinRequest
        FUNCTION NLME_OrphanJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 63, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_TransID
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bindNumOfEntries
        FUNCTION bindNumOfEntries,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN devState
        EXTERN epList
        EXTERN gNWK_MAX_BINDING_ENTRIES
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_ScanJoiningOrphan
        FUNCTION nwk_ScanJoiningOrphan,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgDefaultChannelList
        EXTERN zgDefaultStartingScanDuration
        EXTERN zgDeviceLogicalType

// D:\qtfile\ZStack-CC2530-2.4.0-1.4.0\ZStack-CC2530-2.4.0-1.4.0\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2010-06-28 16:07:20 -0700 (Mon, 28 Jun 2010) $
//    4   Revision:       $Revision: 22834 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2010 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComdef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #if defined( LCD_SUPPORTED )
//   67   #include "OnBoard.h"
//   68 #endif
//   69 
//   70 /* HAL */
//   71 #include "hal_lcd.h"
//   72 
//   73 /*********************************************************************
//   74  * MACROS
//   75  */
//   76 
//   77 /*********************************************************************
//   78  * CONSTANTS
//   79  */
//   80 // NLME Stub Implementations
//   81 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   82 
//   83 // Status fields used by ZDO_ProcessMgmtRtgReq
//   84 #define ZDO_MGMT_RTG_ENTRY_ACTIVE             0x00
//   85 #define ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY 0x01
//   86 #define ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED   0x02
//   87 #define ZDO_MGMT_RTG_ENTRY_INACTIVE           0x03
//   88 
//   89 /*********************************************************************
//   90  * TYPEDEFS
//   91  */
//   92 #if defined ( REFLECTOR )
//   93 typedef struct
//   94 {
//   95   byte SrcTransSeq;
//   96   zAddrType_t SrcAddr;
//   97   uint16 LocalCoordinator;
//   98   byte epIntf;
//   99   uint16 ProfileID;
//  100   byte numInClusters;
//  101   uint16 *inClusters;
//  102   byte numOutClusters;
//  103   uint16 *outClusters;
//  104   byte SecurityUse;
//  105   byte status;
//  106 } ZDO_EDBind_t;
//  107 #endif // defined ( REFLECTOR )
//  108 
//  109 enum
//  110 {
//  111   ZDMATCH_INIT,           // Initialized
//  112   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  113   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  114 };
//  115 
//  116 enum
//  117 {
//  118   ZDMATCH_SENDING_NOT,
//  119   ZDMATCH_SENDING_UNBIND,
//  120   ZDMATCH_SENDING_BIND
//  121 };
//  122 
//  123 /*********************************************************************
//  124  * GLOBAL VARIABLES
//  125  */
//  126 
//  127 /*********************************************************************
//  128  * EXTERNAL VARIABLES
//  129  */
//  130 
//  131 /*********************************************************************
//  132  * EXTERNAL FUNCTIONS
//  133  */
//  134 
//  135 /*********************************************************************
//  136  * LOCAL VARIABLES
//  137  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  138 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  139 
//  140 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  141 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  142 #endif
//  143 
//  144 #if defined ( MANAGED_SCAN )
//  145   uint32 managedScanNextChannel = 0;
//  146   uint32 managedScanChannelMask = 0;
//  147   uint8  managedScanTimesPerChannel = 0;
//  148 #endif
//  149 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  150 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  151 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  152 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  153 
//  154 /*********************************************************************
//  155  * LOCAL FUNCTIONS
//  156  */
//  157 static void ZDODeviceSetup( void );
//  158 #if defined ( MANAGED_SCAN )
//  159   static void ZDOManagedScan_Next( void );
//  160 #endif
//  161 #if defined ( REFLECTOR )
//  162   static void ZDO_RemoveEndDeviceBind( void );
//  163   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  164 #endif
//  165 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  166                                 byte numList2, uint16 *list2, uint16 *pMatches );
//  167 static void ZDO_RemoveMatchMemory( void );
//  168 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  169 static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  170 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  171 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  172 
//  173 /*********************************************************************
//  174  * @fn          ZDO_Init
//  175  *
//  176  * @brief       ZDObject and ZDProfile initialization.
//  177  *
//  178  * @param       none
//  179  *
//  180  * @return      none
//  181  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  182 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  183 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_DeviceJoiningInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  184   // Initialize ZD items
//  185   #if defined ( REFLECTOR )
//  186   ZDO_EDBind = NULL;
        MOV       DPTR,#ZDO_EDBind
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  187   #endif
//  188 
//  189   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  190   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,#AIB_apsUseExtendedPANID & 0xff
        MOV       R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV       R2,#ZDO_UseExtendedPANID & 0xff
        MOV       R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  191 
//  192   // Setup the device - type of device to create.
//  193   ZDODeviceSetup();
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JNZ       ??ZDO_Init_0
        MOV       R1,#0x0
        SJMP      ??ZDO_Init_1
??ZDO_Init_0:
        MOV       R1,#0x1
??ZDO_Init_1:
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL     `??APS_ReflectorInit::?relay`; Banked call to: APS_ReflectorInit
        ; Setup parameters for call to function NLME_DeviceJoiningInit
        LCALL     `??NLME_DeviceJoiningInit::?relay`; Banked call to: NLME_DeviceJoiningInit
//  194 }
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  195 
//  196 #if defined ( MANAGED_SCAN )
//  197 /*********************************************************************
//  198  * @fn      ZDOManagedScan_Next()
//  199  *
//  200  * @brief   Setup a managed scan.
//  201  *
//  202  * @param   none
//  203  *
//  204  * @return  none
//  205  */
//  206 static void ZDOManagedScan_Next( void )
//  207 {
//  208   // Is it the first time
//  209   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  210   {
//  211     // Setup the defaults
//  212     managedScanNextChannel  = 1;
//  213 
//  214     while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  215       managedScanNextChannel <<= 1;
//  216 
//  217     managedScanChannelMask = managedScanNextChannel;
//  218     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  219   }
//  220   else
//  221   {
//  222     // Do we need to go to the next channel
//  223     if ( managedScanTimesPerChannel == 0 )
//  224     {
//  225       // Find next active channel
//  226       managedScanChannelMask  = managedScanNextChannel;
//  227       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  228     }
//  229     else
//  230     {
//  231       managedScanTimesPerChannel--;
//  232 
//  233       if ( managedScanTimesPerChannel == 0 )
//  234       {
//  235         managedScanNextChannel  <<= 1;
//  236         while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  237           managedScanNextChannel <<= 1;
//  238 
//  239         if ( managedScanNextChannel == 0 )
//  240           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  241       }
//  242     }
//  243   }
//  244 }
//  245 #endif // MANAGED_SCAN
//  246 
//  247 /*********************************************************************
//  248  * @fn      ZDODeviceSetup()
//  249  *
//  250  * @brief   Call set functions depending on the type of device compiled.
//  251  *
//  252  * @param   none
//  253  *
//  254  * @return  none
//  255  */
//  256 static void ZDODeviceSetup( void )
//  257 {
//  258   if ( ZG_BUILD_COORDINATOR_TYPE )
//  259   {
//  260     NLME_CoordinatorInit();
//  261   }
//  262 
//  263 #if defined ( REFLECTOR )
//  264   APS_ReflectorInit( (ZG_DEVICE_COORDINATOR_TYPE) ? APS_REFLECTOR_PUBLIC :  APS_REFLECTOR_PRIVATE );
//  265 #endif
//  266 
//  267   if ( ZG_BUILD_JOINING_TYPE )
//  268   {
//  269     NLME_DeviceJoiningInit();
//  270   }
//  271 }
//  272 
//  273 /*********************************************************************
//  274  * @fn          ZDO_StartDevice
//  275  *
//  276  * @brief       This function starts a device in a network.
//  277  *
//  278  * @param       logicalType     - Device type to start
//  279  *              startMode       - indicates mode of device startup
//  280  *              beaconOrder     - indicates time betwen beacons
//  281  *              superframeOrder - indicates length of active superframe
//  282  *
//  283  * @return      none
//  284  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  285 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  286 {
        FUNCALL ZDO_StartDevice, NLME_NetworkDiscoveryRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, nwk_ScanJoiningOrphan
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_OrphanJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R1
        MOV       R7,A
        MOV       A,R2
        MOV       R6,A
//  287   ZStatus_t ret;
//  288 #if defined ( ZIGBEE_FREQ_AGILITY )
//  289   static uint8 discRetries = 0;
//  290 #endif
//  291 #if defined ( ZIGBEE_COMMISSIONING )
//  292   static uint8 scanCnt = 0;
//  293 #endif
//  294 
//  295   ret = ZUnsupportedMode;
//  296 
//  297   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
//  298   {
//  299     if ( startMode == MODE_HARD )
//  300     {
//  301       devState = DEV_COORD_STARTING;
//  302       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, zgDefaultChannelList,
//  303                                           zgDefaultStartingScanDuration, beaconOrder,
//  304                                           superframeOrder, false );
//  305     }
//  306     else if ( startMode == MODE_RESUME )
//  307     {
//  308       // Just start the coordinator
//  309       devState = DEV_COORD_STARTING;
//  310       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
//  311     }
//  312     else
//  313     {
//  314 #if defined( LCD_SUPPORTED )
//  315       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  316 #endif
//  317     }
//  318   }
//  319 
//  320   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
        MOV       A,#0x1
        XRL       A,R7
        JZ        ??ZDO_StartDevice_0
        MOV       A,#0x2
        XRL       A,R7
        JZ        $+5
        LJMP      ??ZDO_StartDevice_1 & 0xFFFF
//  321   {
//  322     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
??ZDO_StartDevice_0:
        MOV       A,R6
        JZ        ??ZDO_StartDevice_2
        MOV       A,#0x3
        XRL       A,R6
        JNZ       ??ZDO_StartDevice_3
//  323     {
//  324       devState = DEV_NWK_DISC;
??ZDO_StartDevice_2:
        MOV       DPTR,#devState
        MOV       A,#0x2
        LCALL     ?Subroutine39 & 0xFFFF
//  325 
//  326   #if defined( MANAGED_SCAN )
//  327       ZDOManagedScan_Next();
//  328       ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  329   #else
//  330       ret = NLME_NetworkDiscoveryRequest( zgDefaultChannelList, zgDefaultStartingScanDuration );
??CrossCallReturnLabel_53:
        LCALL     ?XLOAD_R2345
        LCALL     `??NLME_NetworkDiscoveryRequest::?relay`; Banked call to: NLME_NetworkDiscoveryRequest
        MOV       A,R1
        MOV       R0,A
//  331     #if defined ( ZIGBEE_FREQ_AGILITY )
//  332       if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  333             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
//  334       {
//  335         // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  336         // change will not be recieved. On these devices or routers that have
//  337         // lost the network, an active scan shall be conducted on the Default
//  338         // Channel list using the extended PANID to find the network. If the
//  339         // extended PANID isn't found using the Default Channel list, an scan
//  340         // should be completed using all channels.
//  341         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
//  342       }
//  343     #endif // ZIGBEE_FREQ_AGILITY
//  344     #if defined ( ZIGBEE_COMMISSIONING )
//  345       if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
        MOV       A,#0x3
        XRL       A,R6
        JNZ       ??ZDO_StartDevice_4
        MOV       DPTR,#??scanCnt
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0x1
        ADD       A,R1
        MOVX      @DPTR,A
        MOV       A,R1
        CLR       C
        SUBB      A,#0x5
        JC        ??ZDO_StartDevice_4
//  346       {
//  347         // When ApsUseExtendedPanID is commissioned to a non zero value via
//  348         // application specific means, the device shall conduct an active scan
//  349         // on the Default Channel list and join the PAN with the same
//  350         // ExtendedPanID. If the PAN is not found, an scan should be completed
//  351         // on all channels.
//  352         // When devices rejoin the network and the PAN is not found from
//  353         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
        MOV       DPTR,#zgDefaultChannelList
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x8
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#0x7
        MOVX      @DPTR,A
        SJMP      ??ZDO_StartDevice_4
//  354       }
//  355     #endif // ZIGBEE_COMMISSIONING
//  356   #endif
//  357     }
//  358     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_3:
        MOV       A,#0x1
        XRL       A,R6
        JNZ       ??ZDO_StartDevice_1
//  359     {
//  360       if ( logicalType == NODETYPE_ROUTER )
        MOV       A,#0x1
        XRL       A,R7
        MOV       DPTR,#devState
        JNZ       ??ZDO_StartDevice_5
//  361       {
//  362         ZMacScanCnf_t scanCnf;
//  363         devState = DEV_NWK_ORPHAN;
        MOV       A,#0xa
        MOVX      @DPTR,A
//  364 
//  365         /* if router and nvram is available, fake successful orphan scan */
//  366         scanCnf.hdr.Status = ZSUCCESS;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
//  367         scanCnf.ScanType = ZMAC_ORPHAN_SCAN;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x3
        MOVX      @DPTR,A
//  368         scanCnf.UnscannedChannels = 0;
        INC       A
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  369         scanCnf.ResultListSize = 0;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
//  370         nwk_ScanJoiningOrphan(&scanCnf);
        ; Setup parameters for call to function nwk_ScanJoiningOrphan
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??nwk_ScanJoiningOrphan::?relay`; Banked call to: nwk_ScanJoiningOrphan
//  371 
//  372         ret = ZSuccess;
        SJMP      ??ZDO_StartDevice_6
//  373       }
//  374       else
//  375       {
//  376         devState = DEV_NWK_ORPHAN;
??ZDO_StartDevice_5:
        MOV       A,#0xa
        LCALL     ?Subroutine39 & 0xFFFF
//  377         ret = NLME_OrphanJoinRequest( zgDefaultChannelList,
//  378                                       zgDefaultStartingScanDuration );
//  379       }
//  380     }
//  381     else
//  382     {
//  383 #if defined( LCD_SUPPORTED )
//  384       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  385 #endif
//  386     }
//  387   }
??CrossCallReturnLabel_54:
        LCALL     ?XLOAD_R2345
        LCALL     `??NLME_OrphanJoinRequest::?relay`; Banked call to: NLME_OrphanJoinRequest
        MOV       A,R1
        MOV       R0,A
//  388 
//  389   if ( ret != ZSuccess )
??ZDO_StartDevice_4:
        MOV       A,R0
        JZ        ??ZDO_StartDevice_6
//  390     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_1:
        ; Setup parameters for call to function osal_start_timerEx
        MOV       R4,#-0x18
        MOV       R5,#0x3
        MOV       R2,#0x1
        MOV       R3,#0x0
        MOV       DPTR,#ZDAppTaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
//  391 }
??ZDO_StartDevice_6:
        MOV       A,#0xb
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock1
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond3 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_53
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond4 Using cfiCommon0
          CFI (cfiCond4) Function ZDO_StartDevice
          CFI (cfiCond4) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond4) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond4) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond4) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond4) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond4) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond4) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond4) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond4) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond4) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond4) CFA_SP SP+-2
          CFI (cfiCond4) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker5 Using cfiCommon1
          CFI (cfiPicker5) NoFunction
          CFI (cfiPicker5) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function NLME_NetworkDiscoveryRequest
        ; Setup parameters for call to function NLME_OrphanJoinRequest
        MOV       DPTR,#zgDefaultStartingScanDuration
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPTR,#zgDefaultChannelList
        RET
          CFI EndBlock cfiCond3
          CFI EndBlock cfiCond4
          CFI EndBlock cfiPicker5

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??scanCnt:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  392 
//  393 /**************************************************************************************************
//  394  * @fn          zdoSendStateChangeMsg
//  395  *
//  396  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  397  *
//  398  * input parameters
//  399  *
//  400  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  401  * @param       state - The current device state.
//  402  *
//  403  * output parameters
//  404  *
//  405  * None.
//  406  *
//  407  * @return      None.
//  408  **************************************************************************************************
//  409  */
//  410 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
//  411 {
//  412   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
//  413 
//  414   if (NULL == pMsg)
//  415   {
//  416     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
//  417     {
//  418       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  419       // try again later when more Heap may be available.
//  420       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
//  421     }
//  422     else
//  423     {
//  424       pMsg->event = ZDO_STATE_CHANGE;
//  425       pMsg->status = state;
//  426 
//  427       (void)osal_msg_send(taskId, (uint8 *)pMsg);
//  428     }
//  429   }
//  430   else
//  431   {
//  432     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  433     pMsg->status = state;
//  434   }
//  435 }
//  436 
//  437 /**************************************************************************************************
//  438  * @fn          ZDO_UpdateNwkStatus
//  439  *
//  440  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  441  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  442  *              than one registered EndPoint, it will only receive one notification per state
//  443  *              change. Although the device may go through a sequence of state changes, the
//  444  *              Application task may only receive notification of the final, steady-state state
//  445  *              because it has the lowest priority and never even runs to receive the intermediate
//  446  *              state change notifications.
//  447  *
//  448  * input parameters
//  449  *
//  450  * @param       state - The current device state.
//  451  *
//  452  * output parameters
//  453  *
//  454  * None.
//  455  *
//  456  * @return      None.
//  457  **************************************************************************************************
//  458  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  459 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  460 {
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       ?V1,R1
//  461   epList_t *pItem = epList;
        MOV       DPTR,#epList
        SJMP      ??ZDO_UpdateNwkStatus_0
//  462 
//  463   while (pItem != NULL)
//  464   {
//  465     if (pItem->epDesc->endPoint != ZDO_EP)
//  466     {
//  467       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
??ZDO_UpdateNwkStatus_1:
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
//  468     }
//  469 
//  470     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_2:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
??ZDO_UpdateNwkStatus_0:
        LCALL     ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_423:
        ORL       A,R7
        JZ        ??ZDO_UpdateNwkStatus_3
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_399:
        JZ        ??ZDO_UpdateNwkStatus_2
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine216_0 & 0xFFFF
//  471   }
??CrossCallReturnLabel_346:
        LCALL     ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_400:
        MOV       ?V0,A
        ; Setup parameters for call to function osal_msg_find
        MOV       R2,#-0x2f
        MOV       R1,A
        LCALL     `??osal_msg_find::?relay`; Banked call to: osal_msg_find
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,DPL
        ORL       A,DPH
        JNZ       ??ZDO_UpdateNwkStatus_1
        ; Setup parameters for call to function osal_msg_allocate
        MOV       R2,#0x2
        MOV       R3,#0x0
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       A,R2
        ORL       A,R3
        JNZ       ??ZDO_UpdateNwkStatus_4
        ; Setup parameters for call to function osal_set_event
        MOV       R2,#0x10
        MOV       R3,#0x0
        MOV       DPTR,#ZDAppTaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_set_event::?relay`; Banked call to: osal_set_event
        SJMP      ??ZDO_UpdateNwkStatus_2
??ZDO_UpdateNwkStatus_4:
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x2f
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_msg_send
        MOV       R1,?V0
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
        SJMP      ??ZDO_UpdateNwkStatus_2
//  472 #if defined MT_ZDO_CB_FUNC
//  473   zdoSendStateChangeMsg(state, MT_TaskID);
//  474 #endif
//  475 
//  476   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_3:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ??Subroutine224_0 & 0xFFFF
//  477   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_384:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
//  478 }
        SJMP      ??Subroutine210_0
          CFI EndBlock cfiBlock6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock7
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine210_0:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock8
//  479 
//  480 #if defined ( REFLECTOR )
//  481 /*********************************************************************
//  482  * @fn          ZDO_RemoveEndDeviceBind
//  483  *
//  484  * @brief       Remove the end device bind
//  485  *
//  486  * @param  none
//  487  *
//  488  * @return      none
//  489  */
//  490 static void ZDO_RemoveEndDeviceBind( void )
//  491 {
//  492   if ( ZDO_EDBind != NULL )
//  493   {
//  494     // Free the RAM
//  495     if ( ZDO_EDBind->inClusters != NULL )
//  496       osal_mem_free( ZDO_EDBind->inClusters );
//  497     if ( ZDO_EDBind->outClusters != NULL )
//  498       osal_mem_free( ZDO_EDBind->outClusters );
//  499     osal_mem_free( ZDO_EDBind );
//  500     ZDO_EDBind = NULL;
//  501   }
//  502 }
//  503 #endif // REFLECTOR
//  504 
//  505 #if defined ( REFLECTOR )
//  506 /*********************************************************************
//  507  * @fn          ZDO_RemoveEndDeviceBind
//  508  *
//  509  * @brief       Remove the end device bind
//  510  *
//  511  * @param  none
//  512  *
//  513  * @return      none
//  514  */
//  515 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  516 {
//  517   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  518 
//  519 #if defined( LCD_SUPPORTED )
//  520   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  521   if ( Status == ZDP_SUCCESS )
//  522     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  523   else
//  524     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  525 #endif
//  526 
//  527 }
//  528 #endif // REFLECTOR
//  529 
//  530 /*********************************************************************
//  531  * @fn          ZDO_CompareClusterLists
//  532  *
//  533  * @brief       Compare one list to another list
//  534  *
//  535  * @param       numList1 - number of items in list 1
//  536  * @param       list1 - first list of cluster IDs
//  537  * @param       numList2 - number of items in list 2
//  538  * @param       list2 - second list of cluster IDs
//  539  * @param       pMatches - buffer to put matches
//  540  *
//  541  * @return      number of matches
//  542  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  543 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
ZDO_CompareClusterLists:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
        CODE
//  544                           byte numList2, uint16 *list2, uint16 *pMatches )
//  545 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V0,R1
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
//  546   byte x, y;
//  547   uint16 z;
//  548   byte numMatches = 0;
        MOV       R2,#0x0
//  549 
//  550   // Check the first in against the seconds out
//  551   for ( x = 0; x < numList1; x++ )
        MOV       R3,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_295:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_424:
        SJMP      ??ZDO_CompareClusterLists_0
//  552   {
//  553     for ( y = 0; y < numList2; y++ )
//  554     {
//  555       z = list2[y];
??ZDO_CompareClusterLists_1:
        MOV       R0,?V1
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,R4
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R5
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
//  556       if ( list1[x] == z )
        MOV       A,R3
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_180:
        MOV       A,?V6
        ADD       A,R0
        MOV       DPL,A
        MOV       A,?V7
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??ZDO_CompareClusterLists_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V3
??ZDO_CompareClusterLists_2:
        JNZ       ??ZDO_CompareClusterLists_3
//  557         pMatches[numMatches++] = z;
        MOV       A,R2
        LCALL     ?Subroutine116 & 0xFFFF
//  558     }
??CrossCallReturnLabel_181:
        MOV       A,R6
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R7
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        INC       R2
??ZDO_CompareClusterLists_3:
        INC       ?V1
??ZDO_CompareClusterLists_4:
        MOV       A,?V1
        CLR       C
        SUBB      A,?V4
        JC        ??ZDO_CompareClusterLists_1
        INC       R3
??ZDO_CompareClusterLists_0:
        MOV       A,R3
        CLR       C
        SUBB      A,?V0
        JNC       ??ZDO_CompareClusterLists_5
        MOV       ?V1,#0x0
        SJMP      ??ZDO_CompareClusterLists_4
//  559   }
//  560 
//  561   return ( numMatches );
??ZDO_CompareClusterLists_5:
        MOV       A,R2
        MOV       R1,A
        LJMP      ??Subroutine217_0 & 0xFFFF
//  562 }
          CFI EndBlock cfiBlock9
//  563 
//  564 /*********************************************************************
//  565  * Utility functions
//  566  */
//  567 
//  568 /*********************************************************************
//  569  * @fn          ZDO_CompareByteLists
//  570  *
//  571  * @brief       Compares two lists for matches.
//  572  *
//  573  * @param       ACnt  - number of entries in list A
//  574  * @param       AList  - List A
//  575  * @param       BCnt  - number of entries in list B
//  576  * @param       BList  - List B
//  577  *
//  578  * @return      true if a match is found
//  579  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  580 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  581 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R1
        MOV       R6,A
        MOV       ?V2,R4
//  582   byte x, y;
//  583 
//  584   for ( x = 0; x < ACnt; x++ )
        MOV       R7,#0x0
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_537:
        SJMP      ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC       R7
??ZDO_AnyClusterMatches_0:
        MOV       A,R7
        CLR       C
        SUBB      A,R6
        JNC       ??ZDO_AnyClusterMatches_2
//  585   {
//  586     for ( y = 0; y < BCnt; y++ )
        MOV       ?V3,#0x0
        SJMP      ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC       ?V3
??ZDO_AnyClusterMatches_3:
        MOV       A,?V3
        CLR       C
        SUBB      A,?V2
        JNC       ??ZDO_AnyClusterMatches_1
//  587     {
//  588       if ( AList[x] == BList[y] )
        MOV       A,R7
        LCALL     ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_528:
        MOV       A,R2
        ADD       A,R4
        MOV       DPL,A
        MOV       A,R3
        ADDC      A,R5
        LCALL     ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_341:
        MOV       R4,?V3
        MOV       A,R4
        ADD       A,R4
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        MOV       A,R0
        ADD       A,R4
        MOV       DPL,A
        MOV       A,R1
        ADDC      A,R5
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??ZDO_AnyClusterMatches_5
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??ZDO_AnyClusterMatches_5:
        JNZ       ??ZDO_AnyClusterMatches_4
//  589       {
//  590         return true;
        MOV       R1,#0x1
        SJMP      ??ZDO_AnyClusterMatches_6
//  591       }
//  592     }
//  593   }
//  594 
//  595   return false;
??ZDO_AnyClusterMatches_2:
        MOV       R1,#0x0
??ZDO_AnyClusterMatches_6:
        LJMP      ??Subroutine210_0 & 0xFFFF
//  596 }
          CFI EndBlock cfiBlock10

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine178:
          CFI Block cfiCond11 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_341
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDO_CopyMatchInfo
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_170
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-4
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function ZDO_CopyMatchInfo
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_171
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond13) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+-4
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker14 Using cfiCommon1
          CFI (cfiPicker14) NoFunction
          CFI (cfiPicker14) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiPicker14
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine211_0:
          CFI Block cfiCond15 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_88
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-4
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_340, ??CrossCallReturnLabel_89
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-4
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ZDO_AnyClusterMatches
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function ZDO_CopyMatchInfo
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_170
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-4
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function ZDO_CopyMatchInfo
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_171
          CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond20) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond20) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond20) CFA_SP SP+-4
          CFI (cfiCond20) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker21 Using cfiCommon1
          CFI (cfiPicker21) NoFunction
          CFI (cfiPicker21) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiPicker21
//  597 
//  598 /*********************************************************************
//  599  * Callback functions from ZDProfile
//  600  */
//  601 
//  602 /*********************************************************************
//  603  * @fn          ZDO_ProcessNodeDescReq
//  604  *
//  605  * @brief       This function processes and responds to the
//  606  *              Node_Desc_req message.
//  607  *
//  608  * @param       inMsg - incoming message
//  609  *
//  610  * @return      none
//  611  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  612 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  613 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine51 & 0xFFFF
//  614   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  615   NodeDescriptorFormat_t *desc = NULL;
//  616 
//  617   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_74:
        JNZ       ??ZDO_ProcessNodeDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ       ??ZDO_ProcessNodeDescReq_1
//  618   {
//  619     desc = &ZDO_Config_Node_Descriptor;
//  620   }
//  621 
//  622   if ( desc != NULL )
//  623   {
//  624     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV       ?V0,#ZDO_Config_Node_Descriptor & 0xff
        MOV       ?V1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R6
        MOV       R2,A
        LCALL     `??ZDP_NodeDescMsg::?relay`; Banked call to: ZDP_NodeDescMsg
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP      ??ZDO_ProcessNodeDescReq_2
//  625   }
//  626   else
//  627   {
//  628     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  629               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V0,#0x2
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine56 & 0xFFFF
//  630   }
??CrossCallReturnLabel_85:
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  631 }
??ZDO_ProcessNodeDescReq_2:
        SJMP      ??Subroutine214_0
          CFI EndBlock cfiBlock22
//  632 
//  633 /*********************************************************************
//  634  * @fn          ZDO_ProcessPowerDescReq
//  635  *
//  636  * @brief       This function processes and responds to the
//  637  *              Node_Power_req message.
//  638  *
//  639  * @param       inMsg  - incoming request
//  640  *
//  641  * @return      none
//  642  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  643 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  644 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine51 & 0xFFFF
//  645   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  646   NodePowerDescriptorFormat_t *desc = NULL;
//  647 
//  648   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_75:
        JNZ       ??ZDO_ProcessPowerDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ       ??ZDO_ProcessPowerDescReq_1
//  649   {
//  650     desc = &ZDO_Config_Power_Descriptor;
//  651   }
//  652 
//  653   if ( desc != NULL )
//  654   {
//  655     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV       ?V0,#ZDO_Config_Power_Descriptor & 0xff
        MOV       ?V1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R6
        MOV       R2,A
        LCALL     `??ZDP_PowerDescMsg::?relay`; Banked call to: ZDP_PowerDescMsg
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP      ??ZDO_ProcessPowerDescReq_2
//  656   }
//  657   else
//  658   {
//  659     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  660               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V0,#0x3
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine56 & 0xFFFF
//  661   }
??CrossCallReturnLabel_86:
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  662 }
??ZDO_ProcessPowerDescReq_2:
        SJMP      ??Subroutine214_0
          CFI EndBlock cfiBlock23

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond24 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-2
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker26 Using cfiCommon1
          CFI (cfiPicker26) NoFunction
          CFI (cfiPicker26) Picker
        LCALL     ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV       R4,#-0x80
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_299:
        RET
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiPicker26

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond27 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-2
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker29 Using cfiCommon1
          CFI (cfiPicker29) NoFunction
          CFI (cfiPicker29) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        LCALL     ?Subroutine189 & 0xFFFF
??CrossCallReturnLabel_435:
        ADDC      A,R7
        LCALL     ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_274:
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R4
        RET
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiPicker29

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine189:
          CFI Block cfiCond30 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond31 Using cfiCommon0
          CFI (cfiCond31) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond31) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_75
          CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond31) CFA_SP SP+-4
          CFI (cfiCond31) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_416
          CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond32) CFA_SP SP+-4
          CFI (cfiCond32) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_417
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+-4
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function ZDO_ProcessUserDescReq
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_418
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+-4
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_419
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-4
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function ZDO_ParseAddrRsp
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_420
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond36) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+-4
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker37 Using cfiCommon1
          CFI (cfiPicker37) NoFunction
          CFI (cfiPicker37) Picker
        MOV       A,R6
          CFI EndBlock cfiCond30
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiPicker37
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine212_0:
          CFI Block cfiCond38 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_429
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_430
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-4
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_431
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-4
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_432
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-4
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond42 Using cfiCommon0
          CFI (cfiCond42) Function ZDO_ProcessUserDescSet
          CFI (cfiCond42) Conditional ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_433
          CFI (cfiCond42) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond42) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond42) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond42) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond42) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond42) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond42) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond42) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond42) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond42) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond42) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond42) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond42) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond42) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond42) CFA_SP SP+-4
          CFI (cfiCond42) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_4
          CFI (cfiCond43) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond43) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond43) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond43) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond43) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond43) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond43) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond43) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond43) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond43) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond43) CFA_SP SP+-4
          CFI (cfiCond43) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_5
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-4
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_74
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-4
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_75
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-4
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_416
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-4
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_417
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-4
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function ZDO_ProcessUserDescReq
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_418
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-4
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_419
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+-4
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ZDO_ParseAddrRsp
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_420
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-4
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker52 Using cfiCommon1
          CFI (cfiPicker52) NoFunction
          CFI (cfiPicker52) Picker
        LCALL     ?Subroutine206 & 0xFFFF
??CrossCallReturnLabel_692:
        RET
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiPicker52

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine206:
          CFI Block cfiCond53 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_435, ??CrossCallReturnLabel_75
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-6
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_416
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-6
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_417
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-6
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function ZDO_ProcessUserDescReq
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_418
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-6
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_419
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-6
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function ZDO_ParseAddrRsp
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_436, ??CrossCallReturnLabel_420
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-6
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_429
          CFI (cfiCond60) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond60) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond60) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond60) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond60) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond60) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond60) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond60) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond60) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond60) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond60) CFA_SP SP+-6
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_430
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-6
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_431
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-6
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_432
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-6
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDO_ProcessUserDescSet
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_437, ??CrossCallReturnLabel_433
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-6
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_4
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-6
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_434, ??CrossCallReturnLabel_5
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+-6
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_128
          CFI (cfiCond67) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond67) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond67) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond67) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond67) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond67) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond67) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond67) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond67) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond67) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond67) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond67) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond67) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond67) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond67) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond67) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond67) CFA_SP SP+-6
          CFI (cfiCond67) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_129
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-6
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_83
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-6
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_84
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+-6
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_183
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-6
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_184
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-6
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_185
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+-6
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_186
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-6
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function ZDO_ParseAddrRsp
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_187
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+-6
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_685, ??CrossCallReturnLabel_2
          CFI (cfiCond76) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond76) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond76) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond76) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond76) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond76) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond76) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond76) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond76) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond76) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond76) CFA_SP SP+-6
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_685, ??CrossCallReturnLabel_3
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+-6
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_637
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-6
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDO_ParseUserDescRsp
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_638
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-6
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ZDO_ParseEPListRsp
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_639
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-6
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_640
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-6
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_112
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-6
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_113
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-6
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_681
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-6
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_682
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-6
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond86 Using cfiCommon0
          CFI (cfiCond86) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond86) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_683
          CFI (cfiCond86) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond86) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond86) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond86) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond86) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond86) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond86) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond86) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond86) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond86) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond86) CFA_SP SP+-6
          CFI (cfiCond86) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_684
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-6
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_686, ??CrossCallReturnLabel_44
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-6
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_686, ??CrossCallReturnLabel_45
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-6
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker90 Using cfiCommon1
          CFI (cfiPicker90) NoFunction
          CFI (cfiPicker90) Picker
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiPicker90
//  663 
//  664 /*********************************************************************
//  665  * @fn          ZDO_ProcessSimpleDescReq
//  666  *
//  667  * @brief       This function processes and responds to the
//  668  *              Simple_Desc_req message.
//  669  *
//  670  * @param       inMsg - incoming message (request)
//  671  *
//  672  * @return      none
//  673  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock91 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x2
          CFI EndBlock cfiBlock91
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine213_0:
          CFI Block cfiBlock92 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock92
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine214_0:
          CFI Block cfiBlock93 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock93

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  674 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock94 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  675 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  676   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  677   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_419:
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_133:
        MOV       R3,A
        MOV       A,R4
        MOV       R2,A
//  678   byte endPoint = inMsg->asdu[2];
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
//  679   byte free = false;
        MOV       ?V1,#0x0
//  680   byte stat = ZDP_SUCCESS;
        MOV       ?V0,#0x0
//  681 
//  682   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ        ??ZDO_ProcessSimpleDescReq_0
        CLR       C
        SUBB      A,#-0xf
        JC        ??ZDO_ProcessSimpleDescReq_1
//  683   {
//  684     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV       ?V0,#-0x7e
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  685   }
//  686   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_ProcessSimpleDescReq_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ       ??ZDO_ProcessSimpleDescReq_4
//  687   {
//  688     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??afFindSimpleDesc::?relay`; Banked call to: afFindSimpleDesc
        MOV       A,R1
        MOV       R2,A
//  689     if ( sDesc == NULL )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_481:
        JNZ       ??ZDO_ProcessSimpleDescReq_5
//  690     {
//  691       stat = ZDP_NOT_ACTIVE;
        MOV       ?V0,#-0x7d
??ZDO_ProcessSimpleDescReq_5:
        MOV       ?V1,R2
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  692     }
//  693   }
//  694   else
//  695   {
//  696     if ( ZSTACK_ROUTER_BUILD )
//  697     {
//  698       stat = ZDP_DEVICE_NOT_FOUND;
//  699     }
//  700     else if ( ZSTACK_END_DEVICE_BUILD )
//  701     {
//  702       stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessSimpleDescReq_4:
        MOV       ?V0,#-0x80
//  703     }
//  704   }
//  705 
//  706   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_296:
        MOV       R1,?V0
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??ZDP_SimpleDescMsg::?relay`; Banked call to: ZDP_SimpleDescMsg
//  707 
//  708   if ( free && sDesc )
        MOV       A,?V1
        JZ        ??ZDO_ProcessSimpleDescReq_6
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_482:
        JZ        ??ZDO_ProcessSimpleDescReq_6
//  709   {
//  710     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine236_0 & 0xFFFF
//  711   }
??CrossCallReturnLabel_450:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  712 }
??ZDO_ProcessSimpleDescReq_6:
        LJMP      ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock94
//  713 
//  714 /*********************************************************************
//  715  * @fn          ZDO_ProcessActiveEPReq
//  716  *
//  717  * @brief       This function processes and responds to the
//  718  *              Active_EP_req message.
//  719  *
//  720  * @param       inMsg  - incoming message (request)
//  721  *
//  722  * @return      none
//  723  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  724 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock95 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  725 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V4,R2
        MOV       ?V5,R3
//  726   byte cnt = 0;
        MOV       ?V0,#0x0
//  727   uint16 aoi;
//  728   byte stat = ZDP_SUCCESS;
        MOV       ?V1,#0x0
//  729 
//  730   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL     ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_431:
        ADDC      A,?V5
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_92:
        MOV       R6,A
        CLR       A
        ADDC      A,R1
        MOV       R7,A
//  731 
//  732   if ( aoi == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       A,R2
        XRL       A,R6
        JNZ       ??ZDO_ProcessActiveEPReq_0
        MOV       A,R3
        XRL       A,R7
??ZDO_ProcessActiveEPReq_0:
        JNZ       ??ZDO_ProcessActiveEPReq_1
//  733   {
//  734     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL     `??afNumEndPoints::?relay`; Banked call to: afNumEndPoints
        MOV       A,R1
        DEC       A
        MOV       ?V0,A
//  735     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV       R1,#0x1
        MOV       R2,#ZDOBuildBuf & 0xff
        MOV       R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL     `??afEndPoints::?relay`; Banked call to: afEndPoints
        SJMP      ??ZDO_ProcessActiveEPReq_2
//  736   }
//  737   else
//  738   {
//  739     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessActiveEPReq_1:
        MOV       ?V1,#-0x80
//  740   }
//  741 
//  742   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  743                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_613:
        ADDC      A,?V5
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_354:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#ZDOBuildBuf & 0xff
        MOV       ?V3,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       ?V2,R6
        MOV       ?V3,R7
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,?V1
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL     ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_309:
        MOV       R1,A
        MOV       R2,#0x5
        MOV       R3,#-0x80
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LJMP      ?Subroutine5 & 0xFFFF
//  744 }
          CFI EndBlock cfiBlock95
//  745 
//  746 /*********************************************************************
//  747  * @fn          ZDO_ConvertOTAClusters
//  748  *
//  749  * @brief       This function will convert the over-the-air cluster list
//  750  *              format to an internal format.
//  751  *
//  752  * @param       inMsg  - incoming message (request)
//  753  *
//  754  * @return      pointer to incremented inBuf
//  755  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  756 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock96 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  757 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
//  758   uint8 x;
//  759 
//  760   for ( x = 0; x < cnt; x++ )
        MOV       R6,#0x0
        SJMP      ??ZDO_ConvertOTAClusters_0
//  761   {
//  762     // convert ota format to internal
//  763     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,?V0
        ADD       A,R0
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
        MOV       A,R6
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_182:
        MOV       A,R4
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R5
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
//  764     inBuf += sizeof( uint16 );
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??ZDO_ConvertOTAClusters_2
        INC       R3
//  765   }
??ZDO_ConvertOTAClusters_2:
        INC       R6
??ZDO_ConvertOTAClusters_0:
        MOV       A,R6
        CLR       C
        SUBB      A,R7
        JC        ??ZDO_ConvertOTAClusters_1
//  766   return ( inBuf );
        LJMP      ??Subroutine214_0 & 0xFFFF
//  767 }
          CFI EndBlock cfiBlock96

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond97 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDO_CompareClusterLists
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-2
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ZDO_ConvertOTAClusters
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+-2
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker100 Using cfiCommon1
          CFI (cfiPicker100) NoFunction
          CFI (cfiPicker100) Picker
        ADD       A,0xE0 /* A   */
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        RET
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiPicker100
//  768 
//  769 /*********************************************************************
//  770  * @fn          ZDO_ProcessMatchDescReq
//  771  *
//  772  * @brief       This function processes and responds to the
//  773  *              Match_Desc_req message.
//  774  *
//  775  * @param       inMsg  - incoming message (request)
//  776  *
//  777  * @return      none
//  778  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  779 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock101 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  780 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 11
        MOV       A,#-0xb
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
//  781   uint8 epCnt = 0;
??CrossCallReturnLabel_385:
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
//  782   uint8 numInClusters;
//  783   uint16 *inClusters = NULL;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  784   uint8 numOutClusters;
//  785   uint16 *outClusters = NULL;
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  786   epList_t *epDesc;
//  787   SimpleDescriptionFormat_t *sDesc = NULL;
//  788   uint8 allocated;
//  789   uint8 *msg;
//  790   uint16 aoi;
//  791   uint16 profileID;
//  792 
//  793   // Parse the incoming message
//  794   msg = inMsg->asdu;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_128:
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
//  795   aoi = BUILD_UINT16( msg[0], msg[1] );
        MOV       DPL,?V2
        MOV       DPH,A
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_344:
        ADD       A,R0
        MOV       ?V0,A
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
//  796   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       R6,A
        CLR       A
        ADDC      A,R1
        MOV       R7,A
//  797   msg += 4;
//  798 
//  799   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV       A,R1
        XRL       A,#0x1
        JZ        ??ZDO_ProcessMatchDescReq_0
//  800   {
//  801     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  802                           ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
//  803     return;
//  804   }
//  805   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV       A,R1
        JNZ       ??ZDO_ProcessMatchDescReq_1
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??ZDO_ProcessMatchDescReq_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??ZDO_ProcessMatchDescReq_2:
        JZ        ??ZDO_ProcessMatchDescReq_1
//  806   {
//  807     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  808                              ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_158:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_94:
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  809     return;
        LJMP      ??ZDO_ProcessMatchDescReq_3 & 0xFFFF
//  810   }
//  811 
//  812   if ((numInClusters = *msg++) &&
//  813       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_1:
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V7,A
        MOV       A,?V2
        ADD       A,#0x5
        MOV       ?V2,A
        JNC       ??ZDO_ProcessMatchDescReq_4
        INC       ?V3
??ZDO_ProcessMatchDescReq_4:
        MOV       A,?V7
        JZ        ??ZDO_ProcessMatchDescReq_5
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ??Subroutine270_0 & 0xFFFF
??CrossCallReturnLabel_669:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_386:
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_483:
        JZ        ??ZDO_ProcessMatchDescReq_5
//  814   {
//  815     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine103 & 0xFFFF
//  816   }
??CrossCallReturnLabel_168:
        MOV       R1,?V7
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV       ?V2,R2
        MOV       ?V3,R3
        SJMP      ??ZDO_ProcessMatchDescReq_6
//  817   else
//  818   {
//  819     numInClusters = 0;
??ZDO_ProcessMatchDescReq_5:
        MOV       ?V7,#0x0
//  820   }
//  821 
//  822   if ((numOutClusters = *msg++) &&
//  823       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_6:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       ?V6,A
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
        JZ        ??ZDO_ProcessMatchDescReq_7
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ??Subroutine270_0 & 0xFFFF
??CrossCallReturnLabel_670:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_387:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_484:
        JZ        ??ZDO_ProcessMatchDescReq_7
//  824   {
//  825     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine103 & 0xFFFF
//  826   }
??CrossCallReturnLabel_169:
        MOV       R1,?V6
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP      ??ZDO_ProcessMatchDescReq_8
//  827   else
//  828   {
//  829     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_7:
        MOV       ?V6,#0x0
//  830   }
//  831 
//  832   // First count the number of endpoints that match.
//  833   epDesc = epList;
??ZDO_ProcessMatchDescReq_8:
        MOV       DPTR,#epList
        SJMP      ??CrossCallReturnLabel_134
//  834   while ( epDesc )
//  835   {
//  836     // Don't search endpoint 0 and check if response is allowed
//  837     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  838     {
//  839       if ( epDesc->pfnDescCB )
//  840       {
//  841         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  842         allocated = TRUE;
//  843       }
//  844       else
//  845       {
//  846         sDesc = epDesc->epDesc->simpleDesc;
//  847         allocated = FALSE;
//  848       }
//  849 
//  850       if ( sDesc && sDesc->AppProfId == profileID )
//  851       {
//  852         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  853 
//  854         // Are there matching input clusters?
//  855         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  856                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  857             // Are there matching output clusters?
//  858             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  859                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  860         {
//  861           // Notify the endpoint of the match.
//  862           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  863           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  864 
//  865           if (pRspSent)
//  866           {
//  867             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  868             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  869             pRspSent->numInClusters = numInClusters;
//  870             pRspSent->numOutClusters = numOutClusters;
//  871 
//  872             if (numInClusters)
//  873             {
//  874               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  875               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  876             }
//  877             else
//  878             {
//  879               pRspSent->pInClusters = NULL;
//  880             }
//  881 
//  882             if (numOutClusters)
//  883             {
//  884               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  885               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  886             }
//  887             else
//  888             {
//  889               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_9:
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  890             }
//  891 
//  892             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_10:
        ; Setup parameters for call to function osal_msg_send
        MOV       R2,?V4
        MOV       R3,?V5
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_114:
        LCALL     ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_401:
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
//  893           }
//  894 
//  895           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_11:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_402:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#ZDOBuildBuf & 0xff
        ADD       A,R0
        MOV       DPL,A
        CLR       A
        ADDC      A,#(ZDOBuildBuf >> 8) & 0xff
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        INC       A
        MOVX      @DPTR,A
//  896         }
//  897       }
//  898 
//  899       if ( allocated )
??ZDO_ProcessMatchDescReq_12:
        MOV       C,?VB.0
        JNC       ??ZDO_ProcessMatchDescReq_13
//  900       {
//  901         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
//  902       }
??CrossCallReturnLabel_451:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  903     }
//  904     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_13:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_134:
        LCALL     ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_29:
        MOV       R1,A
        MOV       A,R0
        ORL       A,R1
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_14 & 0xFFFF
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_130:
        JZ        ??ZDO_ProcessMatchDescReq_13
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_166:
        MOVX      A,@DPTR
        MOV       C,0xE0 /* A   */.0
        JNC       ??ZDO_ProcessMatchDescReq_13
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_349:
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_485:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        JZ        ??ZDO_ProcessMatchDescReq_15
        ; Setup parameters for indirect call
        MOVX      A,@DPTR
        MOV       R0,A
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_131:
        MOV       R2,A
        MOV       R1,#0x1
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_167:
        INC       DPTR
        LCALL     ?Subroutine200 & 0xFFFF
??CrossCallReturnLabel_409:
        LCALL     ?CALL_IND
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_388:
        SETB      ?VB.0
        SJMP      ??ZDO_ProcessMatchDescReq_16
??ZDO_ProcessMatchDescReq_15:
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_115:
        LCALL     ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_545:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_373:
        CLR       ?VB.0
??ZDO_ProcessMatchDescReq_16:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_486:
        JZ        ??ZDO_ProcessMatchDescReq_12
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_347:
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_ProcessMatchDescReq_17
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
??ZDO_ProcessMatchDescReq_17:
        JZ        $+5
        LJMP      ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_570:
        ADD       A,#0x6
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_206:
        MOV       R4,A
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_452:
        MOV       R1,?V7
        LCALL     `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R1
        JNZ       ??ZDO_ProcessMatchDescReq_18
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_571:
        ADD       A,#0xa
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_136:
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_453:
        MOV       R1,?V6
        LCALL     `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R1
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
??ZDO_ProcessMatchDescReq_18:
        ; Setup parameters for call to function osal_msg_allocate
        MOV       A,?V6
        ADD       A,?V7
        CLR       C
        RLC       A
        ADD       A,#0xa
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       A,R2
        ORL       A,?V5
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x2e
        MOVX      @DPTR,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_122:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_374:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V7
        LCALL     ??Subroutine267_0 & 0xFFFF
??CrossCallReturnLabel_651:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V6
        MOVX      @DPTR,A
        MOV       A,?V7
        JZ        ??ZDO_ProcessMatchDescReq_19
        MOV       A,R2
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,?V5
        MOV       R3,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_397:
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_87:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R4,?V7
        MOV       A,R4
        ADD       A,R4
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        SJMP      ??ZDO_ProcessMatchDescReq_20
??ZDO_ProcessMatchDescReq_19:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
??ZDO_ProcessMatchDescReq_20:
        MOV       A,?V6
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_9 & 0xFFFF
        MOV       R0,?V7
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,?V4
        ADD       A,R0
        MOV       R0,A
        MOV       A,?V5
        ADDC      A,R1
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_398:
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine57 & 0xFFFF
//  905   }
??CrossCallReturnLabel_88:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R4,?V6
        MOV       A,R4
        ADD       A,R4
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
        LJMP      ??ZDO_ProcessMatchDescReq_10 & 0xFFFF
//  906 
//  907   // Send the message only if at least one match found.
//  908   if ( epCnt )
??ZDO_ProcessMatchDescReq_14:
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMatchDescReq_21
//  909   {
//  910     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  911               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine64 & 0xFFFF
//  912     {
//  913 #if defined( LCD_SUPPORTED )
//  914       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
//  915 #endif
//  916     }
//  917   }
??CrossCallReturnLabel_103:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_438:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_159:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_95:
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 27)
//  918   else
//  919   {
//  920 #if defined( LCD_SUPPORTED )
//  921     HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
//  922 #endif
//  923   }
//  924 
//  925   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_21:
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_487:
        JZ        ??ZDO_ProcessMatchDescReq_22
//  926   {
//  927     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
//  928   }
??CrossCallReturnLabel_454:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  929   
//  930   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_22:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_488:
        JZ        ??ZDO_ProcessMatchDescReq_3
//  931   {
//  932     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
//  933   }
??CrossCallReturnLabel_455:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  934 }
??ZDO_ProcessMatchDescReq_3:
        MOV       A,#0xb
        LJMP      ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock101

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond102 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_344
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function ZDO_ParseEPListRsp
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+-2
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker104 Using cfiCommon1
          CFI (cfiPicker104) NoFunction
          CFI (cfiPicker104) Picker
        MOVX      A,@DPTR
        MOV       R2,A
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiPicker104
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine215_0:
          CFI Block cfiCond105 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_343
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-2
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_ParseEPListRsp
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+-2
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker108 Using cfiCommon1
          CFI (cfiPicker108) NoFunction
          CFI (cfiPicker108) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        RET
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiPicker108

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond109 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker111 Using cfiCommon1
          CFI (cfiPicker111) NoFunction
          CFI (cfiPicker111) Picker
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV       R2,?V2
        MOV       R3,?V3
        RET
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiPicker111

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine182:
          CFI Block cfiCond112 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_295
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_168
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-4
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_169
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-4
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_156
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-4
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_157
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+-4
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker118 Using cfiCommon1
          CFI (cfiPicker118) NoFunction
          CFI (cfiPicker118) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        RET
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiPicker118

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond119 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_349
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine216_0:
          CFI Block cfiCond122 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_346
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-2
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker127 Using cfiCommon1
          CFI (cfiPicker127) NoFunction
          CFI (cfiPicker127) Picker
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_353:
        RET
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiPicker127

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond128 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker130 Using cfiCommon1
          CFI (cfiPicker130) NoFunction
          CFI (cfiPicker130) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_280:
        RET
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiPicker130

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine167:
          CFI Block cfiCond131 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_167
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-4
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_122
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-4
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ZDMatchSendState
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_123
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-4
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_134
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-4
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_135
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-4
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker137 Using cfiCommon1
          CFI (cfiPicker137) NoFunction
          CFI (cfiPicker137) Picker
        LCALL     ?Subroutine200 & 0xFFFF
??CrossCallReturnLabel_410:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiPicker137

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine200:
          CFI Block cfiCond138 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_409
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_166
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-6
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_167
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-6
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_122
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-6
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDMatchSendState
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_123
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-6
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_134
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-6
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_135
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-6
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_130
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-6
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_131
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-6
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_114
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-6
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_115
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-6
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_403
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-6
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_404
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-6
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDO_UpdateNwkStatus
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_399
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-6
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ZDO_UpdateNwkStatus
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_400
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-6
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_401
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-6
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_402
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+-6
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_83
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-6
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_84
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+-6
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker157 Using cfiCommon1
          CFI (cfiPicker157) NoFunction
          CFI (cfiPicker157) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        LCALL     ?Subroutine208 & 0xFFFF
??CrossCallReturnLabel_415:
        RET
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiPicker157

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine208:
          CFI Block cfiCond158 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_409
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_166
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-8
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_167
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-8
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_122
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-8
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ZDMatchSendState
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_123
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-8
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_134
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-8
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_135
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-8
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_130
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-8
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_131
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-8
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_114
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-8
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_115
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-8
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_403
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-8
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_404
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-8
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDO_UpdateNwkStatus
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_399
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-8
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDO_UpdateNwkStatus
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_400
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-8
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_401
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-8
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_402
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-8
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_83
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-8
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_84
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-8
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_130
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond177) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond177) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond177) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+-4
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_131
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+-4
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_349
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-6
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_350
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-6
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDO_UpdateNwkStatus
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_346
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-6
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_347
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-6
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_348
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-6
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_114
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-6
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_115
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-6
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_0
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-6
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_1
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-6
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker189 Using cfiCommon1
          CFI (cfiPicker189) NoFunction
          CFI (cfiPicker189) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiPicker189

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond190 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_158
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker192 Using cfiCommon1
          CFI (cfiPicker192) NoFunction
          CFI (cfiPicker192) Picker
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R5,A
        MOV       A,#0xc
        RET
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiPicker192

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond193 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-2
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker195 Using cfiCommon1
          CFI (cfiPicker195) NoFunction
          CFI (cfiPicker195) Picker
        LCALL     ?Subroutine208 & 0xFFFF
??CrossCallReturnLabel_413:
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_407:
        RET
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiPicker195

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond196 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker198 Using cfiCommon1
          CFI (cfiPicker198) NoFunction
          CFI (cfiPicker198) Picker
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_406:
        MOV       R0,A
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_352:
        RET
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiPicker198

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine183:
          CFI Block cfiCond199 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_349
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_350
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-4
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ZDO_UpdateNwkStatus
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_346
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-4
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_347
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+-4
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_348
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-4
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_114
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-4
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_115
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-4
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_0
          CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond206) CFA_SP SP+-4
          CFI (cfiCond206) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_1
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-4
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker208 Using cfiCommon1
          CFI (cfiPicker208) NoFunction
          CFI (cfiPicker208) Picker
        LCALL     ?Subroutine208 & 0xFFFF
??CrossCallReturnLabel_414:
        INC       DPTR
        RET
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiPicker208

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker211 Using cfiCommon1
          CFI (cfiPicker211) NoFunction
          CFI (cfiPicker211) Picker
        LCALL     ??Subroutine248_0 & 0xFFFF
??CrossCallReturnLabel_591:
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiPicker211

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond212 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker214 Using cfiCommon1
          CFI (cfiPicker214) NoFunction
          CFI (cfiPicker214) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_281:
        MOV       R2,#0x6
        MOV       R3,#-0x80
        RET
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiPicker214

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock215 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R2,?V2
        MOV       R3,?V3
          CFI EndBlock cfiBlock215
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine217_0:
          CFI Block cfiBlock216 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x8
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock216
//  935 
//  936 
//  937 /*********************************************************************
//  938  * @fn      ZDO_ProcessBindUnbindReq()
//  939  *
//  940  * @brief   Called to process a Bind or Unbind Request message.
//  941  *
//  942  * @param   inMsg  - incoming message (request)
//  943  * @param   pReq - place to put parsed information
//  944  *
//  945  * @return  none
//  946  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  947 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock217 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
//  948 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, bindNumOfEntries
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
//  949   zAddrType_t SourceAddr;       // Binding Source addres
//  950   byte bindStat;
//  951 
//  952   SourceAddr.addrMode = Addr64Bit;
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x3
        MOVX      @DPTR,A
//  953   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  954 
//  955 
//  956   // If the local device is not the primary binding cache
//  957   // check the src address of the bind request.
//  958   // If it is not the local device's extended address
//  959   // discard the request.
//  960   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
//  961         (pReq->dstAddress.addrMode != Addr64Bit &&
//  962          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R4,?V2
        MOV       R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessBindUnbindReq_0
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_183:
        JZ        ??ZDO_ProcessBindUnbindReq_1
        MOVX      A,@DPTR
        XRL       A,#0x1
        JZ        ??ZDO_ProcessBindUnbindReq_1
//  963   {
//  964     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7c
        LJMP      ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
//  965   }
//  966   else
//  967   {
//  968     // Check source & destination endpoints
//  969     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
//  970         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
//  971             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessBindUnbindReq_3
        CLR       C
        SUBB      A,#-0xf
        JNC       ??ZDO_ProcessBindUnbindReq_3
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_184:
        JNZ       ??ZDO_ProcessBindUnbindReq_4
        MOV       A,R6
        LCALL     ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_232:
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessBindUnbindReq_3
        CLR       C
        SUBB      A,#-0xf
        JC        ??ZDO_ProcessBindUnbindReq_4
//  972     {
//  973       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7e
        LJMP      ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
//  974     }
//  975     else
//  976     {
//  977       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_225:
        XRL       A,#0x21
        JNZ       ??ZDO_ProcessBindUnbindReq_5
        INC       DPTR
        MOVX      A,@DPTR
??ZDO_ProcessBindUnbindReq_5:
        JNZ       ??ZDO_ProcessBindUnbindReq_6
//  978       {
//  979         // Assume the table is full
//  980         bindStat = ZDP_TABLE_FULL;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x74
        MOVX      @DPTR,A
//  981 
//  982         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
        ; Setup parameters for call to function bindNumOfEntries
        LCALL     `??bindNumOfEntries::?relay`; Banked call to: bindNumOfEntries
        MOV       DPTR,#gNWK_MAX_BINDING_ENTRIES
        CLR       A
        MOVC      A,@A+DPTR
        MOV       R0,A
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       R1,A
        CLR       C
        MOV       A,R2
        SUBB      A,R0
        MOV       A,R3
        SUBB      A,R1
        JNC       ??ZDO_ProcessBindUnbindReq_7
//  983         {
//  984           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
//  985                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
        ; Setup parameters for call to function APSME_BindRequest
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_356:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_96:
        LCALL     `??APSME_BindRequest::?relay`; Banked call to: APSME_BindRequest
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R1
        JNZ       ??ZDO_ProcessBindUnbindReq_7
//  986           {
//  987             uint16 nwkAddr;
//  988 
//  989             // valid entry
//  990             bindStat = ZDP_SUCCESS;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
//  991 
//  992             // Notify to save info into NV
//  993             ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL     `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
//  994 
//  995             // Check for the destination address
//  996             if ( pReq->dstAddress.addrMode == Addr64Bit )
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_185:
        JNZ       ??ZDO_ProcessBindUnbindReq_7
//  997             {
//  998               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP102_8
        MOV       A,R6
        ADD       A,#0xb
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??APSME_LookupNwkAddr::?relay`; Banked call to: APSME_LookupNwkAddr
        MOV       A,R1
        JNZ       ??ZDO_ProcessBindUnbindReq_7
//  999               {
// 1000                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV       R5,#0x0
        MOV       R4,#0x0
        MOV       R1,#0x0
        MOV       A,R6
        ADD       A,#0xb
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??ZDP_NwkAddrReq::?relay`; Banked call to: ZDP_NwkAddrReq
        SJMP      ??ZDO_ProcessBindUnbindReq_7
// 1001               }
// 1002             }
// 1003           }
// 1004         }
// 1005       }
// 1006       else // Unbind_req
// 1007       {
// 1008         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1009                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_6:
        ; Setup parameters for call to function APSME_UnBindRequest
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_357:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_97:
        LCALL     `??APSME_UnBindRequest::?relay`; Banked call to: APSME_UnBindRequest
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        JNZ       ??ZDO_ProcessBindUnbindReq_8
// 1010         {
// 1011           bindStat = ZDP_SUCCESS;
        CLR       A
        MOVX      @DPTR,A
// 1012 
// 1013           // Notify to save info into NV
// 1014           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL     `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
        SJMP      ??ZDO_ProcessBindUnbindReq_7
// 1015         }
// 1016         else
// 1017           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_8:
        MOV       A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX      @DPTR,A
// 1018       }
// 1019     }
// 1020   }
// 1021 
// 1022   // Send back a response message
// 1023   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1024                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1025                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function ZDP_SendData
        MOV       A,?V0
        LCALL     ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_609:
        ADDC      A,?V1
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_355:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_226:
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,#0x80
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 1026 }
        MOV       A,#0xc
        LJMP      ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock217

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond218 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_225
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker220 Using cfiCommon1
          CFI (cfiPicker220) NoFunction
          CFI (cfiPicker220) Picker
        LCALL     ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_632:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiPicker220

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond221 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker224 Using cfiCommon1
          CFI (cfiPicker224) NoFunction
          CFI (cfiPicker224) Picker
        LCALL     ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_307:
        MOVX      A,@DPTR
        XRL       A,#0x3
        RET
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiPicker224

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond225 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_356
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-2
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker227 Using cfiCommon1
          CFI (cfiPicker227) NoFunction
          CFI (cfiPicker227) Picker
        MOV       A,R6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiPicker227
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine218_0:
          CFI Block cfiCond228 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_354
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-2
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-2
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker232 Using cfiCommon1
          CFI (cfiPicker232) NoFunction
          CFI (cfiPicker232) Picker
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       R0,#?V2
        RET
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiPicker232

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond233 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker235 Using cfiCommon1
          CFI (cfiPicker235) NoFunction
          CFI (cfiPicker235) Picker
        MOV       A,R6
        ADD       A,#0xb
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_515:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiPicker235
// 1027 
// 1028 /*********************************************************************
// 1029  * @fn      ZDO_UpdateAddrManager
// 1030  *
// 1031  * @brief   Update the Address Manager.
// 1032  *
// 1033  * @param   nwkAddr - network address
// 1034  * @param   extAddr - extended address
// 1035  *
// 1036  * @return  none
// 1037  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1038 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock236 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1039 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV       A,#-0xd
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1040   AddrMgrEntry_t addrEntry;
// 1041 
// 1042   // Update the address manager
// 1043   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 1044   addrEntry.nwkAddr = nwkAddr;
        INC       A
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1045   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_389:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 1046   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 1047 }
        MOV       A,#0xd
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock236
// 1048 
// 1049 /*********************************************************************
// 1050  * @fn      ZDO_ProcessServerDiscReq
// 1051  *
// 1052  * @brief   Process the Server_Discovery_req message.
// 1053  *
// 1054  * @param   inMsg  - incoming message (request)
// 1055  *
// 1056  * @return  none
// 1057  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1058 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock237 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1059 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1060   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1061   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_186:
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_538:
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine252_0 & 0xFFFF
??CrossCallReturnLabel_556:
        MOV       DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX      A,@DPTR
        ANL       A,R0
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,R1
        MOV       ?V1,A
// 1062 
// 1063   if ( matchMask )
        MOV       A,?V0
        ORL       A,?V1
        JZ        ??ZDO_ProcessServerDiscReq_0
// 1064   {
// 1065     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1066                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine131 & 0xFFFF
// 1067   }
??CrossCallReturnLabel_202:
        MOV       R4,#0x0
        LCALL     ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL     `??ZDP_ServerDiscRsp::?relay`; Banked call to: ZDP_ServerDiscRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1068 }
??ZDO_ProcessServerDiscReq_0:
        LJMP      ??Subroutine214_0 & 0xFFFF
          CFI EndBlock cfiBlock237
// 1069 
// 1070 /*********************************************************************
// 1071  * Call Back Functions from APS  - API
// 1072  */
// 1073 
// 1074 /*********************************************************************
// 1075  * @fn          ZDO_EndDeviceTimeoutCB
// 1076  *
// 1077  * @brief       This function handles the binding timer for the End
// 1078  *              Device Bind command.
// 1079  *
// 1080  * @param       none
// 1081  *
// 1082  * @return      none
// 1083  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1084 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock238 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1085 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1086 #if defined ( REFLECTOR )
// 1087   byte stat;
// 1088   if ( ZDO_EDBind )
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_489:
        JNZ       $+5
        LJMP      ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1089   {
// 1090     stat = ZDO_EDBind->status;
// 1091 
// 1092     // Send the response message to the first sent
// 1093     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1094                         stat, ZDO_EDBind->SecurityUse );
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x15
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_207:
        MOV       R0,A
        MOV       DPTR,#ZDO_EDBind
        MOVX      A,@DPTR
        MOV       R1,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R1
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       DPTR,#ZDO_EDBind
        MOVX      A,@DPTR
        MOV       R1,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R1
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV       A,R0
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R1,#0x1
        MOV       DPTR,#ZDO_EDBind
        MOVX      A,@DPTR
        ADD       A,R1
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R5,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1095 
// 1096     ZDO_RemoveEndDeviceBind();
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine239_0 & 0xFFFF
// 1097   }
??CrossCallReturnLabel_490:
        JZ        ??ZDO_EndDeviceTimeoutCB_0
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x10
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_501:
        JZ        ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_572:
        ADD       A,#0x10
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        LCALL     ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_472:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_1:
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_573:
        ADD       A,#0x13
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_502:
        JZ        ??ZDO_EndDeviceTimeoutCB_2
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#ZDO_EDBind
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_129:
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_2:
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_456:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       DPTR,#ZDO_EDBind
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1098 #endif  // REFLECTOR
// 1099 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP      ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock238

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond239 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_128
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker241 Using cfiCommon1
          CFI (cfiPicker241) NoFunction
          CFI (cfiPicker241) Picker
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_288:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiPicker241
// 1100 
// 1101 /*********************************************************************
// 1102  * Optional Management Messages
// 1103  */
// 1104 
// 1105 /*********************************************************************
// 1106  * @fn          ZDO_ProcessMgmtLqiReq
// 1107  *
// 1108  * @brief       This function handles parsing the incoming Management
// 1109  *              LQI request and generate the response.
// 1110  *
// 1111  *   Note:      This function will limit the number of items returned
// 1112  *              to ZDO_MAX_LQI_ITEMS items.
// 1113  *
// 1114  * @param       inMsg - incoming message (request)
// 1115  *
// 1116  * @return      none
// 1117  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1118 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock242 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1119 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 63, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 63, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 42
        MOV       A,#-0x2a
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 58)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1120   byte x;
// 1121   byte index;
// 1122   byte numItems;
// 1123   byte maxItems;
// 1124   ZDP_MgmtLqiItem_t* table = NULL;
??CrossCallReturnLabel_390:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1125   ZDP_MgmtLqiItem_t* item;
// 1126   neighborEntry_t    entry;
// 1127   byte aItems;
// 1128   associated_devices_t *aDevice;
// 1129   AddrMgrEntry_t  nwkEntry;
// 1130   uint8 StartIndex = inMsg->asdu[0];
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_83:
        MOV       ?V7,A
// 1131 
// 1132   // Get the number of neighbor items
// 1133   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x64
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1134 
// 1135   // Get the number of associated items
// 1136   aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
        ; Setup parameters for call to function AssocCount
        MOV       R2,#0x4
        MOV       R1,#0x0
        LCALL     `??AssocCount::?relay`; Banked call to: AssocCount
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        LCALL     ?Subroutine27 & 0xFFFF
// 1137 
// 1138   // Total number of items
// 1139   maxItems += aItems;
??CrossCallReturnLabel_31:
        ADD       A,R2
        MOVX      @DPTR,A
// 1140 
// 1141   // Start with the supplied index
// 1142   if ( maxItems > StartIndex )
        MOV       R0,A
        MOV       A,?V7
        CLR       C
        SUBB      A,R0
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_0 & 0xFFFF
// 1143   {
// 1144     numItems = maxItems - StartIndex;
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V7
        MOV       ?V1,A
// 1145 
// 1146     // limit the size of the list
// 1147     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR       C
        SUBB      A,#0x4
        JC        ??ZDO_ProcessMgmtLqiReq_1
// 1148       numItems = ZDO_MAX_LQI_ITEMS;
        MOV       ?V1,#0x3
// 1149 
// 1150     // Allocate the memory to build the table
// 1151     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1152               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V1
        MOV       B,#0x1a
        MUL       AB
        MOV       R2,A
        MOV       R3,B
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1153 
// 1154     if ( table != NULL )
??CrossCallReturnLabel_391:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_491:
        JNZ       $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
// 1155     {
// 1156       x = 0;
        MOV       ?V6,#0x0
// 1157       item = table;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine229_0 & 0xFFFF
// 1158       index = StartIndex;
??CrossCallReturnLabel_425:
        MOV       ?V0,?V7
        SJMP      ??ZDO_ProcessMgmtLqiReq_3
// 1159 
// 1160       // Loop through associated items and build list
// 1161       for ( ; x < numItems; x++ )
// 1162       {
// 1163         if ( index < aItems )
// 1164         {
// 1165           // get next associated device
// 1166           aDevice = AssocFindDevice( index++ );
// 1167 
// 1168           // set basic fields
// 1169           item->panID   = _NIB.nwkPanId;
// 1170           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1171           item->nwkAddr = aDevice->shortAddr;
// 1172           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1173           item->depth   = 0xFF;
// 1174           item->lqi     = aDevice->linkInfo.rxLqi;
// 1175 
// 1176           // set extented address
// 1177           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1178           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1179 
// 1180           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1181           {
// 1182             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1183           }
// 1184           else
// 1185           {
// 1186             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_4:
        ; Setup parameters for call to function osal_memset
        LCALL     ?Subroutine139 & 0xFFFF
// 1187           }
??CrossCallReturnLabel_359:
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 1188 
// 1189           // use association info to set other fields
// 1190           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_5:
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        JNZ       ??ZDO_ProcessMgmtLqiReq_6
// 1191           {
// 1192             if (  aDevice->shortAddr == 0 )
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_492:
        JNZ       ??ZDO_ProcessMgmtLqiReq_7
// 1193             {
// 1194               item->devType = ZDP_MGMT_DT_COORD;
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_526:
        MOVX      @DPTR,A
// 1195               item->depth = 0;
        MOV       A,R6
        ADD       A,#0x18
        LCALL     ??Subroutine244_0 & 0xFFFF
// 1196             }
??CrossCallReturnLabel_522:
        SJMP      ??ZDO_ProcessMgmtLqiReq_8
// 1197             else
// 1198             {
// 1199               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_7:
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_364:
        MOVX      @DPTR,A
// 1200               item->depth = _NIB.nodeDepth - 1;
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        DEC       A
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine145 & 0xFFFF
// 1201             }
// 1202 
// 1203             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1204             item->relation = ZDP_MGMT_REL_PARENT;
// 1205           }
??CrossCallReturnLabel_243:
        POP       A
          CFI CFA_SP SP+0
??ZDO_ProcessMgmtLqiReq_8:
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_8:
        CLR       A
        SJMP      ??CrossCallReturnLabel_362
// 1206           else
// 1207           {
// 1208             // If not parent, then it's a child
// 1209             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_6:
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        INC       A
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_244:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine15 & 0xFFFF
// 1210 
// 1211             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_12:
        CLR       C
        SUBB      A,#0x3
        MOV       A,R6
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_9 & 0xFFFF
// 1212             {
// 1213               item->devType = ZDP_MGMT_DT_ENDDEV;
        LCALL     ?Subroutine141 & 0xFFFF
// 1214 
// 1215               if ( aDevice->nodeRelation == CHILD_RFD )
// 1216               {
// 1217                 item->rxOnIdle = FALSE;
// 1218               }
// 1219               else
// 1220               {
// 1221                 item->rxOnIdle = TRUE;
// 1222               }
// 1223             }
??CrossCallReturnLabel_233:
        MOV       A,#0x2
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_13:
        XRL       A,#0x1
        JNZ       $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_10 & 0xFFFF
// 1224             else
// 1225             {
// 1226               item->devType = ZDP_MGMT_DT_ROUTER;
// 1227 
// 1228               if ( aDevice->nodeRelation == CHILD_FFD )
// 1229               {
// 1230                 item->rxOnIdle = FALSE;
// 1231               }
// 1232               else
// 1233               {
// 1234                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_11:
        MOV       A,R6
        ADD       A,#0x15
        LCALL     ??Subroutine221_0 & 0xFFFF
// 1235               }
??CrossCallReturnLabel_361:
        MOVX      @DPTR,A
// 1236             }
// 1237 
// 1238             item->relation = ZDP_MGMT_REL_CHILD;
        MOV       A,R6
        ADD       A,#0x16
        LCALL     ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_362:
        MOVX      @DPTR,A
// 1239           }
// 1240 
// 1241           item++;
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDO_ProcessMgmtLqiReq_12
        INC       R7
??ZDO_ProcessMgmtLqiReq_12:
        INC       ?V6
??ZDO_ProcessMgmtLqiReq_3:
        MOV       A,?V6
        CLR       C
        SUBB      A,?V1
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V0
        CLR       C
        SUBB      A,R0
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_14 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV       R1,?V0
        LCALL     `??AssocFindDevice::?relay`; Banked call to: AssocFindDevice
        MOV       ?V4,R2
        MOV       ?V5,R3
        INC       ?V0
        MOV       DPTR,#_NIB + 33
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_27:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_539:
        LCALL     ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_240:
        MOV       DPH,A
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_6:
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_245:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_258:
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_540:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_375:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV       A,R1
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_4 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        LCALL     ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_358:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LJMP      ??ZDO_ProcessMgmtLqiReq_5 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_9:
        LCALL     ??Subroutine220_0 & 0xFFFF
??CrossCallReturnLabel_363:
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_14:
        XRL       A,#0x3
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_11 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_10:
        MOV       A,R6
        ADD       A,#0x15
        LCALL     ??Subroutine244_0 & 0xFFFF
// 1242         }
??CrossCallReturnLabel_523:
        LJMP      ??CrossCallReturnLabel_361 & 0xFFFF
// 1243         else
// 1244         {
// 1245           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_14:
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V7
        JC        ??ZDO_ProcessMgmtLqiReq_15
// 1246             // Start with 1st neighbor
// 1247             index = 0;
        MOV       ?V0,#0x0
        SJMP      ??ZDO_ProcessMgmtLqiReq_16
// 1248           else
// 1249             // Start with >1st neighbor
// 1250             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_15:
        MOV       A,?V7
        CLR       C
        SUBB      A,R0
        MOV       ?V0,A
        SJMP      ??ZDO_ProcessMgmtLqiReq_16
// 1251           break;
// 1252         }
// 1253       }
// 1254 
// 1255       // Loop through neighbor items and finish list
// 1256       for ( ; x < numItems; x++ )
// 1257       {
// 1258         // Add next neighbor table item
// 1259         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1260 
// 1261         // set ZDP_MgmtLqiItem_t fields
// 1262         item->panID    = entry.panId;
// 1263         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1264         osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
// 1265         item->nwkAddr  = entry.neighborAddress;
// 1266         item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1267         item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1268         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1269         item->depth    = 0xFF;
// 1270         item->lqi      = entry.linkInfo.rxLqi;
// 1271 
// 1272         if ( item->nwkAddr == 0 )
// 1273         {
// 1274           item->devType = ZDP_MGMT_DT_COORD;
// 1275         }
// 1276         else
// 1277         {
// 1278           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_17:
        LCALL     ?Subroutine124 & 0xFFFF
// 1279         }
??CrossCallReturnLabel_365:
        MOVX      @DPTR,A
// 1280 
// 1281         item++;
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDO_ProcessMgmtLqiReq_18
        INC       R7
??ZDO_ProcessMgmtLqiReq_18:
        INC       ?V6
??ZDO_ProcessMgmtLqiReq_13:
        MOV       A,?V6
        CLR       C
        SUBB      A,?V1
        JNC       ??ZDO_ProcessMgmtLqiReq_2
??ZDO_ProcessMgmtLqiReq_16:
        ; Setup parameters for call to function NLME_GetRequest
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V0
        MOV       R3,#0x0
        MOV       R1,#-0x79
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        INC       ?V0
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        ; Setup parameters for call to function osal_memset
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_360:
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
        MOV       A,R6
        ADD       A,#0x12
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_457:
        MOV       DPL,R0
        MOV       DPH,R1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_9:
        MOV       A,#0x3
        LCALL     ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_7:
        MOV       A,#0x22
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_246:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_46:
        MOV       A,R0
        ORL       A,R1
        JNZ       ??ZDO_ProcessMgmtLqiReq_17
        LCALL     ?Subroutine127 & 0xFFFF
// 1282       }
// 1283     }
// 1284   }
??CrossCallReturnLabel_527:
        SJMP      ??CrossCallReturnLabel_365
// 1285   else
// 1286   {
// 1287     numItems = 0;
??ZDO_ProcessMgmtLqiReq_0:
        MOV       ?V1,#0x0
// 1288   }
// 1289 
// 1290   // Send response
// 1291   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1292                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_2:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 59)
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 61)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 62)
        MOV       A,?V7
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 63)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,#0x0
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_174:
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_124:
        LCALL     `??ZDP_MgmtLqiRsp::?relay`; Banked call to: ZDP_MgmtLqiRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 58)
// 1293 
// 1294   if ( table )
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_493:
        JZ        ??ZDO_ProcessMgmtLqiReq_19
// 1295   {
// 1296     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
// 1297   }
??CrossCallReturnLabel_458:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1298 }
??ZDO_ProcessMgmtLqiReq_19:
        MOV       A,#0x2a
        LJMP      ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock242

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond243 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_245
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker245 Using cfiCommon1
          CFI (cfiPicker245) NoFunction
          CFI (cfiPicker245) Picker
        MOV       A,R6
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiPicker245

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond246 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker248 Using cfiCommon1
          CFI (cfiPicker248) NoFunction
          CFI (cfiPicker248) Picker
        LCALL     ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_317:
        RET
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiPicker248

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine193:
          CFI Block cfiCond249 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-5
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_244
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-5
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_6
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-4
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_7
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-4
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker253 Using cfiCommon1
          CFI (cfiPicker253) NoFunction
          CFI (cfiPicker253) Picker
        MOV       A,R6
        ADD       A,#0x18
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiPicker253

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond254 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_232
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-2
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker256 Using cfiCommon1
          CFI (cfiPicker256) NoFunction
          CFI (cfiPicker256) Picker
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiPicker256

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond257 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_359
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-2
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker259 Using cfiCommon1
          CFI (cfiPicker259) NoFunction
          CFI (cfiPicker259) Picker
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       R1,#-0x1
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiPicker259
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine219_0:
          CFI Block cfiCond260 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-2
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-2
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker263 Using cfiCommon1
          CFI (cfiPicker263) NoFunction
          CFI (cfiPicker263) Picker
        MOV       A,R6
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        RET
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiPicker263

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond264 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_364
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-2
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker266 Using cfiCommon1
          CFI (cfiPicker266) NoFunction
          CFI (cfiPicker266) Picker
        MOV       A,R6
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiPicker266
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine220_0:
          CFI Block cfiCond267 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_363
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-2
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker270 Using cfiCommon1
          CFI (cfiPicker270) NoFunction
          CFI (cfiPicker270) Picker
        ADD       A,#0x14
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiPicker270
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine221_0:
          CFI Block cfiCond271 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_361
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-2
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-2
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-2
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-2
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker276 Using cfiCommon1
          CFI (cfiPicker276) NoFunction
          CFI (cfiPicker276) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiPicker276

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond277 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_381
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-2
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker279 Using cfiCommon1
          CFI (cfiPicker279) NoFunction
          CFI (cfiPicker279) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiPicker279
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine222_0:
          CFI Block cfiCond280 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_373
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-2
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-2
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-2
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-2
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-2
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDMatchSendState
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-2
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-2
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-2
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-2
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker290 Using cfiCommon1
          CFI (cfiPicker290) NoFunction
          CFI (cfiPicker290) Picker
        MOV       A,R0
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiPicker290
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine223_0:
          CFI Block cfiCond291 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_366
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-2
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-2
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-2
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDO_ParseEPListRsp
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond295) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond295) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-2
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-2
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDO_ParseUserDescRsp
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-2
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-2
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-2
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-2
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-2
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-2
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDMatchSendState
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-2
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-2
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-2
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-2
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker308 Using cfiCommon1
          CFI (cfiPicker308) NoFunction
          CFI (cfiPicker308) Picker
        LCALL     ??Subroutine268_0 & 0xFFFF
??CrossCallReturnLabel_658:
        RET
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiPicker308

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond309 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-2
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker311 Using cfiCommon1
          CFI (cfiPicker311) NoFunction
          CFI (cfiPicker311) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_551:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_659:
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,#(_NIB + 53) & 0xff
        MOV       R5,#((_NIB + 53) >> 8) & 0xff
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        RET
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiPicker311

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond312 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-2
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker315 Using cfiCommon1
          CFI (cfiPicker315) NoFunction
          CFI (cfiPicker315) Picker
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_259:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiPicker315

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine154:
          CFI Block cfiCond316 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_258
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_12
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-4
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_13
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-4
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_14
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-4
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond320) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-2
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker321 Using cfiCommon1
          CFI (cfiPicker321) NoFunction
          CFI (cfiPicker321) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        RET
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiPicker321

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond322 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-2
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker324 Using cfiCommon1
          CFI (cfiPicker324) NoFunction
          CFI (cfiPicker324) Picker
        MOVX      @DPTR,A
        LCALL     ?Subroutine192 & 0xFFFF
??CrossCallReturnLabel_315:
        MOV       DPH,A
        MOV       A,#0x2
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiPicker324

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond325 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker327 Using cfiCommon1
          CFI (cfiPicker327) NoFunction
          CFI (cfiPicker327) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,#0x2
        MOVX      @DPTR,A
        LCALL     ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_316:
        MOV       A,#-0x1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiPicker327
// 1299 
// 1300 /*********************************************************************
// 1301  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1302  *
// 1303  * @brief       This function handles parsing the incoming Management
// 1304  *              Network Discover request and starts the request.
// 1305  *
// 1306  * @param       inMsg - incoming message (request)
// 1307  *
// 1308  * @return      none
// 1309  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1310 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock328 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1311 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV       A,#-0x7
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        LCALL     ?Subroutine122 & 0xFFFF
// 1312   NLME_ScanFields_t scan;
// 1313   uint8             index;
// 1314   uint8             *msg;
// 1315 
// 1316   msg = inMsg->asdu;
??CrossCallReturnLabel_429:
        ADDC      A,?V1
        LCALL     ?Subroutine92 & 0xFFFF
// 1317   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_154:
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       A,R4
        MOV       R2,A
        MOV       A,R5
        MOV       R3,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?XSTORE_R0123
// 1318   msg += 4;
// 1319   scan.duration = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine17 & 0xFFFF
// 1320   index         = *msg;
??CrossCallReturnLabel_15:
        MOV       R0,A
// 1321   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1322   scan.scanApp  = NLME_DISC_SCAN;
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1323 
// 1324   // Save off the information to be used for the response
// 1325   zdappMgmtNwkDiscReqInProgress          = true;
        MOV       DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX      @DPTR,A
// 1326   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV       DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC       A
        MOVX      @DPTR,A
// 1327   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_459:
        MOV       DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1328   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_392:
        MOV       A,R0
        MOV       DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX      @DPTR,A
// 1329   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_197:
        MOVX      A,@DPTR
        MOV       DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX      @DPTR,A
// 1330 
// 1331   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??NLME_NwkDiscReq2::?relay`; Banked call to: NLME_NwkDiscReq2
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtNwkDiscReq_0
// 1332   {
// 1333     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL     `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1334 
// 1335     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1336   }
// 1337 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV       A,#0x7
        LJMP      ??Subroutine213_0 & 0xFFFF
          CFI EndBlock cfiBlock328

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond329 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_397
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker331 Using cfiCommon1
          CFI (cfiPicker331) NoFunction
          CFI (cfiPicker331) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiPicker331
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine224_0:
          CFI Block cfiCond332 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_384
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-2
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDO_UpdateAddrManager
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond337) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond337) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond337) CFA_SP SP+-7
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-2
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-2
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-2
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker347 Using cfiCommon1
          CFI (cfiPicker347) NoFunction
          CFI (cfiPicker347) Picker
        MOV       A,R2
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiPicker347
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine225_0:
          CFI Block cfiCond348 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_383
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDO_UpdateNwkStatus
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-2
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-2
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDO_UpdateAddrManager
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond354) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond354) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond354) CFA_SP SP+-7
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-2
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-2
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-2
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-2
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-2
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiPicker364 Using cfiCommon1
          CFI (cfiPicker364) NoFunction
          CFI (cfiPicker364) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiPicker364
// 1338 
// 1339 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1340 /*********************************************************************
// 1341  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1342  *
// 1343  * @brief       This function finishes the processing of the Management
// 1344  *              Network Discover Request and generates the response.
// 1345  *
// 1346  *   Note:      This function will limit the number of items returned
// 1347  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1348  *
// 1349  * @param       ResultCountSrcAddr - source of the request
// 1350  * @param       msg - pointer to incoming message
// 1351  * @param       SecurityUse -
// 1352  *
// 1353  * @return      none
// 1354  */
// 1355 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
// 1356 {
// 1357   byte count, i, ResultCount = 0;
// 1358   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
// 1359 
// 1360   NetworkList = nwk_getNwkDescList();
// 1361 
// 1362   // Count the number of nwk descriptors in the list
// 1363   pList = nwk_getNwkDescList();
// 1364   while (pList)
// 1365   {
// 1366     ResultCount++;
// 1367     pList = pList->nextDesc;
// 1368   }
// 1369 
// 1370   if ( ZSTACK_ROUTER_BUILD )
// 1371   {
// 1372     // Look for my PanID.
// 1373     pList = nwk_getNwkDescList();
// 1374     while ( pList )
// 1375     {
// 1376       if ( pList->panId == _NIB.nwkPanId )
// 1377       {
// 1378         break;
// 1379       }
// 1380 
// 1381 
// 1382       if ( !pList->nextDesc )
// 1383       {
// 1384         break;
// 1385       }
// 1386       pList = pList->nextDesc;
// 1387     }
// 1388 
// 1389 
// 1390     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1391     // prepend it.
// 1392     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1393     {
// 1394       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
// 1395       if ( newDesc )
// 1396       {
// 1397         byte pJoin;
// 1398 
// 1399         newDesc->panId = _NIB.nwkPanId;
// 1400         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
// 1401         newDesc->version = NLME_GetProtocolVersion();
// 1402         newDesc->stackProfile = zgStackProfile;
// 1403         
// 1404         //Extended PanID
// 1405         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
// 1406 
// 1407         ZMacGetReq( ZMacAssociationPermit, &pJoin );
// 1408         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1409                                            INVALID_NODE_ADDR);
// 1410 
// 1411         newDesc->nextDesc = NetworkList;
// 1412         NetworkList = newDesc;
// 1413         ResultCount++;
// 1414       }
// 1415     }
// 1416   }
// 1417 
// 1418   // Calc the count and apply a max count.
// 1419   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
// 1420   {
// 1421     count = 0;
// 1422   }
// 1423   else
// 1424   {
// 1425     count = ResultCount - zdappMgmtNwkDiscStartIndex;
// 1426     if ( count > ZDO_MAX_NWKDISC_ITEMS )
// 1427     {
// 1428       count = ZDO_MAX_NWKDISC_ITEMS;
// 1429     }
// 1430 
// 1431     // Move the list pointer up to the start index.
// 1432     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
// 1433     {
// 1434       NetworkList = NetworkList->nextDesc;
// 1435     }
// 1436   }
// 1437 
// 1438   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1439                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1440                       zdappMgmtNwkDiscStartIndex,
// 1441                       count,
// 1442                       NetworkList,
// 1443                       false );
// 1444 
// 1445   if ( ZSTACK_ROUTER_BUILD )
// 1446   {
// 1447     if ( newDesc != NULL )
// 1448     {
// 1449       osal_mem_free( newDesc );
// 1450     }
// 1451   }
// 1452 
// 1453   NLME_NwkDiscTerm();
// 1454 }
// 1455 #endif
// 1456 
// 1457 /*********************************************************************
// 1458  * @fn          ZDO_ProcessMgmtRtgReq
// 1459  *
// 1460  * @brief       This function finishes the processing of the Management
// 1461  *              Routing Request and generates the response.
// 1462  *
// 1463  *   Note:      This function will limit the number of items returned
// 1464  *              to ZDO_MAX_RTG_ITEMS items.
// 1465  *
// 1466  * @param       inMsg - incoming message (request)
// 1467  *
// 1468  * @return      none
// 1469  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1470 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock365 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1471 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V6,R2
        MOV       ?V7,R3
// 1472   byte x;
// 1473   byte maxNumItems;
// 1474   byte numItems = 0;
        MOV       R6,#0x0
// 1475   uint8 *pBuf = NULL;
        MOV       ?V4,R6
        MOV       ?V5,R6
// 1476   rtgItem_t *pList;
// 1477   uint8 StartIndex = inMsg->asdu[0];
        LCALL     ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_432:
        ADDC      A,?V7
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_403:
        MOV       ?V2,A
// 1478 
// 1479   // Get the number of table items
// 1480   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x63
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1481 
// 1482   if ( maxNumItems > StartIndex )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V2
        CLR       C
        SUBB      A,R0
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtRtgReq_0 & 0xFFFF
// 1483   {
// 1484     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V2
        MOV       R6,A
// 1485 
// 1486     // limit the size of the list
// 1487     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR       C
        SUBB      A,#0xb
        JC        ??ZDO_ProcessMgmtRtgReq_1
// 1488     {
// 1489       numItems = ZDO_MAX_RTG_ITEMS;
        MOV       R6,#0xa
// 1490     }
// 1491 
// 1492     // Allocate the memory to build the table
// 1493     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        MOV       B,#0x7
        MUL       AB
        MOV       R2,A
        MOV       R3,B
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       ?V4,R2
        MOV       ?V5,R3
// 1494 
// 1495     if ( pBuf != NULL )
        MOV       A,R2
        ORL       A,?V5
        JZ        ??ZDO_ProcessMgmtRtgReq_2
// 1496     {
// 1497       // Convert buffer to list
// 1498       pList = (rtgItem_t *)pBuf;
// 1499 
// 1500       // Loop through items and build list
// 1501       for ( x = 0; x < numItems; x++ )
        MOV       R7,#0x0
        SJMP      ??ZDO_ProcessMgmtRtgReq_3
// 1502       {
// 1503         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1504 
// 1505         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1506         switch( pList->status )
// 1507         {
// 1508           case RT_ACTIVE:
// 1509             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1510             break;
// 1511 
// 1512           case RT_DISC:
// 1513             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1514             break;
// 1515 
// 1516           case RT_LINK_FAIL:
// 1517             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
??ZDO_ProcessMgmtRtgReq_4:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,#0x2
        MOVX      @DPTR,A
// 1518 
// 1519           case RT_INIT:
// 1520           case RT_REPAIR:
// 1521           default:
// 1522             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_5:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,#0x3
??ZDO_ProcessMgmtRtgReq_6:
        MOVX      @DPTR,A
// 1523             break;
// 1524         }
// 1525 
// 1526         // Increment pointer to next record
// 1527         pList++;
        MOV       A,?V0
        ADD       A,#0x7
        MOV       ?V0,A
        JNC       ??ZDO_ProcessMgmtRtgReq_7
        INC       ?V1
??ZDO_ProcessMgmtRtgReq_7:
        INC       R7
??ZDO_ProcessMgmtRtgReq_3:
        MOV       A,R7
        CLR       C
        SUBB      A,R6
        JNC       ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?V0
        MOV       R5,?V1
        MOV       A,R7
        MOV       R0,?V2
        ADD       A,R0
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        MOV       R1,#-0x75
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_8
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_9
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_4
        SJMP      ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        CLR       A
        SJMP      ??ZDO_ProcessMgmtRtgReq_6
??ZDO_ProcessMgmtRtgReq_9:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,#0x1
        SJMP      ??ZDO_ProcessMgmtRtgReq_6
// 1528       }
// 1529     }
// 1530     else
// 1531     {
// 1532       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV       R6,#0x0
// 1533     }
// 1534   }
// 1535 
// 1536   // Send response
// 1537   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1538                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R6
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,?V2
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,#0x0
        MOV       A,?V6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,?V7
        MOV       R3,A
        MOV       A,?V6
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_303:
        ADDC      A,?V7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_MgmtRtgRsp::?relay`; Banked call to: ZDP_MgmtRtgRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1539 
// 1540   if ( pBuf )
        MOV       A,?V4
        ORL       A,?V5
        JZ        ??ZDO_ProcessMgmtRtgReq_10
// 1541   {
// 1542     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1543   }
// 1544 }
??ZDO_ProcessMgmtRtgReq_10:
        MOV       A,#0x1
          CFI EndBlock cfiBlock365
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock366 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Valid
        LJMP      ??Subroutine217_0 & 0xFFFF
          CFI EndBlock cfiBlock366

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond367 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_403
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-2
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker369 Using cfiCommon1
          CFI (cfiPicker369) NoFunction
          CFI (cfiPicker369) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiPicker369
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine226_0:
          CFI Block cfiCond370 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_399
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDO_UpdateNwkStatus
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-2
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-2
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker376 Using cfiCommon1
          CFI (cfiPicker376) NoFunction
          CFI (cfiPicker376) Picker
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_408:
        RET
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiPicker376

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine163:
          CFI Block cfiCond377 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_131
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-4
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_114
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-4
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_115
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-4
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_403
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-4
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_404
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-4
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDO_UpdateNwkStatus
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_399
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-4
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function ZDO_UpdateNwkStatus
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_400
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-4
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_401
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-4
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_402
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-4
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_83
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-4
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_405, ??CrossCallReturnLabel_84
          CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond388) CFA_SP SP+-4
          CFI (cfiCond388) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker389 Using cfiCommon1
          CFI (cfiPicker389) NoFunction
          CFI (cfiPicker389) Picker
        LCALL     ?Subroutine200 & 0xFFFF
??CrossCallReturnLabel_411:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiPicker389
// 1545 
// 1546 /*********************************************************************
// 1547  * @fn          ZDO_ProcessMgmtBindReq
// 1548  *
// 1549  * @brief       This function finishes the processing of the Management
// 1550  *              Bind Request and generates the response.
// 1551  *
// 1552  *   Note:      This function will limit the number of items returned
// 1553  *              to ZDO_MAX_BIND_ITEMS items.
// 1554  *
// 1555  * @param       inMsg - incoming message (request)
// 1556  *
// 1557  * @return      none
// 1558  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1559 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock390 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1560 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1561 #if defined ( REFLECTOR )
// 1562   byte x;
// 1563   uint16 maxNumItems;
// 1564   uint16 numItems;
// 1565   uint8 *pBuf = NULL;
??CrossCallReturnLabel_393:
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 1566   apsBindingItem_t *pList;
// 1567   uint8 StartIndex = inMsg->asdu[0];
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_84:
        MOV       ?V2,A
// 1568   uint8 status;
// 1569 
// 1570   // Get the number of table items
// 1571   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
        ; Setup parameters for call to function APSME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x5d
        LCALL     `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1572 
// 1573   if ( maxNumItems > StartIndex )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_541:
        CLR       C
        MOV       A,?V2
        SUBB      A,R0
        CLR       A
        SUBB      A,R1
        JNC       ??ZDO_ProcessMgmtBindReq_0
// 1574   {
// 1575     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       R0,?V2
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R0
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        SUBB      A,#0x0
        MOV       R7,A
// 1576   }
// 1577   else
// 1578   {
// 1579     numItems = 0;
// 1580   }
// 1581 
// 1582   // limit the size of the list
// 1583   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR       C
        MOV       A,R6
        SUBB      A,#0x4
        MOV       A,R7
        SUBB      A,#0x0
        JC        ??ZDO_ProcessMgmtBindReq_1
// 1584   {
// 1585     numItems = ZDO_MAX_BIND_ITEMS;
        MOV       R6,#0x3
        MOV       R7,#0x0
        SJMP      ??ZDO_ProcessMgmtBindReq_2
// 1586   }
// 1587 
// 1588   // Allocate the memory to build the table
// 1589   if ( numItems && (pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems )) )
??ZDO_ProcessMgmtBindReq_1:
        MOV       A,R6
        ORL       A,R7
        JZ        ??ZDO_ProcessMgmtBindReq_0
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       A,R2
        MOV       B,#0x15
        MUL       AB
        MOV       R2,A
        MOV       R0,B
        MOV       B,#0x15
        MOV       A,R3
        MUL       AB
        ADD       A,R0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       A,R2
        ORL       A,?V5
        JZ        ??ZDO_ProcessMgmtBindReq_0
// 1590   {
// 1591     status = ZSuccess;
        MOV       ?V1,#0x0
// 1592 
// 1593     // Convert buffer to list
// 1594     pList = (apsBindingItem_t *)pBuf;
        MOV       ?V6,R2
        MOV       ?V7,R3
// 1595 
// 1596     // Loop through items and build list
// 1597     for ( x = 0; x < numItems; x++ )
        MOV       ?V0,#0x0
        SJMP      ??ZDO_ProcessMgmtBindReq_3
// 1598     {
// 1599       APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
??ZDO_ProcessMgmtBindReq_4:
        ; Setup parameters for call to function APSME_GetRequest
        MOV       R4,?V6
        MOV       R5,?V7
        MOV       R0,?V2
        MOV       A,?V0
        ADD       A,R0
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        MOV       R1,#-0x5e
        LCALL     `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1600       pList++;
        MOV       A,?V6
        ADD       A,#0x15
        MOV       ?V6,A
        JNC       ??ZDO_ProcessMgmtBindReq_5
        INC       ?V7
// 1601     }
??ZDO_ProcessMgmtBindReq_5:
        INC       ?V0
??ZDO_ProcessMgmtBindReq_3:
        CLR       C
        MOV       A,?V0
        SUBB      A,R6
        CLR       A
        SUBB      A,R7
        JC        ??ZDO_ProcessMgmtBindReq_4
        MOV       A,R6
        MOV       R1,A
        SJMP      ??ZDO_ProcessMgmtBindReq_6
// 1602 
// 1603   }
// 1604   else
// 1605   {
// 1606     status = ZDP_NOT_PERMITTED;
??ZDO_ProcessMgmtBindReq_0:
        MOV       ?V1,#-0x75
// 1607     numItems = 0;
        MOV       R1,#0x0
// 1608   }
// 1609 
// 1610   // Send response
// 1611   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1612                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_6:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,?V2
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,?V1
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_175:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_125:
        LCALL     `??ZDP_MgmtBindRsp::?relay`; Banked call to: ZDP_MgmtBindRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1613 
// 1614   if ( pBuf )
        MOV       A,?V4
        ORL       A,?V5
        JZ        ??ZDO_ProcessMgmtBindReq_7
// 1615   {
// 1616     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1617   }
// 1618 #else
// 1619   (void)inMsg;
// 1620 #endif
// 1621 }
??ZDO_ProcessMgmtBindReq_7:
        MOV       A,#0x4
        LJMP      ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock390

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond391 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-2
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker393 Using cfiCommon1
          CFI (cfiPicker393) NoFunction
          CFI (cfiPicker393) Picker
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        RET
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiPicker393

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond394 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-2
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_282:
        RET
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine168:
          CFI Block cfiCond397 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_95
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_124
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-4
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_125
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-4
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker401 Using cfiCommon1
          CFI (cfiPicker401) NoFunction
          CFI (cfiPicker401) Picker
        LCALL     ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_603:
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiPicker401

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond402 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker404 Using cfiCommon1
          CFI (cfiPicker404) NoFunction
          CFI (cfiPicker404) Picker
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_287:
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_405:
        RET
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiPicker404

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine172:
          CFI Block cfiCond405 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_128
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_129
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-4
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_83
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-4
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_84
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+-4
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker409 Using cfiCommon1
          CFI (cfiPicker409) NoFunction
          CFI (cfiPicker409) Picker
        LCALL     ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_606:
        LCALL     ?Subroutine206 & 0xFFFF
??CrossCallReturnLabel_690:
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiPicker409
// 1622 
// 1623 /*********************************************************************
// 1624  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1625  *
// 1626  * @brief       This function finishes the processing of the Management
// 1627  *              Direct Join Request and generates the response.
// 1628  *
// 1629  * @param       inMsg - incoming message (request)
// 1630  *
// 1631  * @return      none
// 1632  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1633 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock410 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1634 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL     ?Subroutine121 & 0xFFFF
// 1635   uint8 *deviceAddr;
// 1636   uint8 capInfo;
// 1637   uint8 stat;
// 1638 
// 1639   // Parse the message
// 1640   deviceAddr = inMsg->asdu;
// 1641   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1642 
// 1643   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
??CrossCallReturnLabel_416:
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_173:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??NLME_DirectJoinRequest::?relay`; Banked call to: NLME_DirectJoinRequest
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1644 
// 1645   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x35
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
// 1646 }
          CFI EndBlock cfiBlock410
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock411 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
        LJMP      ??Subroutine213_0 & 0xFFFF
          CFI EndBlock cfiBlock411

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond412 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_416
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDO_ProcessUserDescReq
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-2
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker415 Using cfiCommon1
          CFI (cfiPicker415) NoFunction
          CFI (cfiPicker415) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiPicker415
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine227_0:
          CFI Block cfiCond416 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_419
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function ZDO_ParseAddrRsp
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-2
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-2
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-2
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDO_ProcessUserDescReq
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker421 Using cfiCommon1
          CFI (cfiPicker421) NoFunction
          CFI (cfiPicker421) Picker
        LCALL     ?Subroutine189 & 0xFFFF
??CrossCallReturnLabel_436:
        ADDC      A,R7
        RET
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiPicker421
// 1647 
// 1648 /*********************************************************************
// 1649  * @fn          ZDO_ProcessMgmtLeaveReq
// 1650  *
// 1651  * @brief       This function processes a Management Leave Request
// 1652  *              and generates the response.
// 1653  *
// 1654  * @param       inMsg - incoming message (request)
// 1655  *
// 1656  * @return      none
// 1657  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1658 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock422 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1659 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL     ?Subroutine122 & 0xFFFF
// 1660   NLME_LeaveReq_t req;
// 1661   ZStatus_t       status;
// 1662   uint8           option;
// 1663   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_430:
        ADDC      A,?V1
        LCALL     ?Subroutine102 & 0xFFFF
// 1664 
// 1665   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1666        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
??CrossCallReturnLabel_421:
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??AddrMgrExtAddrValid::?relay`; Banked call to: AddrMgrExtAddrValid
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R4,?V2
        MOV       R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMgmtLeaveReq_1
// 1667   {
// 1668     // Remove this device
// 1669     req.extAddr = NULL;
??ZDO_ProcessMgmtLeaveReq_0:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        SJMP      ??ZDO_ProcessMgmtLeaveReq_2
// 1670   }
// 1671   else
// 1672   {
// 1673     // Remove child device
// 1674     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
// 1675   }
??ZDO_ProcessMgmtLeaveReq_2:
        LCALL     ?Subroutine28 & 0xFFFF
// 1676 
// 1677   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_36:
        MOV       R0,A
// 1678   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV       C,0xE0 /* A   */.6
        JNC       ??ZDO_ProcessMgmtLeaveReq_3
// 1679   {
// 1680     req.removeChildren = TRUE;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1681   }
// 1682 
// 1683   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV       A,R0
        MOV       C,0xE0 /* A   */.7
        JNC       ??ZDO_ProcessMgmtLeaveReq_4
// 1684   {
// 1685      req.rejoin = TRUE;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1686   }
// 1687 
// 1688   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
// 1689 
// 1690   status = NLME_LeaveReq( &req );
        ; Setup parameters for call to function NLME_LeaveReq
        INC       A
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??NLME_LeaveReq::?relay`; Banked call to: NLME_LeaveReq
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1691 
// 1692   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V2,#0x34
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_196:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1693 }
        MOV       A,#0x6
        LJMP      ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock422

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond423 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_195
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_196
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-2
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker425 Using cfiCommon1
          CFI (cfiPicker425) NoFunction
          CFI (cfiPicker425) Picker
        MOV       R1,#0x1
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V1
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiPicker425

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond426 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_421
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-2
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker428 Using cfiCommon1
          CFI (cfiPicker428) NoFunction
          CFI (cfiPicker428) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiPicker428
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine228_0:
          CFI Block cfiCond429 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_423
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-2
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker432 Using cfiCommon1
          CFI (cfiPicker432) NoFunction
          CFI (cfiPicker432) Picker
        LCALL     ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_428:
        ; Setup parameters for call to function AddrMgrExtAddrValid
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        RET
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiPicker432

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine177:
          CFI Block cfiCond433 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDMatchSendState
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_79
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-4
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_154
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-4
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_155
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-4
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker437 Using cfiCommon1
          CFI (cfiPicker437) NoFunction
          CFI (cfiPicker437) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiPicker437
        REQUIRE ??Subroutine229_0
        ; // Fall through to label ??Subroutine229_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine229_0:
          CFI Block cfiCond438 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_424
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+-2
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_421
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-4
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_422
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-4
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDO_UpdateNwkStatus
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_428, ??CrossCallReturnLabel_423
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+-4
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDMatchSendState
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_78
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+-4
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDMatchSendState
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_79
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-4
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_154
          CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond445) CFA_SP SP+-4
          CFI (cfiCond445) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_427, ??CrossCallReturnLabel_155
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-4
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker447 Using cfiCommon1
          CFI (cfiPicker447) NoFunction
          CFI (cfiPicker447) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        RET
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiPicker447
// 1694 
// 1695 
// 1696 /*********************************************************************
// 1697  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1698  *
// 1699  * @brief       This function processes a Management Permit Join Request
// 1700  *              and generates the response.
// 1701  *
// 1702  * @param       inMsg - incoming message (request)
// 1703  *
// 1704  * @return      none
// 1705  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1706 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock448 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1707 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL     ?Subroutine121 & 0xFFFF
// 1708   uint8 stat;
// 1709   uint8 duration;
// 1710   uint8 tcsig;
// 1711 
// 1712   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
// 1713   tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
// 1714 
// 1715   // Set the network layer permit join duration
// 1716   stat = (byte) NLME_PermitJoiningRequest( duration );
??CrossCallReturnLabel_417:
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_404:
        MOV       R1,A
        LCALL     `??NLME_PermitJoiningRequest::?relay`; Banked call to: NLME_PermitJoiningRequest
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine21 & 0xFFFF
// 1717 
// 1718   // Handle the Trust Center Significance
// 1719   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1720   {
// 1721     if ( tcsig == TRUE )
// 1722     {
// 1723       ZDSecMgrPermitJoining( duration );
// 1724     }
// 1725   }
// 1726 
// 1727   // Send a response if unicast
// 1728   if (inMsg->srcAddr.addr.shortAddr != NWK_BROADCAST_SHORTADDR)
??CrossCallReturnLabel_18:
        CPL       A
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_0
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDO_ProcessMgmtPermitJoinReq_0:
        JZ        ??ZDO_ProcessMgmtPermitJoinReq_1
// 1729   {
// 1730     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x36
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL     ?Subroutine126 & 0xFFFF
// 1731   }
??CrossCallReturnLabel_194:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1732 }
??ZDO_ProcessMgmtPermitJoinReq_1:
        LJMP      ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock448

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond449 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_193
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker451 Using cfiCommon1
          CFI (cfiPicker451) NoFunction
          CFI (cfiPicker451) Picker
        MOV       R1,#0x1
        MOV       A,R6
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        RET
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiPicker451
// 1733 
// 1734 /*
// 1735  * This function stub allows the next higher layer to be notified of
// 1736  * a permit joining timeout.
// 1737  */
// 1738 /*********************************************************************
// 1739  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1740  *
// 1741  * @brief       This function stub allows the next higher layer to be
// 1742  *              notified of a permit joining timeout. Currently, this
// 1743  *              directly bypasses the APS layer.
// 1744  *
// 1745  * @param       none
// 1746  *
// 1747  * @return      none
// 1748  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1749 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock452 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 1750 {
        ; Saved register size: 0
        ; Auto size: 0
// 1751   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 1752   // Currently, only the ZDSecMgr needs to be notified
// 1753   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1754   {
// 1755     ZDSecMgrPermitJoiningTimeout();
// 1756   }
// 1757   #endif
// 1758 }
        LJMP      ?BRET
          CFI EndBlock cfiBlock452
// 1759 
// 1760 /*********************************************************************
// 1761  * @fn          ZDO_ProcessUserDescReq
// 1762  *
// 1763  * @brief       This function finishes the processing of the User
// 1764  *              Descriptor Request and generates the response.
// 1765  *
// 1766  * @param       inMsg - incoming message (request)
// 1767  *
// 1768  * @return      none
// 1769  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1770 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock453 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 1771 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 17
        MOV       A,#-0x11
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL     ?Subroutine121 & 0xFFFF
// 1772   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??CrossCallReturnLabel_418:
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_93:
        MOV       ?V0,A
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
// 1773   UserDescriptorFormat_t userDesc;
// 1774 
// 1775   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 1776              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??ZDO_ProcessUserDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??ZDO_ProcessUserDescReq_0:
        JNZ       ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V2,#0x11
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x7f
        MOV       R3,#0x0
        LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R1
        JNZ       ??ZDO_ProcessUserDescReq_1
// 1777   {
// 1778     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       R4,?V0
        MOV       R5,?V1
        LCALL     ?Subroutine123 & 0xFFFF
// 1779   }
??CrossCallReturnLabel_189:
        LCALL     `??ZDP_UserDescRsp::?relay`; Banked call to: ZDP_UserDescRsp
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP      ??ZDO_ProcessUserDescReq_2
// 1780   else
// 1781   {
// 1782     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 1783            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V2,#0x11
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL     ?Subroutine131 & 0xFFFF
// 1784   }
??CrossCallReturnLabel_203:
        MOV       R4,#-0x7c
        LCALL     ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
// 1785 }
??ZDO_ProcessUserDescReq_2:
        MOV       A,#0x11
        LJMP      ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock453

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond454 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_202
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDO_ProcessUserDescReq
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker456 Using cfiCommon1
          CFI (cfiPicker456) NoFunction
          CFI (cfiPicker456) Picker
        LCALL     ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_302:
        RET
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiPicker456

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine186:
          CFI Block cfiCond457 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_86
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-4
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_202
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-4
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDO_ProcessUserDescReq
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_203
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-4
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker461 Using cfiCommon1
          CFI (cfiPicker461) NoFunction
          CFI (cfiPicker461) Picker
        MOV       A,R6
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R5,A
        RET
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiPicker461

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond462 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_188
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDO_ProcessUserDescReq
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-2
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDO_ProcessUserDescReq
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-2
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker465 Using cfiCommon1
          CFI (cfiPicker465) NoFunction
          CFI (cfiPicker465) Picker
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_300:
        RET
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiPicker465

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine184:
          CFI Block cfiCond466 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_85
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_86
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-4
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_188
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-4
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDO_ProcessUserDescReq
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_189
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-4
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDO_ProcessUserDescReq
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_190
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-4
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker471 Using cfiCommon1
          CFI (cfiPicker471) NoFunction
          CFI (cfiPicker471) Picker
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiPicker471

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond472 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDO_ProcessUserDescReq
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-2
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker474 Using cfiCommon1
          CFI (cfiPicker474) NoFunction
          CFI (cfiPicker474) Picker
        LCALL     ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_275:
        RET
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiPicker474

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine164:
          CFI Block cfiCond475 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_75
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-4
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_92
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-4
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDO_ProcessUserDescReq
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_93
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-4
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker479 Using cfiCommon1
          CFI (cfiPicker479) NoFunction
          CFI (cfiPicker479) Picker
        LCALL     ?Subroutine204 & 0xFFFF
??CrossCallReturnLabel_337:
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        RET
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiPicker479
// 1786 
// 1787 /*********************************************************************
// 1788  * @fn          ZDO_ProcessUserDescSet
// 1789  *
// 1790  * @brief       This function finishes the processing of the User
// 1791  *              Descriptor Set and generates the response.
// 1792  *
// 1793  * @param       inMsg - incoming message (request)
// 1794  *
// 1795  * @return      none
// 1796  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1797 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock480 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 1798 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 21
        MOV       A,#-0x15
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V4,R2
        MOV       ?V5,R3
// 1799   uint8 *msg;
// 1800   uint16 aoi;
// 1801   UserDescriptorFormat_t userDesc;
// 1802   uint8 outMsg[3];
// 1803   uint8 status;
// 1804 
// 1805   msg = inMsg->asdu;
        LCALL     ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_433:
        ADDC      A,?V5
        LCALL     ?Subroutine81 & 0xFFFF
// 1806   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_132:
        MOV       R2,A
        CLR       A
        XCH       A,R2
        MOV       R3,A
        MOV       A,R4
        ADD       A,R2
        MOV       R6,A
        CLR       A
        ADDC      A,R3
        MOV       R7,A
// 1807 
// 1808   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_ProcessUserDescSet_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
??ZDO_ProcessUserDescSet_0:
        JZ        $+5
        LJMP      ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 1809   {
// 1810     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        SUBB      A,#0x10
        JNC       ??ZDO_ProcessUserDescSet_2
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        SJMP      ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#0x10
??ZDO_ProcessUserDescSet_3:
        MOVX      @DPTR,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine35 & 0xFFFF
// 1811     msg ++;  // increment one for the length field
// 1812 
// 1813     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_50:
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V0,R1
        MOV       ?V1,R2
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 1814     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V0,#0x11
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x7f
        MOV       R3,#0x0
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 1815     if ( userDesc.len != 0 )
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDO_Config_Node_Descriptor
        JZ        ??ZDO_ProcessUserDescSet_4
// 1816     {
// 1817       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX      A,@DPTR
        SETB      0xE0 /* A   */.4
        SJMP      ??ZDO_ProcessUserDescSet_5
// 1818     }
// 1819     else
// 1820     {
// 1821       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX      A,@DPTR
        CLR       0xE0 /* A   */.4
??ZDO_ProcessUserDescSet_5:
        MOVX      @DPTR,A
// 1822     }
// 1823 
// 1824     status = ZDP_SUCCESS;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        SJMP      ??ZDO_ProcessUserDescSet_6
// 1825   }
// 1826   else
// 1827   {
// 1828     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX      @DPTR,A
// 1829   }
// 1830 
// 1831   outMsg[0] = status;
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1832   outMsg[1] = LO_UINT16( aoi );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 1833   outMsg[2] = LO_UINT16( aoi );
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 1834 
// 1835   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 1836                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_614:
        ADDC      A,?V5
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_440:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#0x14
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       R1,#0x3
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV       R2,A
        CLR       A
        ADDC      A,?V5
        MOV       R3,A
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 1837 }
        MOV       A,#0x15
        LJMP      ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock480

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond481 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_200
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_ProcessUserDescSet
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-2
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 40)
          CFI Block cfiPicker483 Using cfiCommon1
          CFI (cfiPicker483) NoFunction
          CFI (cfiPicker483) Picker
        MOV       A,?V4
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V5
        MOV       R5,A
        MOV       A,?V4
        ADD       A,#0xf
        RET
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiPicker483

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond484 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_429
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-2
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker486 Using cfiCommon1
          CFI (cfiPicker486) NoFunction
          CFI (cfiPicker486) Picker
        MOV       ?V0,R2
        MOV       ?V1,R3
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiPicker486
        REQUIRE ??Subroutine230_0
        ; // Fall through to label ??Subroutine230_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine230_0:
          CFI Block cfiCond487 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_431
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-2
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDO_ProcessUserDescSet
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-2
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-2
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker492 Using cfiCommon1
          CFI (cfiPicker492) NoFunction
          CFI (cfiPicker492) Picker
        MOV       A,R2
        LCALL     ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_437:
        RET
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiPicker492

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond493 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_440
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDMatchSendState
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-2
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker495 Using cfiCommon1
          CFI (cfiPicker495) NoFunction
          CFI (cfiPicker495) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiPicker495
        REQUIRE ??Subroutine231_0
        ; // Fall through to label ??Subroutine231_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine231_0:
          CFI Block cfiCond496 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_438
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_439
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-2
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ZDO_ProcessUserDescSet
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-2
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDMatchSendState
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-2
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDO_ProcessUserDescSet
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker503 Using cfiCommon1
          CFI (cfiPicker503) NoFunction
          CFI (cfiPicker503) Picker
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_293:
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiPicker503
// 1838 
// 1839 /*********************************************************************
// 1840  * @fn          ZDO_ProcessDeviceAnnce
// 1841  *
// 1842  * @brief       This function processes a device annouce message.
// 1843  *
// 1844  * @param       inMsg - incoming message
// 1845  *
// 1846  * @return      none
// 1847  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1848 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock504 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 1849 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV       A,#-0x20
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
// 1850   ZDO_DeviceAnnce_t Annce;
// 1851   AddrMgrEntry_t addrEntry;
// 1852   uint8 parentExt[Z_EXTADDR_LEN];
// 1853 
// 1854   // Parse incoming message
// 1855   ZDO_ParseDeviceAnnce( inMsg, &Annce );
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        LCALL     `??ZDO_ParseDeviceAnnce::?relay`; Banked call to: ZDO_ParseDeviceAnnce
// 1856 
// 1857   if ( ZSTACK_END_DEVICE_BUILD )
// 1858   {
// 1859     // Make sure the message didn't come from myself - end device only
// 1860     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_0
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_1
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_1:
        JNZ       $+5
        LJMP      ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 1861     {
// 1862       return;
// 1863     }
// 1864   }
// 1865 
// 1866 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 1867   // Clean up the neighbor table
// 1868   nwkNeighborRemoveAllStranded();
??ZDO_ProcessDeviceAnnce_0:
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL     `??nwkNeighborRemoveAllStranded::?relay`; Banked call to: nwkNeighborRemoveAllStranded
// 1869 
// 1870   // If address conflict is detected, no need to update the address manager
// 1871   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_460:
        LCALL     `??NLME_CheckNewAddrSet::?relay`; Banked call to: NLME_CheckNewAddrSet
        MOV       A,R1
        XRL       A,#0x1
        JNZ       $+5
        LJMP      ??ZDO_ProcessDeviceAnnce_2 & 0xFFFF
// 1872   {
// 1873     return;
// 1874   }
// 1875 #endif
// 1876 
// 1877 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 1878   // Check for parent's address
// 1879   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??NLME_GetCoordExtAddr::?relay`; Banked call to: NLME_GetCoordExtAddr
// 1880   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_3
// 1881   {
// 1882     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL     `??NLME_GetCoordShortAddr::?relay`; Banked call to: NLME_GetCoordShortAddr
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_4:
        JZ        ??ZDO_ProcessDeviceAnnce_3
// 1883     {
// 1884       // Set the Parent's MAC's new short address
// 1885       _NIB.nwkCoordAddress = Annce.nwkAddr;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_542:
        MOV       DPTR,#_NIB + 23
        LCALL     ??Subroutine222_0 & 0xFFFF
// 1886       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_376:
        ; Setup parameters for call to function ZMacSetReq
        MOV       R2,#(_NIB + 23) & 0xff
        MOV       R3,#((_NIB + 23) >> 8) & 0xff
        MOV       R1,#0x4b
        LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
// 1887     }
// 1888   }
// 1889 
// 1890   if ( ZSTACK_ROUTER_BUILD )
// 1891   {
// 1892     // If the device annce comes from a end device child that has moved
// 1893     // to another parent, remove it from associated device list
// 1894 
// 1895     // If the dev annce is coming from other device's children,
// 1896     // (The dev annce from its own children shall be unicast to itself,
// 1897     // So check the mac destination address)
// 1898     // Remove it from the associated device list. If it is not
// 1899     // a child, no action will be taken in AssocRemove() anyway.
// 1900     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
// 1901     {
// 1902       associated_devices_t *dev_ptr;
// 1903 
// 1904       // If it's an end device child
// 1905       dev_ptr = AssocGetWithExt( Annce.extAddr );
// 1906       if ( dev_ptr )
// 1907       {
// 1908         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 1909              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
// 1910         {
// 1911           AssocRemove( Annce.extAddr );
// 1912         }
// 1913       }
// 1914     }
// 1915 
// 1916     if ( Annce.nwkAddr != NLME_GetShortAddr() )
// 1917     {
// 1918       // If an associated device is found with matched extended Address,
// 1919       // update its short address
// 1920       if ( AssocChangeNwkAddr( Annce.nwkAddr, Annce.extAddr ) )
// 1921       {
// 1922         // Update the neighbor table
// 1923         nwkNeighborUpdateNwkAddr( Annce.nwkAddr, Annce.extAddr );
// 1924 
// 1925         // Set event to save NV
// 1926         ZDApp_NVUpdate();
// 1927       }
// 1928     }
// 1929   }
// 1930   
// 1931   // Assume that the device has moved, remove existing routing entries
// 1932   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
??ZDO_ProcessDeviceAnnce_3:
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV       R1,#0x0
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_461:
        LCALL     `??RTG_RemoveRtgEntry::?relay`; Banked call to: RTG_RemoveRtgEntry
// 1933   
// 1934 #endif // ZIGBEE_STOCHASTIC_ADDRESSING
// 1935 
// 1936 
// 1937   // Fill in the extended address in address manager if we don't have it already.
// 1938   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine27 & 0xFFFF
// 1939   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_32:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine222_0 & 0xFFFF
// 1940   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_377:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_2
// 1941   {
// 1942     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 1943     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_2
// 1944     {
// 1945       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 1946       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 1947     }
// 1948   }
// 1949 }
??ZDO_ProcessDeviceAnnce_2:
        MOV       A,#0x20
        LJMP      ??Subroutine213_0 & 0xFFFF
          CFI EndBlock cfiBlock504
// 1950 
// 1951 /*********************************************************************
// 1952  * @fn          ZDO_BuildSimpleDescBuf
// 1953  *
// 1954  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 1955  *
// 1956  * @param       buf  - pointer to a byte array big enough for data.
// 1957  * @param       desc - SimpleDescriptionFormat_t *
// 1958  *
// 1959  * @return      none
// 1960  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1961 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock505 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 1962 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 1963   byte cnt;
// 1964   uint16 *ptr;
// 1965 
// 1966   *buf++ = desc->EndPoint;
        LCALL     ?Subroutine97 & 0xFFFF
// 1967   *buf++ = HI_UINT16( desc->AppProfId );
??CrossCallReturnLabel_160:
        MOV       R0,DPL
        MOV       R1,DPH
        LCALL     ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_442:
        LCALL     ?Subroutine30 & 0xFFFF
// 1968   *buf++ = LO_UINT16( desc->AppProfId );
??CrossCallReturnLabel_40:
        MOVX      @DPTR,A
// 1969   *buf++ = HI_UINT16( desc->AppDeviceId );
        MOV       A,R6
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_443:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine30 & 0xFFFF
// 1970   *buf++ = LO_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_41:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine17 & 0xFFFF
// 1971 
// 1972   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_16:
        SWAP      A
        ANL       A,#0xf0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine46 & 0xFFFF
// 1973 
// 1974   *buf++ = desc->AppNumInClusters;
??CrossCallReturnLabel_64:
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_444:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x7
        MOV       R2,A
        JNC       ??ZDO_BuildSimpleDescBuf_0
        INC       R3
// 1975   ptr = desc->pAppInClusterList;
??ZDO_BuildSimpleDescBuf_0:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine82 & 0xFFFF
// 1976   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_549:
        MOV       R4,#0x0
        SJMP      ??ZDO_BuildSimpleDescBuf_1
// 1977   {
// 1978     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_2:
        LCALL     ?Subroutine23 & 0xFFFF
// 1979     *buf++ = LO_UINT16( *ptr );
// 1980   }
??CrossCallReturnLabel_25:
        JNC       ??ZDO_BuildSimpleDescBuf_3
        INC       R3
??ZDO_BuildSimpleDescBuf_3:
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??ZDO_BuildSimpleDescBuf_4
        INC       R1
??ZDO_BuildSimpleDescBuf_4:
        INC       R4
??ZDO_BuildSimpleDescBuf_1:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,R4
        CLR       C
        SUBB      A,R5
        JC        ??ZDO_BuildSimpleDescBuf_2
// 1981 
// 1982   *buf++ = desc->AppNumOutClusters;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_445:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R2,DPL
        MOV       R3,DPH
// 1983   ptr = desc->pAppOutClusterList;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine82 & 0xFFFF
// 1984   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_550:
        MOV       R4,#0x0
        SJMP      ??ZDO_BuildSimpleDescBuf_5
// 1985   {
// 1986     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_6:
        LCALL     ?Subroutine23 & 0xFFFF
// 1987     *buf++ = LO_UINT16( *ptr );
// 1988   }
??CrossCallReturnLabel_26:
        JNC       ??ZDO_BuildSimpleDescBuf_7
        INC       R3
??ZDO_BuildSimpleDescBuf_7:
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??ZDO_BuildSimpleDescBuf_8
        INC       R1
??ZDO_BuildSimpleDescBuf_8:
        INC       R4
??ZDO_BuildSimpleDescBuf_5:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,R4
        CLR       C
        SUBB      A,R5
        JC        ??ZDO_BuildSimpleDescBuf_6
// 1989 }
        LJMP      ??Subroutine214_0 & 0xFFFF
          CFI EndBlock cfiBlock505

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond506 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_444
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-2
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker508 Using cfiCommon1
          CFI (cfiPicker508) NoFunction
          CFI (cfiPicker508) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiPicker508
        REQUIRE ??Subroutine232_0
        ; // Fall through to label ??Subroutine232_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine232_0:
          CFI Block cfiCond509 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_442
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-2
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-2
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-2
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker513 Using cfiCommon1
          CFI (cfiPicker513) NoFunction
          CFI (cfiPicker513) Picker
        LCALL     ?Subroutine205 & 0xFFFF
??CrossCallReturnLabel_449:
        RET
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiPicker513

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine205:
          CFI Block cfiCond514 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_444
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_445
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-4
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_442
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-4
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_443
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-4
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_25
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-4
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_26
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-4
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker520 Using cfiCommon1
          CFI (cfiPicker520) NoFunction
          CFI (cfiPicker520) Picker
        INC       DPTR
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiPicker520
        REQUIRE ??Subroutine233_0
        ; // Fall through to label ??Subroutine233_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine233_0:
          CFI Block cfiCond521 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_41
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-6
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_25
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-6
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_26
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-6
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_160
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-4
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDO_ParseUserDescRsp
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_446, ??CrossCallReturnLabel_161
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-4
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_444
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-4
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_445
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-4
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_442
          CFI (cfiCond529) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond529) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond529) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond529) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond529) CFA_SP SP+-4
          CFI (cfiCond529) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_443
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-4
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_25
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-4
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_26
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-4
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker533 Using cfiCommon1
          CFI (cfiPicker533) NoFunction
          CFI (cfiPicker533) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiPicker533

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond534 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-2
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker536 Using cfiCommon1
          CFI (cfiPicker536) NoFunction
          CFI (cfiPicker536) Picker
        INC       DPTR
        LCALL     ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_261:
        INC       DPTR
        RET
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiPicker536

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond537 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-2
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker539 Using cfiCommon1
          CFI (cfiPicker539) NoFunction
          CFI (cfiPicker539) Picker
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine205 & 0xFFFF
??CrossCallReturnLabel_448:
        LCALL     ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_262:
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        RET
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiPicker539

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine155:
          CFI Block cfiCond540 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_41
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-4
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_25
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-4
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_26
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-4
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker544 Using cfiCommon1
          CFI (cfiPicker544) NoFunction
          CFI (cfiPicker544) Picker
        LCALL     ?Subroutine198 & 0xFFFF
??CrossCallReturnLabel_326:
        LCALL     ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_447:
        INC       DPTR
        RET
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiPicker544

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond545 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-2
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-2
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker548 Using cfiCommon1
          CFI (cfiPicker548) NoFunction
          CFI (cfiPicker548) Picker
        LCALL     ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_265:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiPicker548
// 1990 
// 1991 /*********************************************************************
// 1992  * @fn      ZDO_MatchEndDeviceBind()
// 1993  *
// 1994  * @brief
// 1995  *
// 1996  *   Called to match end device binding requests
// 1997  *
// 1998  * @param  bindReq  - binding request information
// 1999  * @param  SecurityUse - Security enable/disable
// 2000  *
// 2001  * @return  none
// 2002  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2003 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
ZDO_MatchEndDeviceBind:
          CFI Block cfiBlock549 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
        CODE
// 2004 {
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDMatchSendState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 10
        MOV       A,#-0xa
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       ?V4,R2
        MOV       ?V5,R3
// 2005   zAddrType_t dstAddr;
// 2006   uint8 sendRsp = FALSE;
        MOV       R6,#0x0
// 2007   uint8 status;
// 2008 
// 2009   // Is this the first request?
// 2010   if ( matchED == NULL )
        MOV       DPTR,#matchED
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_494:
        JNZ       ??ZDO_MatchEndDeviceBind_0
// 2011   {
// 2012     // Create match info structure
// 2013     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x37
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       DPTR,#matchED
        LCALL     ??Subroutine224_0 & 0xFFFF
// 2014     if ( matchED )
??CrossCallReturnLabel_394:
        MOV       DPTR,#matchED
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_495:
        JZ        ??ZDO_MatchEndDeviceBind_1
// 2015     {
// 2016       // Clear the structure
// 2017       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       R1,#0x0
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 2018 
// 2019       // Copy the first request's information
// 2020       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       DPTR,#matchED
        LCALL     ??Subroutine236_0 & 0xFFFF
// 2021       {
// 2022 
// 2023         status = ZDP_NO_ENTRY;
// 2024         sendRsp = TRUE;
// 2025       }
// 2026     }
??CrossCallReturnLabel_462:
        LCALL     `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV       A,R1
        JNZ       ??ZDO_MatchEndDeviceBind_2
// 2027     else
// 2028     {
// 2029       status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        LJMP      ??ZDO_MatchEndDeviceBind_3 & 0xFFFF
// 2030       sendRsp = TRUE;
// 2031     }
// 2032 
// 2033     if ( !sendRsp )
// 2034     {
// 2035       // Set into the correct state
// 2036       matchED->state = ZDMATCH_WAIT_REQ;
??ZDO_MatchEndDeviceBind_2:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_577:
        LCALL     ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_251:
        MOV       A,#0x1
        MOVX      @DPTR,A
// 2037 
// 2038       // Setup the timeout
// 2039       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       DPTR,#AIB_MaxBindingTime
        LCALL     ??Subroutine236_0 & 0xFFFF
// 2040     }
// 2041   }
??CrossCallReturnLabel_463:
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP      ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
// 2042   else
// 2043   {
// 2044       matchED->state = ZDMATCH_SENDING_BINDS;
??ZDO_MatchEndDeviceBind_0:
        MOVX      A,@DPTR
        XCH       A,R0
        LCALL     ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_252:
        MOV       A,#0x2
        MOVX      @DPTR,A
// 2045 
// 2046       // Copy the 2nd request's information
// 2047       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV       R4,?V4
        MOV       R5,?V5
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_176:
        LCALL     `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV       A,R1
        JNZ       ??ZDO_MatchEndDeviceBind_5
// 2048       {
// 2049         status = ZDP_NO_ENTRY;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
// 2050         sendRsp = TRUE;
        MOV       R6,#0x1
// 2051       }
// 2052 
// 2053       // Make a source match for ed1
// 2054       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2055                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2056                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_5:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_578:
        ADD       A,#0x28
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_208:
        MOV       R4,A
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_104:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_579:
        ADD       A,#0x14
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV       R1,A
        LCALL     `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_479:
        LCALL     ?Subroutine25 & 0xFFFF
// 2057       if ( matchED->ed1numMatched )
??CrossCallReturnLabel_509:
        ADD       A,#0x31
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_210:
        JZ        ??ZDO_MatchEndDeviceBind_6
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_68:
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
// 2058       {
// 2059         // Save the match list
// 2060         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R4
        ADD       A,#0x32
        LCALL     ?Subroutine36 & 0xFFFF
// 2061         if ( matchED->ed1Matched )
??CrossCallReturnLabel_562:
        ORL       A,R3
        JZ        ??ZDO_MatchEndDeviceBind_7
// 2062         {
// 2063           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL     ?Subroutine49 & 0xFFFF
// 2064         }
??CrossCallReturnLabel_69:
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_106:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        SJMP      ??ZDO_MatchEndDeviceBind_6
// 2065         else
// 2066         {
// 2067           // Allocation error, stop
// 2068           status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_7:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
// 2069           sendRsp = TRUE;
        MOV       R6,#0x1
// 2070         }
// 2071       }
// 2072 
// 2073       // Make a source match for ed2
// 2074       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2075                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2076                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_6:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 26)
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_580:
        ADD       A,#0x11
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_211:
        MOV       R4,A
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_108:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_581:
        ADD       A,#0x2b
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV       R1,A
        LCALL     `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,R1
        MOV       R0,A
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_582:
        ADD       A,#0x34
        LCALL     ?Subroutine25 & 0xFFFF
// 2077       if ( matchED->ed2numMatched )
??CrossCallReturnLabel_510:
        ADD       A,#0x34
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_213:
        JZ        ??ZDO_MatchEndDeviceBind_8
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_71:
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
// 2078       {
// 2079         // Save the match list
// 2080         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R4
        ADD       A,#0x35
        LCALL     ?Subroutine36 & 0xFFFF
// 2081         if ( matchED->ed2Matched )
??CrossCallReturnLabel_563:
        ORL       A,R3
        JZ        ??ZDO_MatchEndDeviceBind_9
// 2082         {
// 2083           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL     ?Subroutine50 & 0xFFFF
// 2084         }
??CrossCallReturnLabel_72:
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_110:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 2085         else
// 2086         {
// 2087           // Allocation error, stop
// 2088           status = ZDP_NO_ENTRY;
// 2089           sendRsp = TRUE;
// 2090         }
// 2091       }
// 2092 
// 2093       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
??ZDO_MatchEndDeviceBind_8:
        MOV       A,R6
        MOV       C,0xE0 /* A   */.0
        JC        ??ZDO_MatchEndDeviceBind_10
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_480:
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_214:
        JNZ       ??ZDO_MatchEndDeviceBind_11
        MOV       DPTR,#matchED
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_80:
        JZ        ??ZDO_MatchEndDeviceBind_10
// 2094       {
// 2095         // Do the first unbind/bind state
// 2096         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
??ZDO_MatchEndDeviceBind_11:
        ; Setup parameters for call to function ZDMatchSendState
        MOV       R3,#0x0
        MOV       R2,#0x0
        MOV       R1,#0x0
        LCALL     `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2097       }
// 2098       else
// 2099       {
// 2100         status = ZDP_NO_MATCH;
// 2101         sendRsp = TRUE;
// 2102       }
// 2103   }
// 2104 
// 2105   if ( sendRsp )
        LJMP      ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
??ZDO_MatchEndDeviceBind_9:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
??ZDO_MatchEndDeviceBind_10:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7a
??ZDO_MatchEndDeviceBind_3:
        MOVX      @DPTR,A
// 2106   {
// 2107     // send response to this requester
// 2108     dstAddr.addrMode = Addr16Bit;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine154 & 0xFFFF
// 2109     dstAddr.addr.shortAddr = bindReq->srcAddr;
??CrossCallReturnLabel_260:
        LCALL     ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_546:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine222_0 & 0xFFFF
// 2110     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
??CrossCallReturnLabel_378:
        ; Setup parameters for call to function ZDP_SendData
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_439:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 2111 
// 2112     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_118:
        JNZ       ??ZDO_MatchEndDeviceBind_12
// 2113     {
// 2114       // send response to first requester
// 2115       dstAddr.addrMode = Addr16Bit;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine47 & 0xFFFF
// 2116       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2117       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2118     }
??CrossCallReturnLabel_66:
        MOV       DPH,A
        MOV       DPL,R0
        LCALL     ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_547:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_10:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        MOV       DPTR,#matchED
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_464:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 2119 
// 2120     // Process ended - release memory used
// 2121     ZDO_RemoveMatchMemory();
??ZDO_MatchEndDeviceBind_12:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL     `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2122   }
// 2123 }
??ZDO_MatchEndDeviceBind_4:
        MOV       A,#0xa
        LJMP      ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock549

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond550 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-2
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker552 Using cfiCommon1
          CFI (cfiPicker552) NoFunction
          CFI (cfiPicker552) Picker
        LCALL     ?Subroutine195 & 0xFFFF
??CrossCallReturnLabel_321:
        RET
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiPicker552

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine195:
          CFI Block cfiCond553 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_252
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_118
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-4
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDMatchSendState
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_119
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-4
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker557 Using cfiCommon1
          CFI (cfiPicker557) NoFunction
          CFI (cfiPicker557) Picker
        ADD       A,#0x2e
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiPicker557

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond558 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-2
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-2
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-2
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-2
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-2
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-2
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-2
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-2
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDMatchSendState
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-2
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDMatchSendState
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-2
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDMatchSendState
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-2
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_ParseAddrRsp
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-2
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker571 Using cfiCommon1
          CFI (cfiPicker571) NoFunction
          CFI (cfiPicker571) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiPicker571

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond572 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_476
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_CopyMatchInfo
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-2
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        MOV       A,R6
        ADD       A,#0x12
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574
        REQUIRE ??Subroutine234_0
        ; // Fall through to label ??Subroutine234_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine234_0:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_474
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_CopyMatchInfo
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_475
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDO_CopyMatchInfo
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-2
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDO_CopyMatchInfo
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-2
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker579 Using cfiCommon1
          CFI (cfiPicker579) NoFunction
          CFI (cfiPicker579) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiPicker579
        REQUIRE ??Subroutine235_0
        ; // Fall through to label ??Subroutine235_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine235_0:
          CFI Block cfiCond580 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_472
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-2
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_CopyMatchInfo
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-2
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDO_CopyMatchInfo
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_475
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-2
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDO_CopyMatchInfo
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-2
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDO_CopyMatchInfo
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-2
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker586 Using cfiCommon1
          CFI (cfiPicker586) NoFunction
          CFI (cfiPicker586) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiPicker586
        REQUIRE ??Subroutine236_0
        ; // Fall through to label ??Subroutine236_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine236_0:
          CFI Block cfiCond587 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_450
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-2
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-2
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-2
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-2
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-2
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-2
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_459
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-2
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-2
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-2
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-2
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-2
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-2
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDO_RemoveMatchMemory
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond602) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond602) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond602) CFA_SP SP+-7
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDO_RemoveMatchMemory
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond603) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond603) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond603) CFA_SP SP+-7
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDO_RemoveMatchMemory
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_467
          CFI (cfiCond604) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond604) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond604) CFA_SP SP+-7
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDMatchSendState
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-2
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDMatchSendState
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-2
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-2
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_471
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-2
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_472
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-2
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-2
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_CopyMatchInfo
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-2
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_CopyMatchInfo
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_475
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-2
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDO_CopyMatchInfo
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-2
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDO_CopyMatchInfo
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-2
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker615 Using cfiCommon1
          CFI (cfiPicker615) NoFunction
          CFI (cfiPicker615) Picker
        LCALL     ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_516:
        RET
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiPicker615

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond616 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_479
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-2
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker618 Using cfiCommon1
          CFI (cfiPicker618) NoFunction
          CFI (cfiPicker618) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiPicker618
        REQUIRE ??Subroutine237_0
        ; // Fall through to label ??Subroutine237_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine237_0:
          CFI Block cfiCond619 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_478
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_479
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-2
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-2
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        LCALL     ??Subroutine248_0 & 0xFFFF
??CrossCallReturnLabel_601:
        ADD       A,#0x31
        RET
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_501
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_502
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDO_RemoveMatchMemory
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_503
          CFI (cfiCond625) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond625) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond625) CFA_SP SP+-7
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDO_RemoveMatchMemory
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond626) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond626) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond626) CFA_SP SP+-7
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDO_RemoveMatchMemory
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond627) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond627) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond627) CFA_SP SP+-7
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDO_RemoveMatchMemory
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond628) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond628) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond628) CFA_SP SP+-7
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDO_RemoveMatchMemory
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond629) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond629) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond629) CFA_SP SP+-7
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDO_RemoveMatchMemory
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond630) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond630) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond630) CFA_SP SP+-7
          CFI Block cfiPicker631 Using cfiCommon1
          CFI (cfiPicker631) NoFunction
          CFI (cfiPicker631) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiPicker631
        REQUIRE ??Subroutine238_0
        ; // Fall through to label ??Subroutine238_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine238_0:
          CFI Block cfiCond632 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_499
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDO_CopyMatchInfo
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-2
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_501
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_502
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-2
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDO_RemoveMatchMemory
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_503
          CFI (cfiCond636) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond636) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond636) CFA_SP SP+-7
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDO_RemoveMatchMemory
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond637) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond637) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond637) CFA_SP SP+-7
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDO_RemoveMatchMemory
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond638) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond638) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond638) CFA_SP SP+-7
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDO_RemoveMatchMemory
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond639) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond639) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond639) CFA_SP SP+-7
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDO_RemoveMatchMemory
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond640) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond640) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond640) CFA_SP SP+-7
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function ZDO_RemoveMatchMemory
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond641) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond641) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond641) CFA_SP SP+-7
          CFI Block cfiPicker642 Using cfiCommon1
          CFI (cfiPicker642) NoFunction
          CFI (cfiPicker642) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiPicker642
        REQUIRE ??Subroutine239_0
        ; // Fall through to label ??Subroutine239_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine239_0:
          CFI Block cfiCond643 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_481
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_482
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-2
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-2
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_484
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-2
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_485
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-2
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_486
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-2
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_487
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-2
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_488
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond650) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-2
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-2
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-2
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_491
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-2
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_492
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-2
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_493
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-2
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_494
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-2
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_495
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-2
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function ZDO_RemoveMatchMemory
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_496
          CFI (cfiCond658) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond658) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond658) CFA_SP SP+-7
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ZDO_CopyMatchInfo
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDO_CopyMatchInfo
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-2
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_501
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-2
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_502
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-2
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ZDO_RemoveMatchMemory
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_503
          CFI (cfiCond665) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond665) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond665) CFA_SP SP+-7
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDO_RemoveMatchMemory
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond666) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond666) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond666) CFA_SP SP+-7
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDO_RemoveMatchMemory
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond667) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond667) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond667) CFA_SP SP+-7
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_RemoveMatchMemory
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond668) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond668) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond668) CFA_SP SP+-7
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ZDO_RemoveMatchMemory
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond669) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond669) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond669) CFA_SP SP+-7
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ZDO_RemoveMatchMemory
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond670) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond670) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond670) CFA_SP SP+-7
          CFI Block cfiPicker671 Using cfiCommon1
          CFI (cfiPicker671) NoFunction
          CFI (cfiPicker671) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_554:
        MOV       A,R0
        ORL       A,R1
        RET
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiPicker671

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond672 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_509
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_510
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+-2
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker674 Using cfiCommon1
          CFI (cfiPicker674) NoFunction
          CFI (cfiPicker674) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiPicker674
        REQUIRE ??Subroutine240_0
        ; // Fall through to label ??Subroutine240_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine240_0:
          CFI Block cfiCond675 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_511
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_509
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+-2
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_510
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker678 Using cfiCommon1
          CFI (cfiPicker678) NoFunction
          CFI (cfiPicker678) Picker
        LCALL     ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_512:
        XCH       A,R0
        RET
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiPicker678

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond679 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_509
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_510
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-4
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDMatchSendState
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_511
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+-4
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_10
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-4
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDMatchSendState
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_11
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-4
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker684 Using cfiCommon1
          CFI (cfiPicker684) NoFunction
          CFI (cfiPicker684) Picker
        MOV       A,R1
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiPicker684
        REQUIRE ??Subroutine241_0
        ; // Fall through to label ??Subroutine241_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine241_0:
          CFI Block cfiCond685 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDMatchSendState
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_67
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-4
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_509
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+-4
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_510
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+-4
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDMatchSendState
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_511
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-4
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_10
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-4
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function ZDMatchSendState
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_11
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond691) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond691) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+-4
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker692 Using cfiCommon1
          CFI (cfiPicker692) NoFunction
          CFI (cfiPicker692) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiPicker692
// 2124 
// 2125 /*********************************************************************
// 2126  * @fn      ZDO_RemoveMatchMemory()
// 2127  *
// 2128  * @brief   Called to clear the memory used for the end device bind.
// 2129  *
// 2130  * @param  none
// 2131  *
// 2132  * @return  none
// 2133  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2134 static void ZDO_RemoveMatchMemory( void )
ZDO_RemoveMatchMemory:
          CFI Block cfiBlock693 Using cfiCommon0
          CFI Function ZDO_RemoveMatchMemory
        CODE
// 2135 {
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2136   if ( matchED != NULL )
        MOV       DPTR,#matchED
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_496:
        JZ        ??ZDO_RemoveMatchMemory_0
// 2137   {
// 2138     if ( matchED->ed2Matched != NULL )
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x35
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_503:
        JZ        ??ZDO_RemoveMatchMemory_1
// 2139       osal_mem_free( matchED->ed2Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_111:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2140     if ( matchED->ed1Matched != NULL )
??ZDO_RemoveMatchMemory_1:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_583:
        ADD       A,#0x32
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_504:
        JZ        ??ZDO_RemoveMatchMemory_2
// 2141       osal_mem_free( matchED->ed1Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_107:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2142 
// 2143     if ( matchED->ed1.inClusters != NULL )
??ZDO_RemoveMatchMemory_2:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_584:
        ADD       A,#0x12
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_505:
        JZ        ??ZDO_RemoveMatchMemory_3
// 2144       osal_mem_free( matchED->ed1.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_141:
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_465:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2145 
// 2146     if ( matchED->ed1.outClusters != NULL )
??ZDO_RemoveMatchMemory_3:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_585:
        ADD       A,#0x15
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_506:
        JZ        ??ZDO_RemoveMatchMemory_4
// 2147       osal_mem_free( matchED->ed1.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_105:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2148 
// 2149     if ( matchED->ed2.inClusters != NULL )
??ZDO_RemoveMatchMemory_4:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_586:
        ADD       A,#0x29
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_507:
        JZ        ??ZDO_RemoveMatchMemory_5
// 2150       osal_mem_free( matchED->ed2.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_139:
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_466:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2151 
// 2152     if ( matchED->ed2.outClusters != NULL )
??ZDO_RemoveMatchMemory_5:
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_587:
        ADD       A,#0x2c
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_508:
        JZ        ??ZDO_RemoveMatchMemory_6
// 2153       osal_mem_free( matchED->ed2.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_109:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2154 
// 2155     osal_mem_free( matchED );
??ZDO_RemoveMatchMemory_6:
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#matchED
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_467:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2156 
// 2157     matchED = (ZDMatchEndDeviceBind_t *)NULL;
        MOV       DPTR,#matchED
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2158   }
// 2159 }
??ZDO_RemoveMatchMemory_0:
          CFI EndBlock cfiBlock693
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock694 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP       DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP       DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP      ?BRET
          CFI EndBlock cfiBlock694

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond695 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDO_RemoveMatchMemory
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond696) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond696) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond696) CFA_SP SP+-7
          CFI Block cfiPicker697 Using cfiCommon1
          CFI (cfiPicker697) NoFunction
          CFI (cfiPicker697) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_599:
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiPicker697

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond698 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_RemoveMatchMemory
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond699) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond699) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond699) CFA_SP SP+-7
          CFI Block cfiPicker700 Using cfiCommon1
          CFI (cfiPicker700) NoFunction
          CFI (cfiPicker700) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_598:
        ADD       A,#0x29
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiPicker700

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond701 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDO_RemoveMatchMemory
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond702) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond702) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond702) CFA_SP SP+-7
          CFI Block cfiPicker703 Using cfiCommon1
          CFI (cfiPicker703) NoFunction
          CFI (cfiPicker703) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_596:
        ADD       A,#0x35
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_521:
        RET
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiPicker703

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond704 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDO_RemoveMatchMemory
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond705) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond705) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond705) CFA_SP SP+-7
          CFI Block cfiPicker706 Using cfiCommon1
          CFI (cfiPicker706) NoFunction
          CFI (cfiPicker706) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_595:
        ADD       A,#0x2c
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_520:
        RET
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiPicker706

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond707 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_RemoveMatchMemory
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond708) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond708) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond708) CFA_SP SP+-7
          CFI Block cfiPicker709 Using cfiCommon1
          CFI (cfiPicker709) NoFunction
          CFI (cfiPicker709) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_594:
        ADD       A,#0x32
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_519:
        RET
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiPicker709

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine169:
          CFI Block cfiCond710 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function ZDO_RemoveMatchMemory
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_111
          CFI (cfiCond711) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond711) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond711) CFA_SP SP+-9
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_108
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-4
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function ZDO_RemoveMatchMemory
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_109
          CFI (cfiCond713) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond713) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond713) CFA_SP SP+-9
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_106
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-4
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ZDO_RemoveMatchMemory
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_107
          CFI (cfiCond715) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond715) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond715) CFA_SP SP+-9
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_104
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-4
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function ZDO_RemoveMatchMemory
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_105
          CFI (cfiCond717) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond717) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond717) CFA_SP SP+-9
          CFI Block cfiPicker718 Using cfiCommon1
          CFI (cfiPicker718) NoFunction
          CFI (cfiPicker718) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiPicker718
        REQUIRE ??Subroutine242_0
        ; // Fall through to label ??Subroutine242_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine242_0:
          CFI Block cfiCond719 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_172
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+-4
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_110
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-4
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function ZDO_RemoveMatchMemory
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_111
          CFI (cfiCond722) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond722) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond722) CFA_SP SP+-9
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_108
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-4
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ZDO_RemoveMatchMemory
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_109
          CFI (cfiCond724) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond724) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond724) CFA_SP SP+-9
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_106
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-4
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function ZDO_RemoveMatchMemory
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_107
          CFI (cfiCond726) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond726) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond726) CFA_SP SP+-9
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_104
          CFI (cfiCond727) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond727) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond727) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond727) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond727) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond727) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond727) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond727) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond727) CFA_SP SP+-4
          CFI (cfiCond727) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_RemoveMatchMemory
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_105
          CFI (cfiCond728) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond728) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond728) CFA_SP SP+-9
          CFI Block cfiPicker729 Using cfiCommon1
          CFI (cfiPicker729) NoFunction
          CFI (cfiPicker729) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiPicker729
        REQUIRE ??Subroutine243_0
        ; // Fall through to label ??Subroutine243_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine243_0:
          CFI Block cfiCond730 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_97
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-4
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function ZDO_CopyMatchInfo
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_476
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+-4
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDO_CopyMatchInfo
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_477
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-4
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDO_CopyMatchInfo
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_474
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-4
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function ZDO_CopyMatchInfo
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_475
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-4
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_472
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-4
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_473
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-4
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_450
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-4
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_451
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-4
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_452
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-4
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_453
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-4
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_454
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-4
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_455
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-4
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_456
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-4
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_457
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-4
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_458
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-4
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_459
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-4
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_460
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-4
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_461
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-4
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_462
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-4
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_463
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+-4
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_464
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-4
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDO_RemoveMatchMemory
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_465
          CFI (cfiCond753) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond753) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond753) CFA_SP SP+-9
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function ZDO_RemoveMatchMemory
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_466
          CFI (cfiCond754) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond754) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond754) CFA_SP SP+-9
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDO_RemoveMatchMemory
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_467
          CFI (cfiCond755) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond755) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond755) CFA_SP SP+-9
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDMatchSendState
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_468
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-4
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDMatchSendState
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_469
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-4
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_470
          CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond758) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond758) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond758) CFA_SP SP+-4
          CFI (cfiCond758) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_471
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-4
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_173
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-4
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_172
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-4
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_110
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-4
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDO_RemoveMatchMemory
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_111
          CFI (cfiCond763) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond763) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond763) CFA_SP SP+-9
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_108
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+-4
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_RemoveMatchMemory
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_109
          CFI (cfiCond765) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond765) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond765) CFA_SP SP+-9
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_106
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-4
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_RemoveMatchMemory
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_107
          CFI (cfiCond767) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond767) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond767) CFA_SP SP+-9
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_104
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-4
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_RemoveMatchMemory
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_105
          CFI (cfiCond769) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond769) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond769) CFA_SP SP+-9
          CFI Block cfiPicker770 Using cfiCommon1
          CFI (cfiPicker770) NoFunction
          CFI (cfiPicker770) Picker
        LCALL     ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_619:
        MOV       R3,A
        RET
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiPicker770

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond771 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function ZDO_RemoveMatchMemory
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond772) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond772) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond772) CFA_SP SP+-7
          CFI Block cfiPicker773 Using cfiCommon1
          CFI (cfiPicker773) NoFunction
          CFI (cfiPicker773) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_593:
        ADD       A,#0x15
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_518:
        RET
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiPicker773
// 2160 
// 2161 /*********************************************************************
// 2162  * @fn      ZDO_CopyMatchInfo()
// 2163  *
// 2164  * @brief   Called to copy memory used for the end device bind.
// 2165  *
// 2166  * @param  srcReq - source information
// 2167  * @param  dstReq - destination location
// 2168  *
// 2169  * @return  TRUE if copy was successful.
// 2170  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2171 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
ZDO_CopyMatchInfo:
          CFI Block cfiBlock774 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
        CODE
// 2172 {
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V4,R4
        MOV       ?V5,R5
// 2173   uint8 allOK = TRUE;
        MOV       ?V3,#0x1
// 2174 
// 2175   // Copy bind information into the match info structure
// 2176   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R4,#0x17
        MOV       R5,#0x0
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 2177 
// 2178   // Initialize the destination cluster pointers
// 2179   destReq->inClusters = NULL;
        MOV       A,R6
        ADD       A,#0x12
        LCALL     ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_524:
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2180   destReq->outClusters = NULL;
        MOV       A,R6
        ADD       A,#0x15
        LCALL     ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_525:
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2181 
// 2182   // Copy input cluster IDs
// 2183   if ( srcReq->numInClusters )
        MOV       A,?V4
        ADD       A,#0x11
        LCALL     ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_310:
        JZ        ??ZDO_CopyMatchInfo_0
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ??Subroutine270_0 & 0xFFFF
// 2184   {
// 2185     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
??CrossCallReturnLabel_671:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        LCALL     ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_241:
        LCALL     ??Subroutine246_0 & 0xFFFF
// 2186     if ( destReq->inClusters )
??CrossCallReturnLabel_531:
        JZ        ??ZDO_CopyMatchInfo_1
// 2187     {
// 2188       // Copy the clusters
// 2189       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2190                       (srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V4
        ADD       A,#0x12
        LCALL     ?Subroutine105 & 0xFFFF
// 2191     }
??CrossCallReturnLabel_170:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,?V4
        ADD       A,#0x11
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_529:
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_476:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
        SJMP      ??ZDO_CopyMatchInfo_0
// 2192     else
// 2193       allOK = FALSE;
??ZDO_CopyMatchInfo_1:
        MOV       ?V3,#0x0
// 2194   }
// 2195 
// 2196   // Copy output cluster IDs
// 2197   if ( srcReq->numOutClusters )
??ZDO_CopyMatchInfo_0:
        MOV       A,?V4
        ADD       A,#0x14
        LCALL     ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_311:
        JZ        ??ZDO_CopyMatchInfo_2
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ??Subroutine270_0 & 0xFFFF
// 2198   {
// 2199     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
??CrossCallReturnLabel_672:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        LCALL     ?Subroutine192 & 0xFFFF
??CrossCallReturnLabel_313:
        LCALL     ??Subroutine246_0 & 0xFFFF
// 2200     if ( destReq->outClusters )
??CrossCallReturnLabel_532:
        JZ        ??ZDO_CopyMatchInfo_3
// 2201     {
// 2202       // Copy the clusters
// 2203       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2204                       (srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V4
        ADD       A,#0x15
        LCALL     ?Subroutine105 & 0xFFFF
// 2205     }
??CrossCallReturnLabel_171:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,?V4
        ADD       A,#0x14
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_530:
        MOV       A,R6
        ADD       A,#0x15
        LCALL     ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_474:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 2206     else
// 2207       allOK = FALSE;
// 2208   }
// 2209 
// 2210   if ( !allOK )
??ZDO_CopyMatchInfo_2:
        MOV       A,?V3
        MOV       C,0xE0 /* A   */.0
        JC        ??ZDO_CopyMatchInfo_4
// 2211   {
// 2212     if ( destReq->inClusters != NULL )
??ZDO_CopyMatchInfo_5:
        LCALL     ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_242:
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_499:
        JZ        ??ZDO_CopyMatchInfo_6
// 2213       osal_mem_free( destReq->inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_477:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2214     if ( destReq->outClusters != NULL )
??ZDO_CopyMatchInfo_6:
        LCALL     ?Subroutine192 & 0xFFFF
??CrossCallReturnLabel_314:
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_500:
        JZ        ??ZDO_CopyMatchInfo_4
// 2215       osal_mem_free( destReq->outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R6
        ADD       A,#0x15
        LCALL     ??Subroutine234_0 & 0xFFFF
// 2216   }
??CrossCallReturnLabel_475:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2217 
// 2218   return ( allOK );
??ZDO_CopyMatchInfo_4:
        MOV       R1,?V3
        LJMP      ??Subroutine274_0 & 0xFFFF
??ZDO_CopyMatchInfo_3:
        MOV       ?V3,#0x0
        SJMP      ??ZDO_CopyMatchInfo_5
// 2219 }
          CFI EndBlock cfiBlock774

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine192:
          CFI Block cfiCond775 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_9
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-4
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDO_CopyMatchInfo
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-2
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_CopyMatchInfo
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-2
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker779 Using cfiCommon1
          CFI (cfiPicker779) NoFunction
          CFI (cfiPicker779) Picker
        MOV       A,R6
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        RET
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiPicker779

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine190:
          CFI Block cfiCond780 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_309
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_CopyMatchInfo
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-2
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDO_CopyMatchInfo
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-2
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDO_CopyMatchInfo
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_529
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-4
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_CopyMatchInfo
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_530
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-4
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker785 Using cfiCommon1
          CFI (cfiPicker785) NoFunction
          CFI (cfiPicker785) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V5
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiPicker785

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond786 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_240
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_CopyMatchInfo
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-2
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_CopyMatchInfo
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-2
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker789 Using cfiCommon1
          CFI (cfiPicker789) NoFunction
          CFI (cfiPicker789) Picker
        MOV       A,R6
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        RET
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiPicker789

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond790 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_526
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_527
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-2
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker792 Using cfiCommon1
          CFI (cfiPicker792) NoFunction
          CFI (cfiPicker792) Picker
        MOV       A,R6
        ADD       A,#0x14
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiPicker792
        REQUIRE ??Subroutine244_0
        ; // Fall through to label ??Subroutine244_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine244_0:
          CFI Block cfiCond793 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_522
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_523
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-2
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ZDO_CopyMatchInfo
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_524
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+-2
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDO_CopyMatchInfo
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-2
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_526
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-2
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_527
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-2
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker799 Using cfiCommon1
          CFI (cfiPicker799) NoFunction
          CFI (cfiPicker799) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        CLR       A
        RET
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiPicker799

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond800 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_529
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDO_CopyMatchInfo
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-2
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker802 Using cfiCommon1
          CFI (cfiPicker802) NoFunction
          CFI (cfiPicker802) Picker
        LCALL     ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_312:
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiPicker802
        REQUIRE ??Subroutine245_0
        ; // Fall through to label ??Subroutine245_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine245_0:
          CFI Block cfiCond803 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_528
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ZDO_CopyMatchInfo
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-2
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDO_CopyMatchInfo
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-2
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker806 Using cfiCommon1
          CFI (cfiPicker806) NoFunction
          CFI (cfiPicker806) Picker
        ADD       A,0xE0 /* A   */
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        RET
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiPicker806

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond807 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function ZDO_CopyMatchInfo
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-2
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker809 Using cfiCommon1
          CFI (cfiPicker809) NoFunction
          CFI (cfiPicker809) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V5
        LCALL     ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_342:
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiPicker809

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond810 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_535
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond811 Using cfiCommon0
          CFI (cfiCond811) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond811) Conditional ??CrossCallReturnLabel_536
          CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond811) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond811) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond811) CFA_SP SP+-2
          CFI (cfiCond811) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker812 Using cfiCommon1
          CFI (cfiPicker812) NoFunction
          CFI (cfiPicker812) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
          CFI EndBlock cfiCond810
          CFI EndBlock cfiCond811
          CFI EndBlock cfiPicker812
        REQUIRE ??Subroutine246_0
        ; // Fall through to label ??Subroutine246_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine246_0:
          CFI Block cfiCond813 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_531
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function ZDO_CopyMatchInfo
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+-2
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_534
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+-2
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-2
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_536
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+-2
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker818 Using cfiCommon1
          CFI (cfiPicker818) NoFunction
          CFI (cfiPicker818) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiPicker818
        REQUIRE ??Subroutine247_0
        ; // Fall through to label ??Subroutine247_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine247_0:
          CFI Block cfiCond819 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_533
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function ZDO_CopyMatchInfo
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_531
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_SP SP+-2
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function ZDO_CopyMatchInfo
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-2
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_534
          CFI (cfiCond822) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond822) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond822) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond822) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond822) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond822) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond822) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond822) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond822) CFA_SP SP+-2
          CFI (cfiCond822) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-2
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_536
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-2
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker825 Using cfiCommon1
          CFI (cfiPicker825) NoFunction
          CFI (cfiPicker825) Picker
        LCALL     ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_660:
        MOV       A,R0
        ORL       A,R1
        RET
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiPicker825
// 2220 
// 2221 /*********************************************************************
// 2222  * @fn      ZDMatchSendState()
// 2223  *
// 2224  * @brief   State machine for the End device match message algorithm.
// 2225  *
// 2226  * @param  reason - state of algoritm
// 2227  * @param  status - initial message status
// 2228  * @param  TransSeq - next transaction sequence number
// 2229  *
// 2230  * @return  FALSE if error and we are not currently matching, TRUE
// 2231  *          if success.
// 2232  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2233 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
ZDMatchSendState:
          CFI Block cfiBlock826 Using cfiCommon0
          CFI Function ZDMatchSendState
        CODE
// 2234 {
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 21
        MOV       A,#-0x15
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        MOVX      @DPTR,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       ?V2,R1
// 2235   uint8 *dstIEEEAddr = NULL;
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 2236   uint8 dstEP = 0xFF;
        MOV       ?V3,#-0x1
// 2237   zAddrType_t dstAddr;
// 2238   zAddrType_t destinationAddr;
// 2239   uint16 msgType;
// 2240   uint16 clusterID = 0xFFFF;
        MOV       R6,#-0x1
        MOV       R7,#-0x1
// 2241   ZDEndDeviceBind_t *ed = NULL;
        MOV       ?V6,#0x0
        MOV       ?V7,#0x0
// 2242   uint8 rspStatus = ZDP_SUCCESS;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        LCALL     ?Subroutine47 & 0xFFFF
// 2243 
// 2244   if ( matchED == NULL )
??CrossCallReturnLabel_67:
        MOV       R1,A
        MOV       A,R0
        ORL       A,R1
        JZ        ??ZDMatchSendState_0
// 2245     return ( FALSE );
// 2246 
// 2247   // Check sequence number
// 2248   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
        MOV       A,#0x3
        XRL       A,?V2
        JZ        ??ZDMatchSendState_1
        MOV       A,#0x2
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_2
// 2249   {
// 2250     if ( TransSeq != matchED->transSeq )
??ZDMatchSendState_1:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPTR,#matchED + 1
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x30
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_215:
        XRL       A,R1
        JZ        ??ZDMatchSendState_2
// 2251       return( FALSE ); // ignore the message
??ZDMatchSendState_0:
        MOV       R1,#0x0
        LJMP      ??ZDMatchSendState_3 & 0xFFFF
// 2252   }
// 2253 
// 2254   // turn off timer
// 2255   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
??ZDMatchSendState_2:
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       R2,#0x0
        MOV       R3,#0x0
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
// 2256 
// 2257   if ( reason == ZDMATCH_REASON_TIMEOUT )
        MOV       A,#0x1
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_4
// 2258   {
// 2259     rspStatus = ZDP_TIMEOUT;    // The process will stop
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7b
        SJMP      ??ZDMatchSendState_5
// 2260   }
// 2261 
// 2262   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
??ZDMatchSendState_4:
        MOV       A,?V2
        JZ        ??ZDMatchSendState_6
        MOV       A,#0x3
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_7
// 2263   {
// 2264     matchED->sending = ZDMATCH_SENDING_UNBIND;
??ZDMatchSendState_6:
        MOV       DPTR,#matchED
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_126:
        MOVX      @DPTR,A
// 2265 
// 2266     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
        MOV       A,#0x3
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_8
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JZ        ??ZDMatchSendState_9
// 2267     {
// 2268       rspStatus = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        SJMP      ??ZDMatchSendState_5
// 2269     }
// 2270   }
// 2271   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
??ZDMatchSendState_7:
        MOV       A,#0x2
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_9
// 2272   {
// 2273     if ( status == ZDP_SUCCESS )
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#matchED
        JNZ       ??ZDMatchSendState_10
// 2274     {
// 2275       matchED->sending = ZDMATCH_SENDING_UNBIND;
        LCALL     ?Subroutine77 & 0xFFFF
// 2276     }
??CrossCallReturnLabel_127:
        SJMP      ??ZDMatchSendState_5
// 2277     else
// 2278     {
// 2279       matchED->sending = ZDMATCH_SENDING_BIND;
??ZDMatchSendState_10:
        LCALL     ??Subroutine257_0 & 0xFFFF
// 2280     }
// 2281   }
??CrossCallReturnLabel_574:
        LCALL     ?Subroutine207 & 0xFFFF
??CrossCallReturnLabel_338:
        MOV       A,#0x2
??ZDMatchSendState_5:
        MOVX      @DPTR,A
        SJMP      ??ZDMatchSendState_9
// 2282 
// 2283   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
??ZDMatchSendState_8:
        MOV       A,?V2
        JZ        ??ZDMatchSendState_11
??ZDMatchSendState_9:
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_120:
        JNZ       ??ZDMatchSendState_11
// 2284   {
// 2285     // Move to the next cluster ID
// 2286     if ( matchED->ed1numMatched )
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_116:
        JZ        ??ZDMatchSendState_12
// 2287       matchED->ed1numMatched--;
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_478:
        SJMP      ??ZDMatchSendState_13
// 2288     else if ( matchED->ed2numMatched )
??ZDMatchSendState_12:
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_81:
        JZ        ??ZDMatchSendState_11
// 2289       matchED->ed2numMatched--;
        LCALL     ?Subroutine95 & 0xFFFF
// 2290   }
??CrossCallReturnLabel_588:
        ADD       A,#0x34
??ZDMatchSendState_13:
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_216:
        ADD       A,R6
        MOVX      @DPTR,A
// 2291 
// 2292   // What message do we send now
// 2293   if ( matchED->ed1numMatched )
??ZDMatchSendState_11:
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_117:
        JZ        ??ZDMatchSendState_14
// 2294   {
// 2295     ed = &(matchED->ed1);
        MOVX      A,@DPTR
        MOV       ?V6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V7,A
// 2296     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
        LCALL     ?Subroutine49 & 0xFFFF
// 2297     dstIEEEAddr = matchED->ed2.ieeeAddr;
// 2298     dstEP = matchED->ed2.endpoint;
// 2299   }
??CrossCallReturnLabel_70:
        LCALL     ?Subroutine209 & 0xFFFF
??CrossCallReturnLabel_617:
        XCH       A,R2
        ADD       A,#0x32
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_78:
        ADD       A,#0x1d
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_142:
        ADD       A,#0x25
        SJMP      ??ZDMatchSendState_15
// 2300   else if ( matchED->ed2numMatched )
??ZDMatchSendState_14:
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_82:
        JZ        ??ZDMatchSendState_16
// 2301   {
// 2302     ed = &(matchED->ed2);
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       ?V6,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       ?V7,A
// 2303     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
        LCALL     ?Subroutine50 & 0xFFFF
// 2304     dstIEEEAddr = matchED->ed1.ieeeAddr;
// 2305     dstEP = matchED->ed1.endpoint;
// 2306   }
??CrossCallReturnLabel_73:
        LCALL     ?Subroutine209 & 0xFFFF
??CrossCallReturnLabel_618:
        XCH       A,R2
        ADD       A,#0x35
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_79:
        ADD       A,#0x6
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_143:
        ADD       A,#0xe
??ZDMatchSendState_15:
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV       ?V3,A
// 2307 
// 2308   dstAddr.addrMode = Addr16Bit;
??ZDMatchSendState_16:
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine27 & 0xFFFF
// 2309 
// 2310   // Send the next message
// 2311   if ( rspStatus == ZDP_SUCCESS && ed )
??CrossCallReturnLabel_33:
        JZ        $+5
        LJMP      ??ZDMatchSendState_17 & 0xFFFF
        MOV       A,?V6
        ORL       A,?V7
        JNZ       $+5
        LJMP      ??ZDMatchSendState_17 & 0xFFFF
// 2312   {
// 2313     // Send unbind/bind message to source
// 2314     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_121:
        JNZ       ??ZDMatchSendState_18
// 2315       msgType = Unbind_req;
        MOV       ?V0,#0x22
        SJMP      ??ZDMatchSendState_19
// 2316     else
// 2317       msgType = Bind_req;
??ZDMatchSendState_18:
        MOV       ?V0,#0x21
??ZDMatchSendState_19:
        MOV       ?V1,#0x0
// 2318 
// 2319     dstAddr.addr.shortAddr = ed->srcAddr;
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_548:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine222_0 & 0xFFFF
// 2320 
// 2321     // Save off the transaction sequence number
// 2322     matchED->transSeq = ZDP_TransID;
??CrossCallReturnLabel_379:
        MOV       DPTR,#ZDP_TransID
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_589:
        ADD       A,#0x30
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2323 
// 2324     destinationAddr.addrMode = Addr64Bit;
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x3
        MOVX      @DPTR,A
// 2325     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2326 
// 2327     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2328         &destinationAddr, dstEP, ed->SecurityUse );
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV       DPL,?V6
        MOV       DPH,?V7
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV       ?V4,R6
        MOV       ?V5,R7
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV       A,?V6
        ADD       A,#0x6
        MOV       ?V4,A
        CLR       A
        ADDC      A,?V7
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        MOV       A,?V6
        LCALL     ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_610:
        ADDC      A,?V7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??ZDP_BindUnbindReq::?relay`; Banked call to: ZDP_BindUnbindReq
        MOV       A,#0x8
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2329 
// 2330     // Set timeout for response
// 2331     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       DPTR,#AIB_MaxBindingTime
        LCALL     ??Subroutine236_0 & 0xFFFF
// 2332   }
??CrossCallReturnLabel_468:
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP      ??ZDMatchSendState_20 & 0xFFFF
// 2333   else
// 2334   {
// 2335     // Send the response messages to requesting devices
// 2336     // send response to first requester
// 2337     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
??ZDMatchSendState_17:
        MOV       DPTR,#matchED
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 2338     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
??CrossCallReturnLabel_11:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       R1,#0x1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP102_8
        MOV       DPTR,#matchED
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_469:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2339 
// 2340     // send response to second requester
// 2341     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_119:
        JNZ       ??ZDMatchSendState_21
// 2342     {
// 2343       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
        LCALL     ?Subroutine95 & 0xFFFF
// 2344       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2345     }
??CrossCallReturnLabel_590:
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_543:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ??Subroutine240_0 & 0xFFFF
??CrossCallReturnLabel_511:
        ADD       A,#0x18
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_441:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       R1,#0x1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP102_8
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_177:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2346 
// 2347     // Process ended - release memory used
// 2348     ZDO_RemoveMatchMemory();
??ZDMatchSendState_21:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL     `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2349   }
// 2350 
// 2351   return ( TRUE );
??ZDMatchSendState_20:
        MOV       R1,#0x1
??ZDMatchSendState_3:
        MOV       A,#0x15
        LJMP      ?Subroutine7 & 0xFFFF
// 2352 }
          CFI EndBlock cfiBlock826

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond827 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ZDMatchSendState
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-2
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker829 Using cfiCommon1
          CFI (cfiPicker829) NoFunction
          CFI (cfiPicker829) Picker
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        RET
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiPicker829

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond830 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_142
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function ZDMatchSendState
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+-2
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker832 Using cfiCommon1
          CFI (cfiPicker832) NoFunction
          CFI (cfiPicker832) Picker
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       ?V5,A
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_600:
        RET
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiPicker832

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine174:
          CFI Block cfiCond833 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function ZDO_RemoveMatchMemory
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_141
          CFI (cfiCond834) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond834) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond834) CFA_SP SP+-9
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_138
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-4
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function ZDO_RemoveMatchMemory
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_139
          CFI (cfiCond836) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond836) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond836) CFA_SP SP+-9
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_110
          CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond837) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond837) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond837) CFA_SP SP+-4
          CFI (cfiCond837) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDO_RemoveMatchMemory
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_111
          CFI (cfiCond838) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond838) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond838) CFA_SP SP+-9
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_108
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-4
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond840 Using cfiCommon0
          CFI (cfiCond840) Function ZDO_RemoveMatchMemory
          CFI (cfiCond840) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_109
          CFI (cfiCond840) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond840) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond840) CFA_SP SP+-9
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_106
          CFI (cfiCond841) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond841) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond841) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond841) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond841) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond841) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond841) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond841) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond841) CFA_SP SP+-4
          CFI (cfiCond841) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDO_RemoveMatchMemory
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_107
          CFI (cfiCond842) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond842) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond842) CFA_SP SP+-9
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_104
          CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond843) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond843) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond843) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond843) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond843) CFA_SP SP+-4
          CFI (cfiCond843) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ZDO_RemoveMatchMemory
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_105
          CFI (cfiCond844) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond844) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond844) CFA_SP SP+-9
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDMatchSendState
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_142
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-4
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond846 Using cfiCommon0
          CFI (cfiCond846) Function ZDMatchSendState
          CFI (cfiCond846) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_143
          CFI (cfiCond846) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond846) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond846) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond846) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond846) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond846) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond846) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond846) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond846) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond846) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond846) CFA_SP SP+-4
          CFI (cfiCond846) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_118
          CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond847) CFA_SP SP+-4
          CFI (cfiCond847) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDMatchSendState
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_119
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-4
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker849 Using cfiCommon1
          CFI (cfiPicker849) NoFunction
          CFI (cfiPicker849) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiPicker849
        REQUIRE ??Subroutine248_0
        ; // Fall through to label ??Subroutine248_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine248_0:
          CFI Block cfiCond850 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_103
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+-4
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_479
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-4
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_480
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-4
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ZDMatchSendState
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_478
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-4
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_577
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-4
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_578
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-4
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_579
          CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond857) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond857) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond857) CFA_SP SP+-4
          CFI (cfiCond857) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_580
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+-4
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_581
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+-4
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_582
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+-4
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function ZDO_RemoveMatchMemory
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_583
          CFI (cfiCond861) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond861) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond861) CFA_SP SP+-9
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDO_RemoveMatchMemory
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_584
          CFI (cfiCond862) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond862) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond862) CFA_SP SP+-9
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDO_RemoveMatchMemory
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_585
          CFI (cfiCond863) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond863) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond863) CFA_SP SP+-9
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function ZDO_RemoveMatchMemory
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_586
          CFI (cfiCond864) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond864) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond864) CFA_SP SP+-9
          CFI Block cfiCond865 Using cfiCommon0
          CFI (cfiCond865) Function ZDO_RemoveMatchMemory
          CFI (cfiCond865) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_587
          CFI (cfiCond865) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond865) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond865) CFA_SP SP+-9
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function ZDMatchSendState
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_588
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+-4
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function ZDMatchSendState
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_589
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-5
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function ZDMatchSendState
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_590
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+-4
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_570
          CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond869) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond869) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond869) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond869) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond869) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond869) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond869) CFA_SP SP+-4
          CFI (cfiCond869) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_571
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+-4
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_572
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+-4
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond872 Using cfiCommon0
          CFI (cfiCond872) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond872) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_573
          CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond872) CFA_SP SP+-4
          CFI (cfiCond872) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond873 Using cfiCommon0
          CFI (cfiCond873) Function ZDMatchSendState
          CFI (cfiCond873) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_574
          CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond873) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond873) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond873) CFA_SP SP+-4
          CFI (cfiCond873) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ZDO_ParseAddrRsp
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_575
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+-4
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_576
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-4
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_136
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+-4
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_137
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_SP SP+-5
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_140
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+-4
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDO_RemoveMatchMemory
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_141
          CFI (cfiCond879) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond879) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond879) CFA_SP SP+-9
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_138
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+-4
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDO_RemoveMatchMemory
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_139
          CFI (cfiCond881) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond881) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond881) CFA_SP SP+-9
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_110
          CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond882) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond882) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond882) CFA_SP SP+-4
          CFI (cfiCond882) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function ZDO_RemoveMatchMemory
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_111
          CFI (cfiCond883) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond883) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond883) CFA_SP SP+-9
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_108
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+-4
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function ZDO_RemoveMatchMemory
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_109
          CFI (cfiCond885) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond885) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond885) CFA_SP SP+-9
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_106
          CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond886) CFA_SP SP+-4
          CFI (cfiCond886) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond887 Using cfiCommon0
          CFI (cfiCond887) Function ZDO_RemoveMatchMemory
          CFI (cfiCond887) Conditional ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_107
          CFI (cfiCond887) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond887) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond887) CFA_SP SP+-9
          CFI Block cfiCond888 Using cfiCommon0
          CFI (cfiCond888) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond888) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_104
          CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond888) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond888) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond888) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond888) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond888) CFA_SP SP+-4
          CFI (cfiCond888) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function ZDO_RemoveMatchMemory
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_105
          CFI (cfiCond889) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond889) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond889) CFA_SP SP+-9
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function ZDMatchSendState
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_142
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_SP SP+-4
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond891 Using cfiCommon0
          CFI (cfiCond891) Function ZDMatchSendState
          CFI (cfiCond891) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_143
          CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond891) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond891) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond891) CFA_SP SP+-4
          CFI (cfiCond891) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_118
          CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond892) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond892) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond892) CFA_SP SP+-4
          CFI (cfiCond892) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function ZDMatchSendState
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_119
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-4
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker894 Using cfiCommon1
          CFI (cfiPicker894) NoFunction
          CFI (cfiPicker894) Picker
        LCALL     ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_608:
        RET
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiCond872
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiCond887
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiPicker894

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine201:
          CFI Block cfiCond895 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_603, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_603, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_95
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+-6
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_603, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_124
          CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond897) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond897) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond897) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond897) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond897) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond897) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond897) CFA_SP SP+-6
          CFI (cfiCond897) CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond898 Using cfiCommon0
          CFI (cfiCond898) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond898) Conditional ??CrossCallReturnLabel_603, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_125
          CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond898) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond898) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond898) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond898) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond898) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond898) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond898) CFA_SP SP+-6
          CFI (cfiCond898) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_128
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-6
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_129
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+-6
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_83
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+-6
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_84
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+-6
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_140
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+-6
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function ZDO_RemoveMatchMemory
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_599, ??CrossCallReturnLabel_141
          CFI (cfiCond904) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond904) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond904) CFA_SP SP+-11
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_138
          CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond905) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond905) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond905) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond905) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond905) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond905) CFA_SP SP+-6
          CFI (cfiCond905) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function ZDO_RemoveMatchMemory
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_139
          CFI (cfiCond906) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond906) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond906) CFA_SP SP+-11
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_110
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+-6
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function ZDO_RemoveMatchMemory
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_111
          CFI (cfiCond908) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond908) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond908) CFA_SP SP+-11
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_108
          CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond909) CFA_SP SP+-6
          CFI (cfiCond909) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function ZDO_RemoveMatchMemory
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_109
          CFI (cfiCond910) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond910) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond910) CFA_SP SP+-11
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_106
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+-6
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function ZDO_RemoveMatchMemory
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_594, ??CrossCallReturnLabel_107
          CFI (cfiCond912) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond912) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond912) CFA_SP SP+-11
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_104
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+-6
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function ZDO_RemoveMatchMemory
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_593, ??CrossCallReturnLabel_105
          CFI (cfiCond914) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond914) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond914) CFA_SP SP+-11
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDMatchSendState
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_142
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+-6
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDMatchSendState
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_143
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+-6
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_118
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+-6
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function ZDMatchSendState
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_119
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-6
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_102
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+-6
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_103
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-6
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_479
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-6
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_480
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-6
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function ZDMatchSendState
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_478
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+-6
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_577
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond924) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+-6
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_578
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-6
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_579
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-6
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_580
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-6
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_581
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-6
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_582
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-6
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDO_RemoveMatchMemory
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_583
          CFI (cfiCond930) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond930) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond930) CFA_SP SP+-11
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function ZDO_RemoveMatchMemory
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_584
          CFI (cfiCond931) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond931) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond931) CFA_SP SP+-11
          CFI Block cfiCond932 Using cfiCommon0
          CFI (cfiCond932) Function ZDO_RemoveMatchMemory
          CFI (cfiCond932) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_585
          CFI (cfiCond932) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond932) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond932) CFA_SP SP+-11
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_RemoveMatchMemory
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_586
          CFI (cfiCond933) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond933) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond933) CFA_SP SP+-11
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_RemoveMatchMemory
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_587
          CFI (cfiCond934) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond934) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond934) CFA_SP SP+-11
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDMatchSendState
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_588
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-6
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function ZDMatchSendState
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_589
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-7
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDMatchSendState
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_590
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-6
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_570
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-6
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_571
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond939) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond939) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond939) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+-6
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_572
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-6
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_573
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-6
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDMatchSendState
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_574
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-6
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function ZDO_ParseAddrRsp
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_575
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-6
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_602, ??CrossCallReturnLabel_576
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-6
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_136
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-6
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_608, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_137
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-7
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDMatchSendState
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_126
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond947) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond947) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-6
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDMatchSendState
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_127
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-6
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDMatchSendState
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_120
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-6
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDMatchSendState
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_121
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-6
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_80
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-6
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDMatchSendState
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_81
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-6
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDMatchSendState
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_82
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-6
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_71
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-6
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_72
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-6
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function ZDMatchSendState
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_73
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond956) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond956) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond956) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+-6
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function ZDMatchSendState
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_604, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_116
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+-6
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function ZDMatchSendState
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_604, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_117
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond958) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond958) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond958) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond958) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+-6
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_604, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_68
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond959) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+-6
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_604, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_69
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+-6
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function ZDMatchSendState
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_604, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_70
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+-6
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker962 Using cfiCommon1
          CFI (cfiPicker962) NoFunction
          CFI (cfiPicker962) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        RET
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiPicker962

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond963 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_549
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+-2
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker965 Using cfiCommon1
          CFI (cfiPicker965) NoFunction
          CFI (cfiPicker965) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiPicker965
        REQUIRE ??Subroutine249_0
        ; // Fall through to label ??Subroutine249_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine249_0:
          CFI Block cfiCond966 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_545
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_546
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+-2
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_547
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+-2
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function ZDMatchSendState
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_548
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-2
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond970 Using cfiCommon0
          CFI (cfiCond970) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond970) Conditional ??CrossCallReturnLabel_549
          CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond970) CFA_SP SP+-2
          CFI (cfiCond970) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+-2
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker972 Using cfiCommon1
          CFI (cfiPicker972) NoFunction
          CFI (cfiPicker972) Picker
        INC       DPTR
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiPicker972
        REQUIRE ??Subroutine250_0
        ; // Fall through to label ??Subroutine250_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine250_0:
          CFI Block cfiCond973 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_544
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_545
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-2
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_546
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+-2
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond976 Using cfiCommon0
          CFI (cfiCond976) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond976) Conditional ??CrossCallReturnLabel_547
          CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond976) CFA_SP SP+-2
          CFI (cfiCond976) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function ZDMatchSendState
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_548
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+-2
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_549
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-2
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond979 Using cfiCommon0
          CFI (cfiCond979) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond979) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond979) CFA_SP SP+-2
          CFI (cfiCond979) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker980 Using cfiCommon1
          CFI (cfiPicker980) NoFunction
          CFI (cfiPicker980) Picker
        INC       DPTR
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiCond979
          CFI EndBlock cfiPicker980
        REQUIRE ??Subroutine251_0
        ; // Fall through to label ??Subroutine251_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine251_0:
          CFI Block cfiCond981 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_537
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_538
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+-2
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond983 Using cfiCommon0
          CFI (cfiCond983) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond983) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond983) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond983) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond983) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond983) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond983) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond983) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond983) CFA_SP SP+-2
          CFI (cfiCond983) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond984 Using cfiCommon0
          CFI (cfiCond984) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond984) Conditional ??CrossCallReturnLabel_540
          CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond984) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond984) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond984) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond984) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond984) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond984) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond984) CFA_SP SP+-2
          CFI (cfiCond984) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_541
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+-2
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_542
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+-2
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function ZDMatchSendState
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_543
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-2
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_544
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-2
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond989 Using cfiCommon0
          CFI (cfiCond989) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond989) Conditional ??CrossCallReturnLabel_545
          CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond989) CFA_SP SP+-2
          CFI (cfiCond989) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond990 Using cfiCommon0
          CFI (cfiCond990) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond990) Conditional ??CrossCallReturnLabel_546
          CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond990) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond990) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond990) CFA_SP SP+-2
          CFI (cfiCond990) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_547
          CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond991) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond991) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond991) CFA_SP SP+-2
          CFI (cfiCond991) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function ZDMatchSendState
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_548
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+-2
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_549
          CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond993) CFA_SP SP+-2
          CFI (cfiCond993) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+-2
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker995 Using cfiCommon1
          CFI (cfiPicker995) NoFunction
          CFI (cfiPicker995) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_555:
        RET
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiCond983
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiCond989
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiPicker995

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond996 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond997 Using cfiCommon0
          CFI (cfiCond997) Function ZDMatchSendState
          CFI (cfiCond997) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond997) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond997) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond997) CFA_SP SP+-2
          CFI (cfiCond997) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker998 Using cfiCommon1
          CFI (cfiPicker998) NoFunction
          CFI (cfiPicker998) Picker
        LCALL     ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_290:
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond996
          CFI EndBlock cfiCond997
          CFI EndBlock cfiPicker998

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond999 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function ZDMatchSendState
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1000) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1000) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1000) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+-2
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1001 Using cfiCommon1
          CFI (cfiPicker1001) NoFunction
          CFI (cfiPicker1001) Picker
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_278:
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_553:
        RET
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiPicker1001

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine181:
          CFI Block cfiCond1002 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1003 Using cfiCommon0
          CFI (cfiCond1003) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_28
          CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1003) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1003) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1003) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1003) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1003) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1003) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1003) CFA_SP SP+-4
          CFI (cfiCond1003) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_501
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+-4
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_502
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-4
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_503
          CFI (cfiCond1006) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1006) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1006) CFA_SP SP+-9
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_504
          CFI (cfiCond1007) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1007) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1007) CFA_SP SP+-9
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_505
          CFI (cfiCond1008) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1008) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1008) CFA_SP SP+-9
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_506
          CFI (cfiCond1009) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1009) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1009) CFA_SP SP+-9
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_507
          CFI (cfiCond1010) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1010) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1010) CFA_SP SP+-9
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_508
          CFI (cfiCond1011) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1011) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1011) CFA_SP SP+-9
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDO_CopyMatchInfo
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_499
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-4
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function ZDO_CopyMatchInfo
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_500
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+-4
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_481
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-4
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_482
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-4
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1016 Using cfiCommon0
          CFI (cfiCond1016) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_483
          CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1016) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1016) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1016) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1016) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1016) CFA_SP SP+-4
          CFI (cfiCond1016) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_484
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+-4
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_485
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+-4
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1019 Using cfiCommon0
          CFI (cfiCond1019) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_486
          CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1019) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1019) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1019) CFA_SP SP+-4
          CFI (cfiCond1019) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_487
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_SP SP+-4
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_488
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-4
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1022 Using cfiCommon0
          CFI (cfiCond1022) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_489
          CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1022) CFA_SP SP+-4
          CFI (cfiCond1022) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1023 Using cfiCommon0
          CFI (cfiCond1023) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_490
          CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1023) CFA_SP SP+-4
          CFI (cfiCond1023) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_491
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_SP SP+-4
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_492
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_SP SP+-4
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1026 Using cfiCommon0
          CFI (cfiCond1026) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_493
          CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1026) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1026) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1026) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1026) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1026) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1026) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1026) CFA_SP SP+-4
          CFI (cfiCond1026) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_494
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+-4
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_495
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+-4
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_496
          CFI (cfiCond1029) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1029) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1029) CFA_SP SP+-9
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_497
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+-4
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_498
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_SP SP+-4
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1032 Using cfiCommon0
          CFI (cfiCond1032) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_549
          CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1032) CFA_SP SP+-4
          CFI (cfiCond1032) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_550
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-4
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_545
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+-4
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_546
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+-4
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_547
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-4
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1037 Using cfiCommon0
          CFI (cfiCond1037) Function ZDMatchSendState
          CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_548
          CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1037) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1037) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1037) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1037) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1037) CFA_SP SP+-4
          CFI (cfiCond1037) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_544
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+-4
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1039 Using cfiCommon0
          CFI (cfiCond1039) Function ZDO_AnyClusterMatches
          CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_537
          CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1039) CFA_SP SP+-4
          CFI (cfiCond1039) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_538
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+-4
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_539
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-4
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1042 Using cfiCommon0
          CFI (cfiCond1042) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_540
          CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1042) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1042) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1042) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1042) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1042) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1042) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1042) CFA_SP SP+-4
          CFI (cfiCond1042) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1043 Using cfiCommon0
          CFI (cfiCond1043) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_541
          CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1043) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1043) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1043) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1043) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1043) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1043) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1043) CFA_SP SP+-4
          CFI (cfiCond1043) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1044 Using cfiCommon0
          CFI (cfiCond1044) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_542
          CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1044) CFA_SP SP+-4
          CFI (cfiCond1044) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1045 Using cfiCommon0
          CFI (cfiCond1045) Function ZDMatchSendState
          CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_543
          CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1045) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1045) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1045) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1045) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1045) CFA_SP SP+-4
          CFI (cfiCond1045) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_122
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+-4
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1047 Using cfiCommon0
          CFI (cfiCond1047) Function ZDMatchSendState
          CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_123
          CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1047) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1047) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1047) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1047) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1047) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1047) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1047) CFA_SP SP+-4
          CFI (cfiCond1047) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_46
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1048) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1048) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1048) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+-4
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_47
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-4
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1050 Using cfiCommon1
          CFI (cfiPicker1050) NoFunction
          CFI (cfiPicker1050) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiCond1043
          CFI EndBlock cfiCond1044
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiPicker1050

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond1051 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function ZDMatchSendState
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1052) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1052) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1052) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1052) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+-2
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1053 Using cfiCommon1
          CFI (cfiPicker1053) NoFunction
          CFI (cfiPicker1053) Picker
        MOV       DPTR,#matchED
        LCALL     ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_289:
        MOVX      A,@DPTR
        XRL       A,#0x1
        RET
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiPicker1053

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine173:
          CFI Block cfiCond1054 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1055 Using cfiCommon0
          CFI (cfiCond1055) Function ZDMatchSendState
          CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_127
          CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1055) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1055) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1055) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1055) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1055) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1055) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1055) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1055) CFA_SP SP+-4
          CFI (cfiCond1055) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDMatchSendState
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_120
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1056) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1056) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1056) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_SP SP+-4
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function ZDMatchSendState
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_121
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1057) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+-4
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1058 Using cfiCommon1
          CFI (cfiPicker1058) NoFunction
          CFI (cfiPicker1058) Picker
        LCALL     ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_607:
        LCALL     ?Subroutine207 & 0xFFFF
??CrossCallReturnLabel_339:
        RET
          CFI EndBlock cfiCond1054
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiPicker1058

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine207:
          CFI Block cfiCond1059 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_338
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1060 Using cfiCommon0
          CFI (cfiCond1060) Function ZDMatchSendState
          CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_126
          CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1060) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1060) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1060) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1060) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1060) CFA_SP SP+-6
          CFI (cfiCond1060) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function ZDMatchSendState
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_127
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1061) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_SP SP+-6
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function ZDMatchSendState
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_120
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1062) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_SP SP+-6
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1063 Using cfiCommon0
          CFI (cfiCond1063) Function ZDMatchSendState
          CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_339, ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_121
          CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1063) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1063) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1063) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1063) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1063) CFA_SP SP+-6
          CFI (cfiCond1063) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1064 Using cfiCommon1
          CFI (cfiPicker1064) NoFunction
          CFI (cfiPicker1064) Picker
        ADD       A,#0x2f
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiPicker1064

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond1065 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1066 Using cfiCommon0
          CFI (cfiCond1066) Function ZDMatchSendState
          CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1066) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1066) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1066) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1066) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1066) CFA_SP SP+-2
          CFI (cfiCond1066) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1067 Using cfiCommon1
          CFI (cfiPicker1067) NoFunction
          CFI (cfiPicker1067) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_597:
        LCALL     ?Subroutine195 & 0xFFFF
??CrossCallReturnLabel_320:
        MOVX      A,@DPTR
        XRL       A,#0x2
        RET
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiPicker1067

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond1068 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1069 Using cfiCommon0
          CFI (cfiCond1069) Function ZDMatchSendState
          CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1069) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1069) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1069) CFA_SP SP+-2
          CFI (cfiCond1069) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1070 Using cfiCommon1
          CFI (cfiPicker1070) NoFunction
          CFI (cfiPicker1070) Picker
        LCALL     ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_284:
        MOV       DPTR,#matchED
        RET
          CFI EndBlock cfiCond1068
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiPicker1070

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond1071 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function ZDMatchSendState
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1072) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1072) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1072) CFA_SP SP+-2
          CFI (cfiCond1072) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDMatchSendState
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+-2
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1074 Using cfiCommon1
          CFI (cfiPicker1074) NoFunction
          CFI (cfiPicker1074) Picker
        LCALL     ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_286:
        RET
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiPicker1074

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine171:
          CFI Block cfiCond1075 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1076 Using cfiCommon0
          CFI (cfiCond1076) Function ZDMatchSendState
          CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_81
          CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1076) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1076) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1076) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1076) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1076) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1076) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1076) CFA_SP SP+-4
          CFI (cfiCond1076) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1077 Using cfiCommon0
          CFI (cfiCond1077) Function ZDMatchSendState
          CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_82
          CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1077) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1077) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1077) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1077) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1077) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1077) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1077) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1077) CFA_SP SP+-4
          CFI (cfiCond1077) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1078 Using cfiCommon0
          CFI (cfiCond1078) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_71
          CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1078) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1078) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1078) CFA_SP SP+-4
          CFI (cfiCond1078) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1079 Using cfiCommon0
          CFI (cfiCond1079) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_72
          CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1079) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1079) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1079) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1079) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1079) CFA_SP SP+-4
          CFI (cfiCond1079) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1080 Using cfiCommon0
          CFI (cfiCond1080) Function ZDMatchSendState
          CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_73
          CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1080) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1080) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1080) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1080) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1080) CFA_SP SP+-4
          CFI (cfiCond1080) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1081 Using cfiCommon1
          CFI (cfiPicker1081) NoFunction
          CFI (cfiPicker1081) Picker
        LCALL     ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_605:
        ADD       A,#0x34
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiCond1076
          CFI EndBlock cfiCond1077
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiCond1080
          CFI EndBlock cfiPicker1081

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond1082 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function ZDMatchSendState
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1083) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+-2
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1084 Using cfiCommon1
          CFI (cfiPicker1084) NoFunction
          CFI (cfiPicker1084) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R2
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R1
        MOV       R1,A
        MOV       A,R0
        ADD       A,#-0x2
        MOV       DPL,A
        MOV       A,R1
        ADDC      A,#-0x1
        LCALL     ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_426:
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiPicker1084

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond1085 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1086 Using cfiCommon0
          CFI (cfiCond1086) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1086) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1086) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1086) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1086) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1086) CFA_SP SP+-2
          CFI (cfiCond1086) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1087 Using cfiCommon0
          CFI (cfiCond1087) Function ZDMatchSendState
          CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1087) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1087) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1087) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1087) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1087) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1087) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1087) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1087) CFA_SP SP+-2
          CFI (cfiCond1087) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1088 Using cfiCommon1
          CFI (cfiPicker1088) NoFunction
          CFI (cfiPicker1088) Picker
        MOV       DPTR,#matchED
        LCALL     ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_285:
        ADD       A,0xE0 /* A   */
        RET
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiCond1086
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiPicker1088

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond1089 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1090 Using cfiCommon0
          CFI (cfiCond1090) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1090) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1090) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1090) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1090) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1090) CFA_SP SP+-2
          CFI (cfiCond1090) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1091 Using cfiCommon0
          CFI (cfiCond1091) Function ZDMatchSendState
          CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1091) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1091) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1091) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1091) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1091) CFA_SP SP+-2
          CFI (cfiCond1091) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1092 Using cfiCommon1
          CFI (cfiPicker1092) NoFunction
          CFI (cfiPicker1092) Picker
        LCALL     ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_283:
        ADD       A,0xE0 /* A   */
        RET
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiCond1090
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiPicker1092

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine170:
          CFI Block cfiCond1093 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDMatchSendState
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_117
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+-4
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1095 Using cfiCommon0
          CFI (cfiCond1095) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_68
          CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1095) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1095) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1095) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1095) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1095) CFA_SP SP+-4
          CFI (cfiCond1095) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1096 Using cfiCommon0
          CFI (cfiCond1096) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_69
          CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1096) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1096) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1096) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1096) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1096) CFA_SP SP+-4
          CFI (cfiCond1096) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function ZDMatchSendState
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_70
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1097) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1097) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1097) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+-4
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1098 Using cfiCommon1
          CFI (cfiPicker1098) NoFunction
          CFI (cfiPicker1098) Picker
        MOV       DPTR,#matchED
        LCALL     ?Subroutine201 & 0xFFFF
??CrossCallReturnLabel_604:
        ADD       A,#0x31
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiPicker1098

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond1099 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1100 Using cfiCommon0
          CFI (cfiCond1100) Function ZDMatchSendState
          CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1100) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1100) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1100) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1100) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1100) CFA_SP SP+-2
          CFI (cfiCond1100) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1101 Using cfiCommon1
          CFI (cfiPicker1101) NoFunction
          CFI (cfiPicker1101) Picker
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_514:
        RET
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiCond1100
          CFI EndBlock cfiPicker1101

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond1102 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1103 Using cfiCommon0
          CFI (cfiCond1103) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1103) CFA_SP SP+-2
          CFI (cfiCond1103) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1104 Using cfiCommon0
          CFI (cfiCond1104) Function ZDMatchSendState
          CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1104) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1104) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1104) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1104) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1104) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1104) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1104) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1104) CFA_SP SP+-2
          CFI (cfiCond1104) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1105 Using cfiCommon0
          CFI (cfiCond1105) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1105) CFA_SP SP+-2
          CFI (cfiCond1105) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1106 Using cfiCommon0
          CFI (cfiCond1106) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1106) CFA_SP SP+-2
          CFI (cfiCond1106) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1107 Using cfiCommon1
          CFI (cfiPicker1107) NoFunction
          CFI (cfiPicker1107) Picker
        LCALL     ?Subroutine196 & 0xFFFF
??CrossCallReturnLabel_322:
        RET
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiCond1103
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiCond1106
          CFI EndBlock cfiPicker1107

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine196:
          CFI Block cfiCond1108 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_32
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+-4
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDMatchSendState
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_33
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-4
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1111 Using cfiCommon0
          CFI (cfiCond1111) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1111) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_34
          CFI (cfiCond1111) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1111) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1111) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1111) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1111) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1111) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1111) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1111) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1111) CFA_SP SP+-4
          CFI (cfiCond1111) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1112 Using cfiCommon0
          CFI (cfiCond1112) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_322, ??CrossCallReturnLabel_35
          CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1112) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1112) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1112) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1112) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1112) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1112) CFA_SP SP+-4
          CFI (cfiCond1112) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_29
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-6
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1114 Using cfiCommon0
          CFI (cfiCond1114) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_30
          CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1114) CFA_SP SP+-6
          CFI (cfiCond1114) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1115 Using cfiCommon0
          CFI (cfiCond1115) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_0
          CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1115) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1115) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1115) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1115) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1115) CFA_SP SP+-6
          CFI (cfiCond1115) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_1
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+-6
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1117 Using cfiCommon1
          CFI (cfiPicker1117) NoFunction
          CFI (cfiPicker1117) Picker
        MOVX      @DPTR,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiCond1111
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiCond1114
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiPicker1117

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond1118 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1119 Using cfiCommon0
          CFI (cfiCond1119) Function ZDMatchSendState
          CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1119) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1119) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1119) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1119) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1119) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1119) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1119) CFA_SP SP+-2
          CFI (cfiCond1119) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1120 Using cfiCommon1
          CFI (cfiPicker1120) NoFunction
          CFI (cfiPicker1120) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_513:
        MOV       DPH,A
        MOV       DPL,R0
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiCond1119
          CFI EndBlock cfiPicker1120
// 2353 
// 2354 /*********************************************************************
// 2355  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2356  *
// 2357  * @brief   End device bind timeout.
// 2358  *
// 2359  * @param  none
// 2360  *
// 2361  * @return  none
// 2362  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2363 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
ZDO_EndDeviceBindMatchTimeoutCB:
          CFI Block cfiBlock1121 Using cfiCommon0
          CFI Function ZDO_EndDeviceBindMatchTimeoutCB
        CODE
// 2364 {
        FUNCALL ZDO_EndDeviceBindMatchTimeoutCB, ZDMatchSendState
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2365   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
        ; Setup parameters for call to function ZDMatchSendState
        MOV       R3,#0x0
        MOV       R2,#-0x7b
        MOV       R1,#0x1
        LCALL     `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2366 }
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1121
// 2367 
// 2368 /*********************************************************************
// 2369  * ZDO MESSAGE PARSING API FUNCTIONS
// 2370  */
// 2371 
// 2372 /*********************************************************************
// 2373  * @fn          ZDO_ParseEndDeviceBindReq
// 2374  *
// 2375  * @brief       This function parses the End_Device_Bind_req message.
// 2376  *
// 2377  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2378  *            function and must be freed by that calling function.
// 2379  *
// 2380  * @param       inMsg  - incoming message (request)
// 2381  * @param       bindReq - pointer to place to parse message to
// 2382  *
// 2383  * @return      none
// 2384  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2385 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock1122 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2386 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2387   uint8 *msg;
// 2388 
// 2389   // Parse the message
// 2390   bindReq->TransSeq = inMsg->TransSeq;
        MOV       A,R2
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_304:
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ?Subroutine42 & 0xFFFF
// 2391   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_559:
        LCALL     ??Subroutine250_0 & 0xFFFF
??CrossCallReturnLabel_544:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine254_0 & 0xFFFF
// 2392   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_564:
        LCALL     ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_611:
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_150:
        LCALL     ?Subroutine32 & 0xFFFF
// 2393   msg = inMsg->asdu;
??CrossCallReturnLabel_44:
        LCALL     ?Subroutine58 & 0xFFFF
// 2394 
// 2395   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_90:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine20 & 0xFFFF
// 2396   msg += 2;
??CrossCallReturnLabel_566:
        JNC       ??ZDO_ParseEndDeviceBindReq_0
        INC       R7
// 2397 
// 2398   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??ZDO_ParseEndDeviceBindReq_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x6
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2399   msg += Z_EXTADDR_LEN;
// 2400 
// 2401   bindReq->endpoint = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_204:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine266_0 & 0xFFFF
??CrossCallReturnLabel_645:
        JNC       ??ZDO_ParseEndDeviceBindReq_1
        INC       R7
// 2402   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseEndDeviceBindReq_1:
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_557:
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL     ??Subroutine222_0 & 0xFFFF
// 2403   msg += 2;
// 2404 
// 2405   bindReq->inClusters = NULL;
??CrossCallReturnLabel_380:
        MOV       A,?V0
        ADD       A,#0x12
        LCALL     ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_237:
        INC       DPTR
        MOVX      @DPTR,A
// 2406   bindReq->outClusters = NULL;
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_238:
        INC       DPTR
        LCALL     ?Subroutine21 & 0xFFFF
// 2407 
// 2408   if ((bindReq->numInClusters = *msg++) &&
// 2409       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_19:
        MOV       R0,A
        MOV       A,?V0
        LCALL     ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV       A,R0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseEndDeviceBindReq_2
        INC       R7
??ZDO_ParseEndDeviceBindReq_2:
        MOV       A,R0
        JZ        ??ZDO_ParseEndDeviceBindReq_3
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_675:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
        MOV       A,?V0
        ADD       A,#0x12
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_535:
        JZ        ??ZDO_ParseEndDeviceBindReq_3
// 2410   {
// 2411     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,?V0
        ADD       A,#0x12
        LCALL     ?Subroutine93 & 0xFFFF
// 2412   }
??CrossCallReturnLabel_156:
        LCALL     ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_248:
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R6,?V2
        MOV       R7,?V3
        SJMP      ??CrossCallReturnLabel_239
// 2413   else
// 2414   {
// 2415     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_3:
        MOV       A,?V0
        ADD       A,#0x11
        LCALL     ?Subroutine143 & 0xFFFF
// 2416   }
// 2417 
// 2418   if ((bindReq->numOutClusters = *msg++) &&
// 2419       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??CrossCallReturnLabel_239:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R0,A
        LCALL     ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_221:
        MOV       A,R0
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_22:
        JZ        ??ZDO_ParseEndDeviceBindReq_4
        MOV       A,?V0
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_219:
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_676:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_536:
        JZ        ??ZDO_ParseEndDeviceBindReq_4
// 2420   {
// 2421     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ?Subroutine93 & 0xFFFF
// 2422   }
??CrossCallReturnLabel_157:
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_220:
        MOV       R1,A
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP      ??ZDO_ParseEndDeviceBindReq_5
// 2423   else
// 2424   {
// 2425     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_4:
        LCALL     ?Subroutine136 & 0xFFFF
// 2426   }
??CrossCallReturnLabel_222:
        CLR       A
        MOVX      @DPTR,A
// 2427 }
??ZDO_ParseEndDeviceBindReq_5:
        LJMP      ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock1122

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine179:
          CFI Block cfiCond1123 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_557
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1124 Using cfiCommon0
          CFI (cfiCond1124) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_98
          CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1124) CFA_SP SP+-4
          CFI (cfiCond1124) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1125 Using cfiCommon0
          CFI (cfiCond1125) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_99
          CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1125) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1125) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1125) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1125) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1125) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1125) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1125) CFA_SP SP+-4
          CFI (cfiCond1125) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1126 Using cfiCommon1
          CFI (cfiPicker1126) NoFunction
          CFI (cfiPicker1126) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond1123
          CFI EndBlock cfiCond1124
          CFI EndBlock cfiCond1125
          CFI EndBlock cfiPicker1126
        REQUIRE ??Subroutine252_0
        ; // Fall through to label ??Subroutine252_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine252_0:
          CFI Block cfiCond1127 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_556
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1128 Using cfiCommon0
          CFI (cfiCond1128) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_557
          CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1128) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1128) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1128) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1128) CFA_SP SP+-2
          CFI (cfiCond1128) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1129 Using cfiCommon0
          CFI (cfiCond1129) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_98
          CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1129) CFA_SP SP+-4
          CFI (cfiCond1129) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1130 Using cfiCommon0
          CFI (cfiCond1130) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_99
          CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1130) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1130) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1130) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1130) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1130) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1130) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1130) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1130) CFA_SP SP+-4
          CFI (cfiCond1130) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1131 Using cfiCommon1
          CFI (cfiPicker1131) NoFunction
          CFI (cfiPicker1131) Picker
        LCALL     ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_620:
        MOV       R1,A
        MOV       A,R2
        MOV       R0,A
        RET
          CFI EndBlock cfiCond1127
          CFI EndBlock cfiCond1128
          CFI EndBlock cfiCond1129
          CFI EndBlock cfiCond1130
          CFI EndBlock cfiPicker1131

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond1132 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1133 Using cfiCommon0
          CFI (cfiCond1133) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond1133) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1133) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1133) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1133) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1133) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1133) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1133) CFA_SP SP+-2
          CFI (cfiCond1133) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1134 Using cfiCommon1
          CFI (cfiPicker1134) NoFunction
          CFI (cfiPicker1134) Picker
        ADD       A,#0x11
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_630:
        RET
          CFI EndBlock cfiCond1132
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiPicker1134

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond1135 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_237
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1136 Using cfiCommon0
          CFI (cfiCond1136) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1136) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1136) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1136) CFA_SP SP+-2
          CFI (cfiCond1136) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1137 Using cfiCommon0
          CFI (cfiCond1137) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1137) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond1137) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1137) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1137) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1137) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1137) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1137) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1137) CFA_SP SP+-2
          CFI (cfiCond1137) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1138 Using cfiCommon1
          CFI (cfiPicker1138) NoFunction
          CFI (cfiPicker1138) Picker
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_629:
        CLR       A
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiCond1136
          CFI EndBlock cfiCond1137
          CFI EndBlock cfiPicker1138

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond1139 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_219
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1140 Using cfiCommon0
          CFI (cfiCond1140) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1140) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond1140) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1140) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1140) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1140) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1140) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1140) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1140) CFA_SP SP+-2
          CFI (cfiCond1140) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1141 Using cfiCommon1
          CFI (cfiPicker1141) NoFunction
          CFI (cfiPicker1141) Picker
        ADD       A,#0x14
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_626:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1139
          CFI EndBlock cfiCond1140
          CFI EndBlock cfiPicker1141

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond1142 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1143 Using cfiCommon0
          CFI (cfiCond1143) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1143) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1143) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1143) CFA_SP SP+-2
          CFI (cfiCond1143) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1144 Using cfiCommon0
          CFI (cfiCond1144) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1144) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond1144) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1144) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1144) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1144) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1144) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1144) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1144) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1144) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1144) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1144) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1144) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1145 Using cfiCommon1
          CFI (cfiPicker1145) NoFunction
          CFI (cfiPicker1145) Picker
        MOV       A,?V0
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_306:
        LCALL     ??Subroutine261_0 & 0xFFFF
??CrossCallReturnLabel_622:
        RET
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiCond1143
          CFI EndBlock cfiCond1144
          CFI EndBlock cfiPicker1145

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine187:
          CFI Block cfiCond1146 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_303
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1147 Using cfiCommon0
          CFI (cfiCond1147) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1147) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1147) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1147) CFA_SP SP+-2
          CFI (cfiCond1147) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1148 Using cfiCommon0
          CFI (cfiCond1148) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_197
          CFI (cfiCond1148) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1148) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1148) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1148) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1148) CFA_SP SP+-4
          CFI (cfiCond1148) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1149 Using cfiCommon0
          CFI (cfiCond1149) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_198
          CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1149) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1149) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1149) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1149) CFA_SP SP+-4
          CFI (cfiCond1149) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1150 Using cfiCommon0
          CFI (cfiCond1150) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_199
          CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1150) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1150) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1150) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1150) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1150) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1150) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1150) CFA_SP SP+-5
          CFI (cfiCond1150) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1151 Using cfiCommon0
          CFI (cfiCond1151) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1151) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1151) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1152 Using cfiCommon1
          CFI (cfiPicker1152) NoFunction
          CFI (cfiPicker1152) Picker
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiCond1147
          CFI EndBlock cfiCond1148
          CFI EndBlock cfiCond1149
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiCond1151
          CFI EndBlock cfiPicker1152

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond1153 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1154 Using cfiCommon0
          CFI (cfiCond1154) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1154) CFA_SP SP+-2
          CFI (cfiCond1154) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1155 Using cfiCommon1
          CFI (cfiPicker1155) NoFunction
          CFI (cfiPicker1155) Picker
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_624:
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_297:
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       A,?V0
        RET
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiCond1154
          CFI EndBlock cfiPicker1155

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond1156 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_559
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1157 Using cfiCommon0
          CFI (cfiCond1157) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_561
          CFI (cfiCond1157) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1157) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1157) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1157) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1157) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1157) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1157) CFA_SP SP+-2
          CFI (cfiCond1157) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1158 Using cfiCommon1
          CFI (cfiPicker1158) NoFunction
          CFI (cfiPicker1158) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
          CFI EndBlock cfiCond1156
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiPicker1158
        REQUIRE ??Subroutine253_0
        ; // Fall through to label ??Subroutine253_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine253_0:
          CFI Block cfiCond1159 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_560
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1160 Using cfiCommon0
          CFI (cfiCond1160) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_559
          CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1160) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1160) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1160) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1160) CFA_SP SP+-2
          CFI (cfiCond1160) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1161 Using cfiCommon0
          CFI (cfiCond1161) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_561
          CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1161) CFA_SP SP+-2
          CFI (cfiCond1161) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1162 Using cfiCommon1
          CFI (cfiPicker1162) NoFunction
          CFI (cfiPicker1162) Picker
        LCALL     ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_654:
        RET
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiCond1160
          CFI EndBlock cfiCond1161
          CFI EndBlock cfiPicker1162

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine158:
          CFI Block cfiCond1163 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_654, ??CrossCallReturnLabel_559
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1164 Using cfiCommon0
          CFI (cfiCond1164) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1164) Conditional ??CrossCallReturnLabel_654, ??CrossCallReturnLabel_561
          CFI (cfiCond1164) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1164) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1164) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1164) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1164) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1164) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1164) CFA_SP SP+-4
          CFI (cfiCond1164) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1165 Using cfiCommon0
          CFI (cfiCond1165) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_654, ??CrossCallReturnLabel_560
          CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1165) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1165) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1165) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1165) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1165) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1165) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1165) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1165) CFA_SP SP+-4
          CFI (cfiCond1165) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1166 Using cfiCommon0
          CFI (cfiCond1166) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_655, ??CrossCallReturnLabel_634
          CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1166) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1166) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1166) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1166) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1166) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1166) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1166) CFA_SP SP+-4
          CFI (cfiCond1166) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1167 Using cfiCommon0
          CFI (cfiCond1167) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1167) Conditional ??CrossCallReturnLabel_655, ??CrossCallReturnLabel_635
          CFI (cfiCond1167) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1167) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1167) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1167) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1167) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1167) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1167) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1167) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1167) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1167) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1167) CFA_SP SP+-4
          CFI (cfiCond1167) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1168 Using cfiCommon0
          CFI (cfiCond1168) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1168) Conditional ??CrossCallReturnLabel_655, ??CrossCallReturnLabel_636
          CFI (cfiCond1168) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1168) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1168) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1168) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1168) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1168) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1168) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1168) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1168) CFA_SP SP+-4
          CFI (cfiCond1168) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1169 Using cfiCommon0
          CFI (cfiCond1169) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_649
          CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1169) CFA_SP SP+-4
          CFI (cfiCond1169) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1170 Using cfiCommon0
          CFI (cfiCond1170) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_650
          CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1170) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1170) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1170) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1170) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1170) CFA_SP SP+-4
          CFI (cfiCond1170) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1171 Using cfiCommon0
          CFI (cfiCond1171) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_651
          CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1171) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1171) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1171) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1171) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1171) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1171) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1171) CFA_SP SP+-4
          CFI (cfiCond1171) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1172 Using cfiCommon0
          CFI (cfiCond1172) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_652
          CFI (cfiCond1172) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1172) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1172) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1172) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1172) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1172) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1172) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1172) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1172) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1172) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1172) CFA_SP SP+-4
          CFI (cfiCond1172) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1173 Using cfiCommon0
          CFI (cfiCond1173) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1173) Conditional ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_653
          CFI (cfiCond1173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1173) CFA_SP SP+-4
          CFI (cfiCond1173) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1174 Using cfiCommon1
          CFI (cfiPicker1174) NoFunction
          CFI (cfiPicker1174) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        RET
          CFI EndBlock cfiCond1163
          CFI EndBlock cfiCond1164
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiCond1167
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiCond1172
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiPicker1174

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond1175 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_562
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1176 Using cfiCommon0
          CFI (cfiCond1176) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1176) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1176) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1176) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1176) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1176) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1176) CFA_SP SP+-2
          CFI (cfiCond1176) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1177 Using cfiCommon1
          CFI (cfiPicker1177) NoFunction
          CFI (cfiPicker1177) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R4
        MOV       DPH,A
          CFI EndBlock cfiCond1175
          CFI EndBlock cfiCond1176
          CFI EndBlock cfiPicker1177
        REQUIRE ??Subroutine254_0
        ; // Fall through to label ??Subroutine254_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine254_0:
          CFI Block cfiCond1178 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_564
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1179 Using cfiCommon0
          CFI (cfiCond1179) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1179) Conditional ??CrossCallReturnLabel_562
          CFI (cfiCond1179) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1179) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1179) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1179) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1179) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1179) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1179) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1179) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1179) CFA_SP SP+-2
          CFI (cfiCond1179) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1180 Using cfiCommon0
          CFI (cfiCond1180) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1180) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1180) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1180) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1180) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1180) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1180) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1180) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1180) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1180) CFA_SP SP+-2
          CFI (cfiCond1180) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1181 Using cfiCommon1
          CFI (cfiPicker1181) NoFunction
          CFI (cfiPicker1181) Picker
        MOV       A,R0
          CFI EndBlock cfiCond1178
          CFI EndBlock cfiCond1179
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiPicker1181
        REQUIRE ??Subroutine255_0
        ; // Fall through to label ??Subroutine255_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine255_0:
          CFI Block cfiCond1182 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_565
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1183 Using cfiCommon0
          CFI (cfiCond1183) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_564
          CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1183) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1183) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1183) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1183) CFA_SP SP+-2
          CFI (cfiCond1183) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1184 Using cfiCommon0
          CFI (cfiCond1184) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1184) Conditional ??CrossCallReturnLabel_562
          CFI (cfiCond1184) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1184) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1184) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1184) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1184) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1184) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1184) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1184) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1184) CFA_SP SP+-2
          CFI (cfiCond1184) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1185 Using cfiCommon0
          CFI (cfiCond1185) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1185) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1185) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1185) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1185) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1185) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1185) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1185) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1185) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1185) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1185) CFA_SP SP+-2
          CFI (cfiCond1185) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1186 Using cfiCommon1
          CFI (cfiPicker1186) NoFunction
          CFI (cfiPicker1186) Picker
        LCALL     ??Subroutine268_0 & 0xFFFF
??CrossCallReturnLabel_661:
        MOV       A,R2
        RET
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiCond1183
          CFI EndBlock cfiCond1184
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiPicker1186

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond1187 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_566
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1188 Using cfiCommon0
          CFI (cfiCond1188) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1188) Conditional ??CrossCallReturnLabel_567
          CFI (cfiCond1188) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1188) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1188) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1188) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1188) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1188) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1188) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1188) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1188) CFA_SP SP+-2
          CFI (cfiCond1188) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1189 Using cfiCommon1
          CFI (cfiPicker1189) NoFunction
          CFI (cfiPicker1189) Picker
        INC       DPTR
          CFI EndBlock cfiCond1187
          CFI EndBlock cfiCond1188
          CFI EndBlock cfiPicker1189
        REQUIRE ??Subroutine256_0
        ; // Fall through to label ??Subroutine256_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine256_0:
          CFI Block cfiCond1190 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_568
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1191 Using cfiCommon0
          CFI (cfiCond1191) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1191) Conditional ??CrossCallReturnLabel_569
          CFI (cfiCond1191) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1191) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1191) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1191) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1191) CFA_SP SP+-2
          CFI (cfiCond1191) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1192 Using cfiCommon0
          CFI (cfiCond1192) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1192) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1192) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1192) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1192) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1192) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1192) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1192) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1192) CFA_SP SP+-2
          CFI (cfiCond1192) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1193 Using cfiCommon0
          CFI (cfiCond1193) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1193) Conditional ??CrossCallReturnLabel_567
          CFI (cfiCond1193) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1193) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1193) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1193) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1193) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1193) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1193) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1193) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1193) CFA_SP SP+-2
          CFI (cfiCond1193) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1194 Using cfiCommon1
          CFI (cfiPicker1194) NoFunction
          CFI (cfiPicker1194) Picker
        LCALL     ??Subroutine268_0 & 0xFFFF
??CrossCallReturnLabel_662:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1190
          CFI EndBlock cfiCond1191
          CFI EndBlock cfiCond1192
          CFI EndBlock cfiCond1193
          CFI EndBlock cfiPicker1194
// 2428 
// 2429 /*********************************************************************
// 2430  * @fn          ZDO_ParseBindUnbindReq
// 2431  *
// 2432  * @brief       This function parses the Bind_req or Unbind_req message.
// 2433  *
// 2434  * @param       inMsg  - incoming message (request)
// 2435  * @param       pReq - place to put parsed information
// 2436  *
// 2437  * @return      none
// 2438  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2439 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock1195 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2440 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine119 & 0xFFFF
// 2441   uint8 *msg;
// 2442 
// 2443   msg = inMsg->asdu;
??CrossCallReturnLabel_681:
        LCALL     ?Subroutine102 & 0xFFFF
// 2444   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_422:
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2445   msg += Z_EXTADDR_LEN;
// 2446   pReq->srcEndpoint = *msg++;
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_647:
        JNC       ??ZDO_ParseBindUnbindReq_0
        INC       R7
// 2447   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        LCALL     ?Subroutine11 & 0xFFFF
// 2448   msg += 2;
// 2449   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_4:
        JNC       ??ZDO_ParseBindUnbindReq_1
        INC       R7
// 2450   if ( pReq->dstAddress.addrMode == Addr64Bit )
??ZDO_ParseBindUnbindReq_1:
        MOV       A,#0x3
        XRL       A,R0
        JNZ       ??ZDO_ParseBindUnbindReq_2
// 2451   {
// 2452     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xb
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2453     msg += Z_EXTADDR_LEN;
// 2454     pReq->dstEndpoint = *msg;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine136 & 0xFFFF
// 2455   }
??CrossCallReturnLabel_223:
        POP       A
          CFI CFA_SP SP+0
        SJMP      ??ZDO_ParseBindUnbindReq_3
// 2456   else
// 2457   {
// 2458     // copy group address
// 2459     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_2:
        LCALL     ?Subroutine62 & 0xFFFF
// 2460   }
??CrossCallReturnLabel_98:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDO_ParseBindUnbindReq_3:
        MOVX      @DPTR,A
// 2461 }
        LJMP      ??Subroutine214_0 & 0xFFFF
          CFI EndBlock cfiBlock1195

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond1196 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1197 Using cfiCommon0
          CFI (cfiCond1197) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1197) CFA_SP SP+-2
          CFI (cfiCond1197) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1198 Using cfiCommon0
          CFI (cfiCond1198) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1198) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1199 Using cfiCommon0
          CFI (cfiCond1199) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1199) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1200 Using cfiCommon1
          CFI (cfiPicker1200) NoFunction
          CFI (cfiPicker1200) Picker
        MOV       A,?V0
        ADD       A,#0x14
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_627:
        RET
          CFI EndBlock cfiCond1196
          CFI EndBlock cfiCond1197
          CFI EndBlock cfiCond1198
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiPicker1200
// 2462 
// 2463 /*********************************************************************
// 2464  * @fn      ZDO_ParseAddrRsp
// 2465  *
// 2466  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2467  *          structure.
// 2468  *
// 2469  * @param   inMsg - incoming message
// 2470  *
// 2471  * @return  pointer to parsed structures.  This structure was
// 2472  *          allocated using osal_mem_alloc, so it must be freed
// 2473  *          by the calling function [osal_mem_free()].
// 2474  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2475 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock1201 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2476 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 2477   ZDO_NwkIEEEAddrResp_t *rsp;
// 2478   uint8 *msg;
// 2479   byte cnt = 0;
        MOV       ?V2,#0x0
// 2480 
// 2481   // Calculate the number of items in the list
// 2482   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV       A,R6
        ADD       A,#0x10
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,#0xc
        JC        ??ZDO_ParseAddrRsp_0
// 2483     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL     ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_575:
        ADD       A,#0xb
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_218:
        MOV       ?V2,A
// 2484   else
// 2485     cnt = 0;
// 2486 
// 2487   // Make buffer
// 2488   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R0,?V2
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0xd
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2489 
// 2490   if ( rsp )
        MOV       A,R2
        ORL       A,?V1
        JNZ       $+5
        LJMP      ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 2491   {
// 2492     msg = inMsg->asdu;
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_420:
        LCALL     ??Subroutine264_0 & 0xFFFF
// 2493 
// 2494     rsp->status = *msg++;
??CrossCallReturnLabel_641:
        MOV       R0,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine22 & 0xFFFF
// 2495     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_23:
        JNZ       ??ZDO_ParseAddrRsp_1
// 2496     {
// 2497       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,R2
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2498       msg += Z_EXTADDR_LEN;
        MOV       A,R6
        ADD       A,#0x8
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_2
        INC       R7
// 2499       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_148:
        INC       DPTR
        LCALL     ??Subroutine223_0 & 0xFFFF
// 2500 
// 2501       msg += 2;
// 2502       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_366:
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_234:
        CLR       A
        MOVX      @DPTR,A
// 2503 
// 2504       // StartIndex field is only present if NumAssocDev field is non-zero.
// 2505       if ( cnt > 0 )
        MOV       A,?V2
        JZ        ??ZDO_ParseAddrRsp_1
// 2506       {
// 2507         uint16 *pList = &(rsp->devList[0]);
        MOV       A,?V0
        ADD       A,#0xd
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
// 2508         byte n = cnt;
// 2509 
// 2510         rsp->numAssocDevs = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_235:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine41 & 0xFFFF
// 2511         rsp->startIndex = *msg++;
??CrossCallReturnLabel_55:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_227:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_3
        INC       R7
??ZDO_ParseAddrRsp_3:
        MOV       R4,?V2
// 2512 
// 2513         while ( n != 0 )
// 2514         {
// 2515           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_4:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,?V2
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??ZDO_ParseAddrRsp_5
        INC       R1
// 2516           msg += sizeof( uint16 );
??ZDO_ParseAddrRsp_5:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_6
        INC       R7
// 2517           n--;
// 2518         }
??ZDO_ParseAddrRsp_6:
        DEC       R4
        MOV       A,R4
        JNZ       ??ZDO_ParseAddrRsp_4
// 2519       }
// 2520     }
// 2521   }
// 2522   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV       R2,?V0
        MOV       R3,?V1
        LJMP      ??Subroutine274_0 & 0xFFFF
// 2523 }
          CFI EndBlock cfiBlock1201

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond1202 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1203 Using cfiCommon0
          CFI (cfiCond1203) Function ZDO_ParseAddrRsp
          CFI (cfiCond1203) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond1203) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1203) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1203) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1203) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1203) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1203) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1203) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1203) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1203) CFA_SP SP+-2
          CFI (cfiCond1203) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1204 Using cfiCommon1
          CFI (cfiPicker1204) NoFunction
          CFI (cfiPicker1204) Picker
        LCALL     ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_308:
        RET
          CFI EndBlock cfiCond1202
          CFI EndBlock cfiCond1203
          CFI EndBlock cfiPicker1204

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine188:
          CFI Block cfiCond1205 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1206 Using cfiCommon0
          CFI (cfiCond1206) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_184
          CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1206) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1206) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1206) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1206) CFA_SP SP+-4
          CFI (cfiCond1206) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1207 Using cfiCommon0
          CFI (cfiCond1207) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_185
          CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1207) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1207) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1207) CFA_SP SP+-4
          CFI (cfiCond1207) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1208 Using cfiCommon0
          CFI (cfiCond1208) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1208) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_186
          CFI (cfiCond1208) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1208) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1208) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1208) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1208) CFA_SP SP+-4
          CFI (cfiCond1208) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1209 Using cfiCommon0
          CFI (cfiCond1209) Function ZDO_ParseAddrRsp
          CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_187
          CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1209) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1209) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1209) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1209) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1209) CFA_SP SP+-4
          CFI (cfiCond1209) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1210 Using cfiCommon1
          CFI (cfiPicker1210) NoFunction
          CFI (cfiPicker1210) Picker
        MOV       A,R6
        LCALL     ?Subroutine206 & 0xFFFF
??CrossCallReturnLabel_691:
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1205
          CFI EndBlock cfiCond1206
          CFI EndBlock cfiCond1207
          CFI EndBlock cfiCond1208
          CFI EndBlock cfiCond1209
          CFI EndBlock cfiPicker1210

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond1211 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_577
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1212 Using cfiCommon0
          CFI (cfiCond1212) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1212) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1212) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1212) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1212) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1212) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1212) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1212) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1212) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1212) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1212) CFA_SP SP+-2
          CFI (cfiCond1212) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1213 Using cfiCommon0
          CFI (cfiCond1213) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1213) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1213) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1213) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1213) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1213) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1213) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1213) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1213) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1213) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1213) CFA_SP SP+-2
          CFI (cfiCond1213) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1214 Using cfiCommon0
          CFI (cfiCond1214) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1214) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1214) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1214) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1214) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1214) CFA_SP SP+-2
          CFI (cfiCond1214) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1215 Using cfiCommon0
          CFI (cfiCond1215) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1215) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1215) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1215) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1215) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1215) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1215) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1215) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1215) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1215) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1215) CFA_SP SP+-2
          CFI (cfiCond1215) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1216 Using cfiCommon0
          CFI (cfiCond1216) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1216) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1216) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1216) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1216) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1216) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1216) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1216) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1216) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1216) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1216) CFA_SP SP+-2
          CFI (cfiCond1216) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1217 Using cfiCommon0
          CFI (cfiCond1217) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1217) Conditional ??CrossCallReturnLabel_583
          CFI (cfiCond1217) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1217) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1217) CFA_SP SP+-7
          CFI Block cfiCond1218 Using cfiCommon0
          CFI (cfiCond1218) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_584
          CFI (cfiCond1218) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1218) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1218) CFA_SP SP+-7
          CFI Block cfiCond1219 Using cfiCommon0
          CFI (cfiCond1219) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_585
          CFI (cfiCond1219) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1219) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1219) CFA_SP SP+-7
          CFI Block cfiCond1220 Using cfiCommon0
          CFI (cfiCond1220) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1220) Conditional ??CrossCallReturnLabel_586
          CFI (cfiCond1220) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1220) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1220) CFA_SP SP+-7
          CFI Block cfiCond1221 Using cfiCommon0
          CFI (cfiCond1221) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1221) Conditional ??CrossCallReturnLabel_587
          CFI (cfiCond1221) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1221) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1221) CFA_SP SP+-7
          CFI Block cfiCond1222 Using cfiCommon0
          CFI (cfiCond1222) Function ZDMatchSendState
          CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_588
          CFI (cfiCond1222) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1222) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1222) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1222) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1222) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1222) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1222) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1222) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1222) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1222) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1222) CFA_SP SP+-2
          CFI (cfiCond1222) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1223 Using cfiCommon0
          CFI (cfiCond1223) Function ZDMatchSendState
          CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_589
          CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1223) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1223) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1223) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1223) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1223) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1223) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1223) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1224 Using cfiCommon0
          CFI (cfiCond1224) Function ZDMatchSendState
          CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_590
          CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1224) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1224) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1224) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1224) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1224) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1224) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1224) CFA_SP SP+-2
          CFI (cfiCond1224) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1225 Using cfiCommon1
          CFI (cfiPicker1225) NoFunction
          CFI (cfiPicker1225) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond1211
          CFI EndBlock cfiCond1212
          CFI EndBlock cfiCond1213
          CFI EndBlock cfiCond1214
          CFI EndBlock cfiCond1215
          CFI EndBlock cfiCond1216
          CFI EndBlock cfiCond1217
          CFI EndBlock cfiCond1218
          CFI EndBlock cfiCond1219
          CFI EndBlock cfiCond1220
          CFI EndBlock cfiCond1221
          CFI EndBlock cfiCond1222
          CFI EndBlock cfiCond1223
          CFI EndBlock cfiCond1224
          CFI EndBlock cfiPicker1225
        REQUIRE ??Subroutine257_0
        ; // Fall through to label ??Subroutine257_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine257_0:
          CFI Block cfiCond1226 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_570
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1227 Using cfiCommon0
          CFI (cfiCond1227) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1227) Conditional ??CrossCallReturnLabel_571
          CFI (cfiCond1227) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1227) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1227) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1227) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1227) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1227) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1227) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1227) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1227) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1227) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1227) CFA_SP SP+-2
          CFI (cfiCond1227) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1228 Using cfiCommon0
          CFI (cfiCond1228) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_572
          CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1228) CFA_SP SP+-2
          CFI (cfiCond1228) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1229 Using cfiCommon0
          CFI (cfiCond1229) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1229) CFA_SP SP+-2
          CFI (cfiCond1229) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1230 Using cfiCommon0
          CFI (cfiCond1230) Function ZDMatchSendState
          CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_574
          CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1230) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1230) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1230) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1230) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1230) CFA_SP SP+-2
          CFI (cfiCond1230) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1231 Using cfiCommon0
          CFI (cfiCond1231) Function ZDO_ParseAddrRsp
          CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1231) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1231) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1231) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1231) CFA_SP SP+-2
          CFI (cfiCond1231) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1232 Using cfiCommon0
          CFI (cfiCond1232) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1232) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1232) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1232) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1232) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1232) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1232) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1232) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1232) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1232) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1232) CFA_SP SP+-2
          CFI (cfiCond1232) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1233 Using cfiCommon0
          CFI (cfiCond1233) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1233) Conditional ??CrossCallReturnLabel_577
          CFI (cfiCond1233) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1233) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1233) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1233) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1233) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1233) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1233) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1233) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1233) CFA_SP SP+-2
          CFI (cfiCond1233) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1234 Using cfiCommon0
          CFI (cfiCond1234) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1234) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1234) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1234) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1234) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1234) CFA_SP SP+-2
          CFI (cfiCond1234) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1235 Using cfiCommon0
          CFI (cfiCond1235) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1235) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1235) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1235) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1235) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1235) CFA_SP SP+-2
          CFI (cfiCond1235) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1236 Using cfiCommon0
          CFI (cfiCond1236) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1236) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1236) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1236) CFA_SP SP+-2
          CFI (cfiCond1236) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1237 Using cfiCommon0
          CFI (cfiCond1237) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1237) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1237) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1237) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1237) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1237) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1237) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1237) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1237) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1237) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1237) CFA_SP SP+-2
          CFI (cfiCond1237) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1238 Using cfiCommon0
          CFI (cfiCond1238) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1238) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1238) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1238) CFA_SP SP+-2
          CFI (cfiCond1238) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1239 Using cfiCommon0
          CFI (cfiCond1239) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_583
          CFI (cfiCond1239) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1239) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1239) CFA_SP SP+-7
          CFI Block cfiCond1240 Using cfiCommon0
          CFI (cfiCond1240) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_584
          CFI (cfiCond1240) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1240) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1240) CFA_SP SP+-7
          CFI Block cfiCond1241 Using cfiCommon0
          CFI (cfiCond1241) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_585
          CFI (cfiCond1241) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1241) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1241) CFA_SP SP+-7
          CFI Block cfiCond1242 Using cfiCommon0
          CFI (cfiCond1242) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1242) Conditional ??CrossCallReturnLabel_586
          CFI (cfiCond1242) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1242) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1242) CFA_SP SP+-7
          CFI Block cfiCond1243 Using cfiCommon0
          CFI (cfiCond1243) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1243) Conditional ??CrossCallReturnLabel_587
          CFI (cfiCond1243) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1243) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1243) CFA_SP SP+-7
          CFI Block cfiCond1244 Using cfiCommon0
          CFI (cfiCond1244) Function ZDMatchSendState
          CFI (cfiCond1244) Conditional ??CrossCallReturnLabel_588
          CFI (cfiCond1244) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1244) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1244) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1244) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1244) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1244) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1244) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1244) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1244) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1244) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1244) CFA_SP SP+-2
          CFI (cfiCond1244) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1245 Using cfiCommon0
          CFI (cfiCond1245) Function ZDMatchSendState
          CFI (cfiCond1245) Conditional ??CrossCallReturnLabel_589
          CFI (cfiCond1245) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1245) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1245) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1245) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1245) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1245) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1245) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1245) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1245) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1245) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1245) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1246 Using cfiCommon0
          CFI (cfiCond1246) Function ZDMatchSendState
          CFI (cfiCond1246) Conditional ??CrossCallReturnLabel_590
          CFI (cfiCond1246) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1246) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1246) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1246) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1246) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1246) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1246) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1246) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1246) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1246) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1246) CFA_SP SP+-2
          CFI (cfiCond1246) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1247 Using cfiCommon1
          CFI (cfiPicker1247) NoFunction
          CFI (cfiPicker1247) Picker
        LCALL     ??Subroutine248_0 & 0xFFFF
??CrossCallReturnLabel_602:
        RET
          CFI EndBlock cfiCond1226
          CFI EndBlock cfiCond1227
          CFI EndBlock cfiCond1228
          CFI EndBlock cfiCond1229
          CFI EndBlock cfiCond1230
          CFI EndBlock cfiCond1231
          CFI EndBlock cfiCond1232
          CFI EndBlock cfiCond1233
          CFI EndBlock cfiCond1234
          CFI EndBlock cfiCond1235
          CFI EndBlock cfiCond1236
          CFI EndBlock cfiCond1237
          CFI EndBlock cfiCond1238
          CFI EndBlock cfiCond1239
          CFI EndBlock cfiCond1240
          CFI EndBlock cfiCond1241
          CFI EndBlock cfiCond1242
          CFI EndBlock cfiCond1243
          CFI EndBlock cfiCond1244
          CFI EndBlock cfiCond1245
          CFI EndBlock cfiCond1246
          CFI EndBlock cfiPicker1247

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond1248 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1249 Using cfiCommon0
          CFI (cfiCond1249) Function ZDO_ParseAddrRsp
          CFI (cfiCond1249) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond1249) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1249) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1249) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1249) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1249) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1249) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1249) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1249) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1249) CFA_SP SP+-2
          CFI (cfiCond1249) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1250 Using cfiCommon0
          CFI (cfiCond1250) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1250) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond1250) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1250) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1250) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1250) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1250) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1250) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1250) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1250) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1250) CFA_SP SP+-2
          CFI (cfiCond1250) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1251 Using cfiCommon1
          CFI (cfiPicker1251) NoFunction
          CFI (cfiPicker1251) Picker
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_271:
        MOV       R6,DPL
        MOV       R7,DPH
        RET
          CFI EndBlock cfiCond1248
          CFI EndBlock cfiCond1249
          CFI EndBlock cfiCond1250
          CFI EndBlock cfiPicker1251
// 2524 
// 2525 /*********************************************************************
// 2526  * @fn          ZDO_ParseNodeDescRsp
// 2527  *
// 2528  * @brief       This function parses the Node_Desc_rsp message.
// 2529  *
// 2530  * @param       inMsg - incoming message
// 2531  * @param       pNDRsp - place to parse the message into
// 2532  *
// 2533  * @return      none
// 2534  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2535 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock1252 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 2536 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2537   uint8 *msg;
// 2538 
// 2539   msg = inMsg->asdu;
        LCALL     ?Subroutine10 & 0xFFFF
// 2540 
// 2541   pNDRsp->status = *msg++;
// 2542   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2543 
// 2544   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_2:
        JZ        $+5
        LJMP      ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 2545   {
// 2546     msg += 2;
// 2547     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
        MOV       A,R0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R4
        ADD       A,#0x3
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ANL       A,#0x7
        MOV       ?V0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xf8
        ORL       A,?V0
        MOV       ?V1,A
        LCALL     ?Subroutine43 & 0xFFFF
// 2548 
// 2549     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_57:
        MOV       C,0xE0 /* A   */.3
        CLR       A
        RLC       A
        MOV       ?V0,A
        MOV       C,0xE0 /* A   */.0
        CLR       A
        RLC       A
        RLC       A
        RLC       A
        RLC       A
        MOV       ?V0,A
        MOV       A,#-0x9
        ANL       A,?V1
        ORL       A,?V0
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine43 & 0xFFFF
// 2550     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_58:
        MOV       C,0xE0 /* A   */.4
        CLR       A
        RLC       A
        MOV       R2,A
        MOV       C,0xE0 /* A   */.0
        CLR       A
        RLC       A
        SWAP      A
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xef
        ORL       A,R2
        MOVX      @DPTR,A
// 2551 
// 2552     msg++;  // Reserved bits.
// 2553     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV       A,R0
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R4
        ADD       A,#0x4
        INC       R6
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ANL       A,#0xf8
        MOV       ?V0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0x7
        ORL       A,?V0
        MOV       ?V0,A
        LCALL     ?Subroutine43 & 0xFFFF
// 2554     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_59:
        ANL       A,#0x7
        MOV       R2,A
        MOV       A,#-0x8
        ANL       A,?V0
        ORL       A,R2
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine34 & 0xFFFF
// 2555     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_48:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine35 & 0xFFFF
// 2556     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_51:
        INC       DPTR
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_679:
        LCALL     ?Subroutine31 & 0xFFFF
// 2557     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_42:
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL     ?Subroutine31 & 0xFFFF
// 2558     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_43:
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_680:
        LCALL     ?Subroutine29 & 0xFFFF
// 2559     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_38:
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL     ?Subroutine29 & 0xFFFF
// 2560     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_39:
        INC       DPTR
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_153:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0xa
        MOV       R0,A
        JNC       ??ZDO_ParseNodeDescRsp_1
        INC       R1
// 2561     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseNodeDescRsp_1:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,R6
        MOV       R2,A
        MOV       A,R4
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ??Subroutine224_0 & 0xFFFF
// 2562     msg += 2;
// 2563     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_395:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        ADD       A,#0xd
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine35 & 0xFFFF
// 2564     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
// 2565     pNDRsp->nodeDesc.DescriptorCapability = *msg;
// 2566   }
??CrossCallReturnLabel_52:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_612:
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_49:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_305:
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2567 }
??ZDO_ParseNodeDescRsp_0:
        LJMP      ??Subroutine214_0 & 0xFFFF
          CFI EndBlock cfiBlock1252

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond1253 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_613
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1254 Using cfiCommon0
          CFI (cfiCond1254) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1254) Conditional ??CrossCallReturnLabel_614
          CFI (cfiCond1254) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1254) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1254) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1254) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1254) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1254) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1254) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1254) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1254) CFA_SP SP+-2
          CFI (cfiCond1254) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1255 Using cfiCommon1
          CFI (cfiPicker1255) NoFunction
          CFI (cfiPicker1255) Picker
        MOV       A,?V4
          CFI EndBlock cfiCond1253
          CFI EndBlock cfiCond1254
          CFI EndBlock cfiPicker1255
        REQUIRE ??Subroutine258_0
        ; // Fall through to label ??Subroutine258_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine258_0:
          CFI Block cfiCond1256 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_609
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1257 Using cfiCommon0
          CFI (cfiCond1257) Function ZDMatchSendState
          CFI (cfiCond1257) Conditional ??CrossCallReturnLabel_610
          CFI (cfiCond1257) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1257) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1257) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1257) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1257) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1257) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1257) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1257) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1257) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1257) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1257) CFA_SP SP+-2
          CFI (cfiCond1257) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond1258 Using cfiCommon0
          CFI (cfiCond1258) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_611
          CFI (cfiCond1258) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1258) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1258) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1258) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1258) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1258) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1258) CFA_SP SP+-2
          CFI (cfiCond1258) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1259 Using cfiCommon0
          CFI (cfiCond1259) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1259) Conditional ??CrossCallReturnLabel_612
          CFI (cfiCond1259) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1259) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1259) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1259) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1259) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1260 Using cfiCommon0
          CFI (cfiCond1260) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1260) Conditional ??CrossCallReturnLabel_613
          CFI (cfiCond1260) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1260) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1260) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1260) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1260) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1260) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1260) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1260) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1260) CFA_SP SP+-2
          CFI (cfiCond1260) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1261 Using cfiCommon0
          CFI (cfiCond1261) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1261) Conditional ??CrossCallReturnLabel_614
          CFI (cfiCond1261) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1261) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1261) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1261) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1261) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1261) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1261) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1261) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1261) CFA_SP SP+-2
          CFI (cfiCond1261) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1262 Using cfiCommon1
          CFI (cfiPicker1262) NoFunction
          CFI (cfiPicker1262) Picker
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond1256
          CFI EndBlock cfiCond1257
          CFI EndBlock cfiCond1258
          CFI EndBlock cfiCond1259
          CFI EndBlock cfiCond1260
          CFI EndBlock cfiCond1261
          CFI EndBlock cfiPicker1262

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond1263 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1264 Using cfiCommon0
          CFI (cfiCond1264) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1264) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond1264) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1264) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1264) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1264) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1264) CFA_SP SP+-2
          CFI (cfiCond1264) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1265 Using cfiCommon0
          CFI (cfiCond1265) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1265) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond1265) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1265) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1265) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1265) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1265) CFA_SP SP+-2
          CFI (cfiCond1265) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1266 Using cfiCommon0
          CFI (cfiCond1266) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1266) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond1266) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1266) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1266) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1266) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1266) CFA_SP SP+-2
          CFI (cfiCond1266) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1267 Using cfiCommon1
          CFI (cfiPicker1267) NoFunction
          CFI (cfiPicker1267) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond1263
          CFI EndBlock cfiCond1264
          CFI EndBlock cfiCond1265
          CFI EndBlock cfiCond1266
          CFI EndBlock cfiPicker1267

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond1268 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1269 Using cfiCommon0
          CFI (cfiCond1269) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1269) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond1269) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1269) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1269) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1269) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1269) CFA_SP SP+-2
          CFI (cfiCond1269) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1270 Using cfiCommon0
          CFI (cfiCond1270) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1270) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond1270) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1270) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1270) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1270) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1270) CFA_SP SP+-2
          CFI (cfiCond1270) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1271 Using cfiCommon1
          CFI (cfiPicker1271) NoFunction
          CFI (cfiPicker1271) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1268
          CFI EndBlock cfiCond1269
          CFI EndBlock cfiCond1270
          CFI EndBlock cfiPicker1271

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond1272 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1273 Using cfiCommon0
          CFI (cfiCond1273) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1273) CFA_SP SP+-2
          CFI (cfiCond1273) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1274 Using cfiCommon0
          CFI (cfiCond1274) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1274) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond1274) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1274) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1274) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1274) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1274) CFA_SP SP+-2
          CFI (cfiCond1274) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1275 Using cfiCommon1
          CFI (cfiPicker1275) NoFunction
          CFI (cfiPicker1275) Picker
        LCALL     ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_272:
        RET
          CFI EndBlock cfiCond1272
          CFI EndBlock cfiCond1273
          CFI EndBlock cfiCond1274
          CFI EndBlock cfiPicker1275

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine162:
          CFI Block cfiCond1276 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1277 Using cfiCommon0
          CFI (cfiCond1277) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1277) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_51
          CFI (cfiCond1277) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1277) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1277) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1277) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1277) CFA_SP SP+-4
          CFI (cfiCond1277) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1278 Using cfiCommon0
          CFI (cfiCond1278) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1278) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_52
          CFI (cfiCond1278) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1278) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1278) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1278) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1278) CFA_SP SP+-4
          CFI (cfiCond1278) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1279 Using cfiCommon0
          CFI (cfiCond1279) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1279) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_48
          CFI (cfiCond1279) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1279) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1279) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1279) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1279) CFA_SP SP+-4
          CFI (cfiCond1279) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1280 Using cfiCommon0
          CFI (cfiCond1280) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1280) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_49
          CFI (cfiCond1280) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1280) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1280) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1280) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1280) CFA_SP SP+-4
          CFI (cfiCond1280) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1281 Using cfiCommon1
          CFI (cfiPicker1281) NoFunction
          CFI (cfiPicker1281) Picker
        LCALL     ?Subroutine197 & 0xFFFF
??CrossCallReturnLabel_324:
        RET
          CFI EndBlock cfiCond1276
          CFI EndBlock cfiCond1277
          CFI EndBlock cfiCond1278
          CFI EndBlock cfiCond1279
          CFI EndBlock cfiCond1280
          CFI EndBlock cfiPicker1281

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine197:
          CFI Block cfiCond1282 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1283 Using cfiCommon0
          CFI (cfiCond1283) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1283) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_51
          CFI (cfiCond1283) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1283) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1283) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1283) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1283) CFA_SP SP+-6
          CFI (cfiCond1283) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1284 Using cfiCommon0
          CFI (cfiCond1284) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1284) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_52
          CFI (cfiCond1284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1284) CFA_SP SP+-6
          CFI (cfiCond1284) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1285 Using cfiCommon0
          CFI (cfiCond1285) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1285) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_48
          CFI (cfiCond1285) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1285) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1285) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1285) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1285) CFA_SP SP+-6
          CFI (cfiCond1285) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1286 Using cfiCommon0
          CFI (cfiCond1286) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1286) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_49
          CFI (cfiCond1286) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1286) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1286) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1286) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1286) CFA_SP SP+-6
          CFI (cfiCond1286) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1287 Using cfiCommon0
          CFI (cfiCond1287) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_42
          CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1287) CFA_SP SP+-6
          CFI (cfiCond1287) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1288 Using cfiCommon0
          CFI (cfiCond1288) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1288) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_43
          CFI (cfiCond1288) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1288) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1288) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1288) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1288) CFA_SP SP+-6
          CFI (cfiCond1288) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1289 Using cfiCommon0
          CFI (cfiCond1289) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1289) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_38
          CFI (cfiCond1289) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1289) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1289) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1289) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1289) CFA_SP SP+-6
          CFI (cfiCond1289) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1290 Using cfiCommon0
          CFI (cfiCond1290) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1290) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_39
          CFI (cfiCond1290) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1290) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1290) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1290) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1290) CFA_SP SP+-6
          CFI (cfiCond1290) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1291 Using cfiCommon1
          CFI (cfiPicker1291) NoFunction
          CFI (cfiPicker1291) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1282
          CFI EndBlock cfiCond1283
          CFI EndBlock cfiCond1284
          CFI EndBlock cfiCond1285
          CFI EndBlock cfiCond1286
          CFI EndBlock cfiCond1287
          CFI EndBlock cfiCond1288
          CFI EndBlock cfiCond1289
          CFI EndBlock cfiCond1290
          CFI EndBlock cfiPicker1291

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond1292 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1293 Using cfiCommon0
          CFI (cfiCond1293) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1293) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond1293) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1293) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1293) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1293) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1293) CFA_SP SP+-2
          CFI (cfiCond1293) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1294 Using cfiCommon1
          CFI (cfiPicker1294) NoFunction
          CFI (cfiPicker1294) Picker
        LCALL     ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_273:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1292
          CFI EndBlock cfiCond1293
          CFI EndBlock cfiPicker1294

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond1295 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1296 Using cfiCommon0
          CFI (cfiCond1296) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1296) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond1296) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1296) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1296) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1296) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1296) CFA_SP SP+-2
          CFI (cfiCond1296) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1297 Using cfiCommon1
          CFI (cfiPicker1297) NoFunction
          CFI (cfiPicker1297) Picker
        LCALL     ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_263:
        RET
          CFI EndBlock cfiCond1295
          CFI EndBlock cfiCond1296
          CFI EndBlock cfiPicker1297

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine156:
          CFI Block cfiCond1298 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1299 Using cfiCommon0
          CFI (cfiCond1299) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1299) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_43
          CFI (cfiCond1299) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1299) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1299) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1299) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1299) CFA_SP SP+-4
          CFI (cfiCond1299) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1300 Using cfiCommon0
          CFI (cfiCond1300) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_38
          CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1300) CFA_SP SP+-4
          CFI (cfiCond1300) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1301 Using cfiCommon0
          CFI (cfiCond1301) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1301) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_39
          CFI (cfiCond1301) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1301) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1301) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1301) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1301) CFA_SP SP+-4
          CFI (cfiCond1301) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1302 Using cfiCommon1
          CFI (cfiPicker1302) NoFunction
          CFI (cfiPicker1302) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine197 & 0xFFFF
??CrossCallReturnLabel_325:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1298
          CFI EndBlock cfiCond1299
          CFI EndBlock cfiCond1300
          CFI EndBlock cfiCond1301
          CFI EndBlock cfiPicker1302

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond1303 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1304 Using cfiCommon0
          CFI (cfiCond1304) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1304) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond1304) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1304) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1304) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1304) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1304) CFA_SP SP+-2
          CFI (cfiCond1304) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1305 Using cfiCommon1
          CFI (cfiPicker1305) NoFunction
          CFI (cfiPicker1305) Picker
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_264:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1303
          CFI EndBlock cfiCond1304
          CFI EndBlock cfiPicker1305
// 2568 
// 2569 /*********************************************************************
// 2570  * @fn          ZDO_ParesPowerDescRsp
// 2571  *
// 2572  * @brief       This function parses the Power_Desc_rsp message.
// 2573  *
// 2574  * @param       inMsg  - incoming message
// 2575  * @param       pNPRsp - place to parse the message into
// 2576  *
// 2577  * @return      none
// 2578  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2579 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock1306 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 2580 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 2581   uint8 *msg;
// 2582 
// 2583   msg = inMsg->asdu;
        LCALL     ??Subroutine272_0 & 0xFFFF
??CrossCallReturnLabel_684:
        LCALL     ?Subroutine107 & 0xFFFF
// 2584   pNPRsp->status = *msg++;
??CrossCallReturnLabel_172:
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_561:
        MOV       R2,DPL
        MOV       R3,DPH
// 2585   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R6
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ??Subroutine223_0 & 0xFFFF
// 2586 
// 2587   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_367:
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??ZDO_ParsePowerDescRsp_0 & 0xFFFF
// 2588   {
// 2589     msg += 2;
// 2590     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV       A,R2
        ADD       A,#0x2
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       A,R4
        ADD       A,#0x3
        CLR       A
        ADDC      A,R5
        INC       R4
        INC       R4
        INC       R4
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_178:
        MOV       A,#0x4
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,?V2
        ORL       A,?V0
        MOV       R0,A
        MOV       R1,?V3
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine223_0 & 0xFFFF
// 2591     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_368:
        MOV       A,R0
        ANL       A,#0xf0
        MOV       R0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       R6,A
        MOV       A,R0
        ORL       A,R6
        MOV       ?V0,A
        MOV       A,R1
        MOV       ?V1,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,?V0
        LCALL     ??Subroutine255_0 & 0xFFFF
// 2592     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_565:
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       A,?V0
        MOV       ?V2,A
        MOV       A,?V1
        ANL       A,#0xf
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_179:
        MOV       A,#0xc
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,?V3
        ORL       A,?V1
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,?V2
        LCALL     ??Subroutine223_0 & 0xFFFF
// 2593     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
??CrossCallReturnLabel_369:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       R0,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0xf0
        MOVX      @DPTR,A
        MOV       A,R0
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,R1
        MOVX      @DPTR,A
// 2594   }
// 2595 }
??ZDO_ParsePowerDescRsp_0:
        LJMP      ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock1306

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond1307 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1308 Using cfiCommon0
          CFI (cfiCond1308) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1308) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond1308) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1308) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1308) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1308) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1308) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1308) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1308) CFA_SP SP+-2
          CFI (cfiCond1308) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1309 Using cfiCommon1
          CFI (cfiPicker1309) NoFunction
          CFI (cfiPicker1309) Picker
        MOV       ?V3,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf
        MOV       ?V0,A
        MOV       ?V1,#0x0
        RET
          CFI EndBlock cfiCond1307
          CFI EndBlock cfiCond1308
          CFI EndBlock cfiPicker1309

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond1310 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1311 Using cfiCommon0
          CFI (cfiCond1311) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1311) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond1311) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1311) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1311) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1311) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1311) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1311) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1311) CFA_SP SP+-2
          CFI (cfiCond1311) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1312 Using cfiCommon1
          CFI (cfiPicker1312) NoFunction
          CFI (cfiPicker1312) Picker
        LCALL     ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_517:
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1310
          CFI EndBlock cfiCond1311
          CFI EndBlock cfiPicker1312
// 2596 
// 2597 /*********************************************************************
// 2598  * @fn          ZDO_ParseSimpleDescRsp
// 2599  *
// 2600  * @brief       This function parse the Simple_Desc_rsp message.
// 2601  *
// 2602  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 2603  *         in the SimpleDescriptionFormat_t structure are allocated
// 2604  *         and the calling function needs to free [osal_msg_free()]
// 2605  *         these buffers.
// 2606  *
// 2607  * @param       inMsg  - incoming message
// 2608  * @param       pSimpleDescRsp - place to parse the message into
// 2609  *
// 2610  * @return      none
// 2611  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2612 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock1313 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 2613 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2614   uint8 *msg;
// 2615 
// 2616   msg = inMsg->asdu;
        LCALL     ?Subroutine10 & 0xFFFF
// 2617   pSimpleDescRsp->status = *msg++;
// 2618   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2619   msg += sizeof ( uint16 );
// 2620   msg++; // Skip past the length field.
// 2621 
// 2622   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_3:
        JNZ       ??ZDO_ParseSimpleDescRsp_0
// 2623   {
// 2624     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV       A,R4
        ADD       A,#0x3
        MOV       R4,A
        JNC       ??ZDO_ParseSimpleDescRsp_1
        INC       R5
??ZDO_ParseSimpleDescRsp_1:
        MOV       A,R0
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??ZDO_ParseSimpleDescBuf::?relay`; Banked call to: ZDO_ParseSimpleDescBuf
// 2625   }
// 2626 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP      ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock1313

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond1314 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1315 Using cfiCommon0
          CFI (cfiCond1315) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1315) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1315) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1315) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1315) CFA_SP SP+-2
          CFI (cfiCond1315) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1316 Using cfiCommon1
          CFI (cfiPicker1316) NoFunction
          CFI (cfiPicker1316) Picker
        LCALL     ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_685:
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_294:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine198 & 0xFFFF
??CrossCallReturnLabel_329:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,R6
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1314
          CFI EndBlock cfiCond1315
          CFI EndBlock cfiPicker1316

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine180:
          CFI Block cfiCond1317 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1318 Using cfiCommon0
          CFI (cfiCond1318) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_132
          CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1318) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1318) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1318) CFA_SP SP+-4
          CFI (cfiCond1318) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1319 Using cfiCommon0
          CFI (cfiCond1319) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1319) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_2
          CFI (cfiCond1319) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1319) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1319) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1319) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1319) CFA_SP SP+-4
          CFI (cfiCond1319) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1320 Using cfiCommon0
          CFI (cfiCond1320) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1320) Conditional ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_3
          CFI (cfiCond1320) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1320) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1320) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1320) CFA_SP SP+-4
          CFI (cfiCond1320) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1321 Using cfiCommon1
          CFI (cfiPicker1321) NoFunction
          CFI (cfiPicker1321) Picker
        LCALL     ?Subroutine204 & 0xFFFF
??CrossCallReturnLabel_336:
        RET
          CFI EndBlock cfiCond1317
          CFI EndBlock cfiCond1318
          CFI EndBlock cfiCond1319
          CFI EndBlock cfiCond1320
          CFI EndBlock cfiPicker1321

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine204:
          CFI Block cfiCond1322 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1323 Using cfiCommon0
          CFI (cfiCond1323) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1323) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_75
          CFI (cfiCond1323) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1323) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1323) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1323) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1323) CFA_SP SP+-6
          CFI (cfiCond1323) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1324 Using cfiCommon0
          CFI (cfiCond1324) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1324) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_92
          CFI (cfiCond1324) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1324) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1324) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1324) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1324) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1324) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1324) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1324) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1324) CFA_SP SP+-6
          CFI (cfiCond1324) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1325 Using cfiCommon0
          CFI (cfiCond1325) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1325) Conditional ??CrossCallReturnLabel_337, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_93
          CFI (cfiCond1325) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1325) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1325) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1325) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1325) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1325) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1325) CFA_SP SP+-6
          CFI (cfiCond1325) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1326 Using cfiCommon0
          CFI (cfiCond1326) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1326) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_133
          CFI (cfiCond1326) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1326) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1326) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1326) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1326) CFA_SP SP+-6
          CFI (cfiCond1326) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1327 Using cfiCommon0
          CFI (cfiCond1327) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1327) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_132
          CFI (cfiCond1327) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1327) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1327) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1327) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1327) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1327) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1327) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1327) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1327) CFA_SP SP+-6
          CFI (cfiCond1327) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1328 Using cfiCommon0
          CFI (cfiCond1328) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1328) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_2
          CFI (cfiCond1328) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1328) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1328) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1328) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1328) CFA_SP SP+-6
          CFI (cfiCond1328) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1329 Using cfiCommon0
          CFI (cfiCond1329) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1329) Conditional ??CrossCallReturnLabel_336, ??CrossCallReturnLabel_294, ??CrossCallReturnLabel_3
          CFI (cfiCond1329) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1329) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1329) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1329) CFA_SP SP+-6
          CFI (cfiCond1329) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1330 Using cfiCommon1
          CFI (cfiPicker1330) NoFunction
          CFI (cfiPicker1330) Picker
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1322
          CFI EndBlock cfiCond1323
          CFI EndBlock cfiCond1324
          CFI EndBlock cfiCond1325
          CFI EndBlock cfiCond1326
          CFI EndBlock cfiCond1327
          CFI EndBlock cfiCond1328
          CFI EndBlock cfiCond1329
          CFI EndBlock cfiPicker1330
// 2627 
// 2628 /*********************************************************************
// 2629  * @fn          ZDO_ParseEPListRsp
// 2630  *
// 2631  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 2632  *
// 2633  * @param       inMsg  - incoming message
// 2634  *
// 2635  * @return      none
// 2636  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2637 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock1331 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 2638 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 2639   ZDO_ActiveEndpointRsp_t *pRsp;
// 2640   uint8 *msg;
// 2641   uint8 Status;
// 2642   uint8 cnt;
// 2643 
// 2644   msg = inMsg->asdu;
        LCALL     ??Subroutine263_0 & 0xFFFF
// 2645   Status = *msg++;
??CrossCallReturnLabel_639:
        MOV       ?V3,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 2646   cnt = msg[2];
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
// 2647 
// 2648   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ??Subroutine269_0 & 0xFFFF
??CrossCallReturnLabel_663:
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2649   if ( pRsp )
        MOV       A,R2
        ORL       A,?V1
        JZ        ??ZDO_ParseEPListRsp_0
// 2650   {
// 2651     pRsp->status = Status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V3
        MOVX      @DPTR,A
// 2652     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_345:
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        LCALL     ??Subroutine223_0 & 0xFFFF
// 2653     msg += sizeof( uint16 );
// 2654     pRsp->cnt = cnt;
??CrossCallReturnLabel_370:
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        LCALL     ?Subroutine46 & 0xFFFF
// 2655     msg++; // pass cnt
// 2656     osal_memcpy( pRsp->epList, msg, cnt );
// 2657   }
??CrossCallReturnLabel_65:
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,R0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R4,?V2
        MOV       R5,#0x0
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_666:
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2658 
// 2659   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        MOV       R2,?V0
        MOV       R3,?V1
          CFI EndBlock cfiBlock1331
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 2660 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock1332 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1332

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond1333 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1334 Using cfiCommon0
          CFI (cfiCond1334) Function ZDO_ParseEPListRsp
          CFI (cfiCond1334) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond1334) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1334) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1334) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1334) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1334) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1334) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1334) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1334) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1334) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1334) CFA_SP SP+-2
          CFI (cfiCond1334) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1335 Using cfiCommon1
          CFI (cfiPicker1335) NoFunction
          CFI (cfiPicker1335) Picker
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_267:
        RET
          CFI EndBlock cfiCond1333
          CFI EndBlock cfiCond1334
          CFI EndBlock cfiPicker1335

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine160:
          CFI Block cfiCond1336 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1337 Using cfiCommon0
          CFI (cfiCond1337) Function ZDO_ParseEPListRsp
          CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_65
          CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1337) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1337) CFA_SP SP+-4
          CFI (cfiCond1337) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1338 Using cfiCommon0
          CFI (cfiCond1338) Function ZDO_ParseAddrRsp
          CFI (cfiCond1338) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_55
          CFI (cfiCond1338) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1338) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1338) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1338) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1338) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1338) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1338) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1338) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1338) CFA_SP SP+-4
          CFI (cfiCond1338) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1339 Using cfiCommon0
          CFI (cfiCond1339) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1339) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_56
          CFI (cfiCond1339) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1339) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1339) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1339) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1339) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1339) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1339) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1339) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1339) CFA_SP SP+-4
          CFI (cfiCond1339) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1340 Using cfiCommon1
          CFI (cfiPicker1340) NoFunction
          CFI (cfiPicker1340) Picker
        LCALL     ?Subroutine199 & 0xFFFF
??CrossCallReturnLabel_330:
        RET
          CFI EndBlock cfiCond1336
          CFI EndBlock cfiCond1337
          CFI EndBlock cfiCond1338
          CFI EndBlock cfiCond1339
          CFI EndBlock cfiPicker1340

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine199:
          CFI Block cfiCond1341 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1342 Using cfiCommon0
          CFI (cfiCond1342) Function ZDO_ParseEPListRsp
          CFI (cfiCond1342) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_65
          CFI (cfiCond1342) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1342) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1342) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1342) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1342) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1342) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1342) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1342) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1342) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1342) CFA_SP SP+-6
          CFI (cfiCond1342) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1343 Using cfiCommon0
          CFI (cfiCond1343) Function ZDO_ParseAddrRsp
          CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_55
          CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1343) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1343) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1343) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1343) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1343) CFA_SP SP+-6
          CFI (cfiCond1343) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1344 Using cfiCommon0
          CFI (cfiCond1344) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_330, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_56
          CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1344) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1344) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1344) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1344) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1344) CFA_SP SP+-6
          CFI (cfiCond1344) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1345 Using cfiCommon0
          CFI (cfiCond1345) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1345) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_15
          CFI (cfiCond1345) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1345) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1345) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1345) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1345) CFA_SP SP+-6
          CFI (cfiCond1345) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1346 Using cfiCommon0
          CFI (cfiCond1346) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1346) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_16
          CFI (cfiCond1346) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1346) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1346) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1346) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1346) CFA_SP SP+-6
          CFI (cfiCond1346) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1347 Using cfiCommon0
          CFI (cfiCond1347) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_17
          CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1347) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1347) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1347) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1347) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1347) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1347) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1347) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1347) CFA_SP SP+-6
          CFI (cfiCond1347) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1348 Using cfiCommon0
          CFI (cfiCond1348) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1348) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_36
          CFI (cfiCond1348) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1348) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1348) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1348) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1348) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1348) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1348) CFA_SP SP+-6
          CFI (cfiCond1348) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1349 Using cfiCommon0
          CFI (cfiCond1349) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1349) Conditional ??CrossCallReturnLabel_331, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_37
          CFI (cfiCond1349) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1349) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1349) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1349) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1349) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1349) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1349) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1349) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1349) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1349) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1349) CFA_SP SP+-6
          CFI (cfiCond1349) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1350 Using cfiCommon1
          CFI (cfiPicker1350) NoFunction
          CFI (cfiPicker1350) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1341
          CFI EndBlock cfiCond1342
          CFI EndBlock cfiCond1343
          CFI EndBlock cfiCond1344
          CFI EndBlock cfiCond1345
          CFI EndBlock cfiCond1346
          CFI EndBlock cfiCond1347
          CFI EndBlock cfiCond1348
          CFI EndBlock cfiCond1349
          CFI EndBlock cfiPicker1350
// 2661 
// 2662 /*********************************************************************
// 2663  * @fn          ZDO_ParseServerDiscRsp
// 2664  *
// 2665  * @brief       Parse the Server_Discovery_rsp message.
// 2666  *
// 2667  * @param       inMsg - incoming message.
// 2668  * @param       pRsp - place to put the parsed information.
// 2669  *
// 2670  * @return      none
// 2671  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2672 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock1351 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 2673 {
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2674   pRsp->status = inMsg->asdu[0];
        MOV       A,R2
        ADD       A,#0x13
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_615:
        MOV       DPH,A
        MOV       DPL,R2
        LCALL     ??Subroutine271_0 & 0xFFFF
??CrossCallReturnLabel_677:
        LCALL     ?Subroutine33 & 0xFFFF
// 2675   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_47:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ??Subroutine273_0 & 0xFFFF
??CrossCallReturnLabel_694:
        INC       DPTR
        LCALL     ??Subroutine223_0 & 0xFFFF
// 2676 }
??CrossCallReturnLabel_371:
        LJMP      ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock1351

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine209:
          CFI Block cfiCond1352 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_617
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1353 Using cfiCommon0
          CFI (cfiCond1353) Function ZDMatchSendState
          CFI (cfiCond1353) Conditional ??CrossCallReturnLabel_618
          CFI (cfiCond1353) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1353) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1353) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1353) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1353) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1353) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1353) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1353) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1353) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1353) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1353) CFA_SP SP+-2
          CFI (cfiCond1353) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1354 Using cfiCommon1
          CFI (cfiPicker1354) NoFunction
          CFI (cfiPicker1354) Picker
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond1352
          CFI EndBlock cfiCond1353
          CFI EndBlock cfiPicker1354
        REQUIRE ??Subroutine259_0
        ; // Fall through to label ??Subroutine259_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine259_0:
          CFI Block cfiCond1355 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1356 Using cfiCommon0
          CFI (cfiCond1356) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1356) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_111
          CFI (cfiCond1356) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1356) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1356) CFA_SP SP+-11
          CFI Block cfiCond1357 Using cfiCommon0
          CFI (cfiCond1357) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1357) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_108
          CFI (cfiCond1357) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1357) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1357) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1357) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1357) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1357) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1357) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1357) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1357) CFA_SP SP+-6
          CFI (cfiCond1357) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1358 Using cfiCommon0
          CFI (cfiCond1358) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1358) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_109
          CFI (cfiCond1358) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1358) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1358) CFA_SP SP+-11
          CFI Block cfiCond1359 Using cfiCommon0
          CFI (cfiCond1359) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1359) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_106
          CFI (cfiCond1359) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1359) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1359) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1359) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1359) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1359) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1359) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1359) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1359) CFA_SP SP+-6
          CFI (cfiCond1359) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1360 Using cfiCommon0
          CFI (cfiCond1360) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1360) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_107
          CFI (cfiCond1360) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1360) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1360) CFA_SP SP+-11
          CFI Block cfiCond1361 Using cfiCommon0
          CFI (cfiCond1361) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1361) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_104
          CFI (cfiCond1361) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1361) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1361) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1361) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1361) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1361) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1361) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1361) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1361) CFA_SP SP+-6
          CFI (cfiCond1361) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1362 Using cfiCommon0
          CFI (cfiCond1362) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1362) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_105
          CFI (cfiCond1362) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1362) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1362) CFA_SP SP+-11
          CFI Block cfiCond1363 Using cfiCommon0
          CFI (cfiCond1363) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1363) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_173
          CFI (cfiCond1363) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1363) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1363) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1363) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1363) CFA_SP SP+-6
          CFI (cfiCond1363) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1364 Using cfiCommon0
          CFI (cfiCond1364) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1364) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_172
          CFI (cfiCond1364) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1364) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1364) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1364) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1364) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1364) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1364) CFA_SP SP+-6
          CFI (cfiCond1364) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1365 Using cfiCommon0
          CFI (cfiCond1365) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1365) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_96
          CFI (cfiCond1365) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1365) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1365) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1365) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1365) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1365) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1365) CFA_SP SP+-6
          CFI (cfiCond1365) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1366 Using cfiCommon0
          CFI (cfiCond1366) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1366) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_97
          CFI (cfiCond1366) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1366) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1366) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1366) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1366) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1366) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1366) CFA_SP SP+-6
          CFI (cfiCond1366) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1367 Using cfiCommon0
          CFI (cfiCond1367) Function ZDO_CopyMatchInfo
          CFI (cfiCond1367) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_476
          CFI (cfiCond1367) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1367) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1367) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1367) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1367) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1367) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1367) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1367) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1367) CFA_SP SP+-6
          CFI (cfiCond1367) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1368 Using cfiCommon0
          CFI (cfiCond1368) Function ZDO_CopyMatchInfo
          CFI (cfiCond1368) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_477
          CFI (cfiCond1368) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1368) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1368) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1368) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1368) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1368) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1368) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1368) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1368) CFA_SP SP+-6
          CFI (cfiCond1368) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1369 Using cfiCommon0
          CFI (cfiCond1369) Function ZDO_CopyMatchInfo
          CFI (cfiCond1369) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_474
          CFI (cfiCond1369) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1369) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1369) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1369) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1369) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1369) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1369) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1369) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1369) CFA_SP SP+-6
          CFI (cfiCond1369) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1370 Using cfiCommon0
          CFI (cfiCond1370) Function ZDO_CopyMatchInfo
          CFI (cfiCond1370) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_475
          CFI (cfiCond1370) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1370) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1370) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1370) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1370) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1370) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1370) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1370) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1370) CFA_SP SP+-6
          CFI (cfiCond1370) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1371 Using cfiCommon0
          CFI (cfiCond1371) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1371) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_472
          CFI (cfiCond1371) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1371) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1371) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1371) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1371) CFA_SP SP+-6
          CFI (cfiCond1371) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1372 Using cfiCommon0
          CFI (cfiCond1372) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1372) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_473
          CFI (cfiCond1372) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1372) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1372) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1372) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1372) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1372) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1372) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1372) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1372) CFA_SP SP+-6
          CFI (cfiCond1372) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1373 Using cfiCommon0
          CFI (cfiCond1373) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1373) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_450
          CFI (cfiCond1373) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1373) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1373) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1373) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1373) CFA_SP SP+-6
          CFI (cfiCond1373) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1374 Using cfiCommon0
          CFI (cfiCond1374) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1374) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_451
          CFI (cfiCond1374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1374) CFA_SP SP+-6
          CFI (cfiCond1374) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1375 Using cfiCommon0
          CFI (cfiCond1375) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1375) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_452
          CFI (cfiCond1375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1375) CFA_SP SP+-6
          CFI (cfiCond1375) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1376 Using cfiCommon0
          CFI (cfiCond1376) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1376) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_453
          CFI (cfiCond1376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1376) CFA_SP SP+-6
          CFI (cfiCond1376) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1377 Using cfiCommon0
          CFI (cfiCond1377) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_454
          CFI (cfiCond1377) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1377) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1377) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1377) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1377) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1377) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1377) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1377) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1377) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1377) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1377) CFA_SP SP+-6
          CFI (cfiCond1377) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1378 Using cfiCommon0
          CFI (cfiCond1378) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1378) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_455
          CFI (cfiCond1378) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1378) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1378) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1378) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1378) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1378) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1378) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1378) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1378) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1378) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1378) CFA_SP SP+-6
          CFI (cfiCond1378) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1379 Using cfiCommon0
          CFI (cfiCond1379) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1379) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_456
          CFI (cfiCond1379) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1379) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1379) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1379) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1379) CFA_SP SP+-6
          CFI (cfiCond1379) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1380 Using cfiCommon0
          CFI (cfiCond1380) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1380) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_457
          CFI (cfiCond1380) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1380) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1380) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1380) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1380) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1380) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1380) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1380) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1380) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1380) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1380) CFA_SP SP+-6
          CFI (cfiCond1380) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1381 Using cfiCommon0
          CFI (cfiCond1381) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1381) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_458
          CFI (cfiCond1381) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1381) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1381) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1381) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1381) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1381) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1381) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1381) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1381) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1381) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1381) CFA_SP SP+-6
          CFI (cfiCond1381) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1382 Using cfiCommon0
          CFI (cfiCond1382) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1382) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_459
          CFI (cfiCond1382) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1382) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1382) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1382) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1382) CFA_SP SP+-6
          CFI (cfiCond1382) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1383 Using cfiCommon0
          CFI (cfiCond1383) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1383) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_460
          CFI (cfiCond1383) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1383) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1383) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1383) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1383) CFA_SP SP+-6
          CFI (cfiCond1383) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1384 Using cfiCommon0
          CFI (cfiCond1384) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1384) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_461
          CFI (cfiCond1384) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1384) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1384) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1384) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1384) CFA_SP SP+-6
          CFI (cfiCond1384) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1385 Using cfiCommon0
          CFI (cfiCond1385) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1385) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_462
          CFI (cfiCond1385) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1385) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1385) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1385) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1385) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1385) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1385) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1385) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1385) CFA_SP SP+-6
          CFI (cfiCond1385) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1386 Using cfiCommon0
          CFI (cfiCond1386) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1386) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_463
          CFI (cfiCond1386) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1386) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1386) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1386) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1386) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1386) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1386) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1386) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1386) CFA_SP SP+-6
          CFI (cfiCond1386) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1387 Using cfiCommon0
          CFI (cfiCond1387) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1387) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_464
          CFI (cfiCond1387) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1387) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1387) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1387) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1387) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1387) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1387) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1387) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1387) CFA_SP SP+-6
          CFI (cfiCond1387) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1388 Using cfiCommon0
          CFI (cfiCond1388) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1388) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_465
          CFI (cfiCond1388) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1388) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1388) CFA_SP SP+-11
          CFI Block cfiCond1389 Using cfiCommon0
          CFI (cfiCond1389) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1389) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_466
          CFI (cfiCond1389) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1389) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1389) CFA_SP SP+-11
          CFI Block cfiCond1390 Using cfiCommon0
          CFI (cfiCond1390) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1390) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_467
          CFI (cfiCond1390) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1390) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1390) CFA_SP SP+-11
          CFI Block cfiCond1391 Using cfiCommon0
          CFI (cfiCond1391) Function ZDMatchSendState
          CFI (cfiCond1391) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_468
          CFI (cfiCond1391) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1391) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1391) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1391) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1391) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1391) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1391) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1391) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1391) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1391) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1391) CFA_SP SP+-6
          CFI (cfiCond1391) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1392 Using cfiCommon0
          CFI (cfiCond1392) Function ZDMatchSendState
          CFI (cfiCond1392) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_469
          CFI (cfiCond1392) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1392) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1392) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1392) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1392) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1392) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1392) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1392) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1392) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1392) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1392) CFA_SP SP+-6
          CFI (cfiCond1392) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1393 Using cfiCommon0
          CFI (cfiCond1393) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1393) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_470
          CFI (cfiCond1393) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1393) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1393) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1393) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1393) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1393) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1393) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1393) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1393) CFA_SP SP+-6
          CFI (cfiCond1393) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1394 Using cfiCommon0
          CFI (cfiCond1394) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1394) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_471
          CFI (cfiCond1394) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1394) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1394) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1394) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1394) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1394) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1394) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1394) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1394) CFA_SP SP+-6
          CFI (cfiCond1394) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1395 Using cfiCommon0
          CFI (cfiCond1395) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1395) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_557
          CFI (cfiCond1395) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1395) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1395) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1395) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1395) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1395) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1395) CFA_SP SP+-4
          CFI (cfiCond1395) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1396 Using cfiCommon0
          CFI (cfiCond1396) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1396) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_98
          CFI (cfiCond1396) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1396) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1396) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1396) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1396) CFA_SP SP+-6
          CFI (cfiCond1396) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1397 Using cfiCommon0
          CFI (cfiCond1397) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1397) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_99
          CFI (cfiCond1397) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1397) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1397) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1397) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1397) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1397) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1397) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1397) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1397) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1397) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1397) CFA_SP SP+-6
          CFI (cfiCond1397) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1398 Using cfiCommon0
          CFI (cfiCond1398) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1398) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_556
          CFI (cfiCond1398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1398) CFA_SP SP+-4
          CFI (cfiCond1398) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1399 Using cfiCommon0
          CFI (cfiCond1399) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_615
          CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1399) CFA_SP SP+-2
          CFI (cfiCond1399) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1400 Using cfiCommon0
          CFI (cfiCond1400) Function ZDO_ParseAddrRsp
          CFI (cfiCond1400) Conditional ??CrossCallReturnLabel_616, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_148
          CFI (cfiCond1400) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1400) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1400) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1400) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1400) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1400) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1400) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1400) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1400) CFA_SP SP+-6
          CFI (cfiCond1400) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1401 Using cfiCommon0
          CFI (cfiCond1401) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1401) Conditional ??CrossCallReturnLabel_616, ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_149
          CFI (cfiCond1401) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1401) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1401) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1401) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1401) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1401) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1401) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1401) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1401) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1401) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1401) CFA_SP SP+-6
          CFI (cfiCond1401) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1402 Using cfiCommon0
          CFI (cfiCond1402) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1402) Conditional ??CrossCallReturnLabel_616, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_4
          CFI (cfiCond1402) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1402) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1402) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1402) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1402) CFA_SP SP+-8
          CFI (cfiCond1402) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1403 Using cfiCommon0
          CFI (cfiCond1403) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_616, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_5
          CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1403) CFA_SP SP+-8
          CFI (cfiCond1403) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1404 Using cfiCommon0
          CFI (cfiCond1404) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_616, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_100
          CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1404) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1404) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1404) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1404) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1404) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1404) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1404) CFA_SP SP+-8
          CFI (cfiCond1404) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1405 Using cfiCommon0
          CFI (cfiCond1405) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1405) Conditional ??CrossCallReturnLabel_616, ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_101
          CFI (cfiCond1405) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1405) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1405) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1405) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1405) CFA_SP SP+-8
          CFI (cfiCond1405) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1406 Using cfiCommon0
          CFI (cfiCond1406) Function ZDMatchSendState
          CFI (cfiCond1406) Conditional ??CrossCallReturnLabel_617
          CFI (cfiCond1406) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1406) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1406) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1406) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1406) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1406) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1406) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1406) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1406) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1406) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1406) CFA_SP SP+-2
          CFI (cfiCond1406) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1407 Using cfiCommon0
          CFI (cfiCond1407) Function ZDMatchSendState
          CFI (cfiCond1407) Conditional ??CrossCallReturnLabel_618
          CFI (cfiCond1407) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1407) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1407) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1407) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1407) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1407) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1407) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1407) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1407) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1407) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1407) CFA_SP SP+-2
          CFI (cfiCond1407) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1408 Using cfiCommon1
          CFI (cfiPicker1408) NoFunction
          CFI (cfiPicker1408) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1355
          CFI EndBlock cfiCond1356
          CFI EndBlock cfiCond1357
          CFI EndBlock cfiCond1358
          CFI EndBlock cfiCond1359
          CFI EndBlock cfiCond1360
          CFI EndBlock cfiCond1361
          CFI EndBlock cfiCond1362
          CFI EndBlock cfiCond1363
          CFI EndBlock cfiCond1364
          CFI EndBlock cfiCond1365
          CFI EndBlock cfiCond1366
          CFI EndBlock cfiCond1367
          CFI EndBlock cfiCond1368
          CFI EndBlock cfiCond1369
          CFI EndBlock cfiCond1370
          CFI EndBlock cfiCond1371
          CFI EndBlock cfiCond1372
          CFI EndBlock cfiCond1373
          CFI EndBlock cfiCond1374
          CFI EndBlock cfiCond1375
          CFI EndBlock cfiCond1376
          CFI EndBlock cfiCond1377
          CFI EndBlock cfiCond1378
          CFI EndBlock cfiCond1379
          CFI EndBlock cfiCond1380
          CFI EndBlock cfiCond1381
          CFI EndBlock cfiCond1382
          CFI EndBlock cfiCond1383
          CFI EndBlock cfiCond1384
          CFI EndBlock cfiCond1385
          CFI EndBlock cfiCond1386
          CFI EndBlock cfiCond1387
          CFI EndBlock cfiCond1388
          CFI EndBlock cfiCond1389
          CFI EndBlock cfiCond1390
          CFI EndBlock cfiCond1391
          CFI EndBlock cfiCond1392
          CFI EndBlock cfiCond1393
          CFI EndBlock cfiCond1394
          CFI EndBlock cfiCond1395
          CFI EndBlock cfiCond1396
          CFI EndBlock cfiCond1397
          CFI EndBlock cfiCond1398
          CFI EndBlock cfiCond1399
          CFI EndBlock cfiCond1400
          CFI EndBlock cfiCond1401
          CFI EndBlock cfiCond1402
          CFI EndBlock cfiCond1403
          CFI EndBlock cfiCond1404
          CFI EndBlock cfiCond1405
          CFI EndBlock cfiCond1406
          CFI EndBlock cfiCond1407
          CFI EndBlock cfiPicker1408

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond1409 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1410 Using cfiCommon0
          CFI (cfiCond1410) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1410) CFA_SP SP+-2
          CFI (cfiCond1410) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1411 Using cfiCommon1
          CFI (cfiPicker1411) NoFunction
          CFI (cfiPicker1411) Picker
        LCALL     ?Subroutine198 & 0xFFFF
??CrossCallReturnLabel_327:
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_552:
        RET
          CFI EndBlock cfiCond1409
          CFI EndBlock cfiCond1410
          CFI EndBlock cfiPicker1411

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine198:
          CFI Block cfiCond1412 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1413 Using cfiCommon0
          CFI (cfiCond1413) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1413) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_261, ??CrossCallReturnLabel_41
          CFI (cfiCond1413) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1413) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1413) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1413) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1413) CFA_SP SP+-6
          CFI (cfiCond1413) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1414 Using cfiCommon0
          CFI (cfiCond1414) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1414) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_25
          CFI (cfiCond1414) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1414) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1414) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1414) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1414) CFA_SP SP+-6
          CFI (cfiCond1414) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1415 Using cfiCommon0
          CFI (cfiCond1415) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1415) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_26
          CFI (cfiCond1415) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1415) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1415) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1415) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1415) CFA_SP SP+-6
          CFI (cfiCond1415) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1416 Using cfiCommon0
          CFI (cfiCond1416) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1416) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_2
          CFI (cfiCond1416) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1416) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1416) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1416) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1416) CFA_SP SP+-4
          CFI (cfiCond1416) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1417 Using cfiCommon0
          CFI (cfiCond1417) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1417) Conditional ??CrossCallReturnLabel_329, ??CrossCallReturnLabel_3
          CFI (cfiCond1417) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1417) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1417) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1417) CFA_SP SP+-4
          CFI (cfiCond1417) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1418 Using cfiCommon0
          CFI (cfiCond1418) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1418) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_46
          CFI (cfiCond1418) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1418) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1418) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1418) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1418) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1418) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1418) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1418) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1418) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1418) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1418) CFA_SP SP+-4
          CFI (cfiCond1418) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1419 Using cfiCommon0
          CFI (cfiCond1419) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1419) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_47
          CFI (cfiCond1419) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1419) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1419) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1419) CFA_SP SP+-4
          CFI (cfiCond1419) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1420 Using cfiCommon0
          CFI (cfiCond1420) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1420) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_60
          CFI (cfiCond1420) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1420) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1420) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1420) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1420) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1420) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1420) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1420) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1420) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1420) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1420) CFA_SP SP+-4
          CFI (cfiCond1420) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1421 Using cfiCommon0
          CFI (cfiCond1421) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1421) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_61
          CFI (cfiCond1421) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1421) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1421) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1421) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1421) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1421) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1421) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1421) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1421) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1421) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1421) CFA_SP SP+-4
          CFI (cfiCond1421) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1422 Using cfiCommon1
          CFI (cfiPicker1422) NoFunction
          CFI (cfiPicker1422) Picker
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond1412
          CFI EndBlock cfiCond1413
          CFI EndBlock cfiCond1414
          CFI EndBlock cfiCond1415
          CFI EndBlock cfiCond1416
          CFI EndBlock cfiCond1417
          CFI EndBlock cfiCond1418
          CFI EndBlock cfiCond1419
          CFI EndBlock cfiCond1420
          CFI EndBlock cfiCond1421
          CFI EndBlock cfiPicker1422
// 2677 
// 2678 /*********************************************************************
// 2679  * @fn          ZDO_ParseMgmtLqiRsp
// 2680  *
// 2681  * @brief       This function parses the incoming Management
// 2682  *              LQI response
// 2683  *
// 2684  * @param       inMsg - incoming message
// 2685  *
// 2686  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2687  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2688  *          by the calling function [osal_mem_free()].
// 2689  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2690 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock1423 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 2691 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2692   ZDO_MgmtLqiRsp_t *pRsp;
// 2693   uint8 status;
// 2694   uint8 startIndex = 0;
        MOV       ?V6,#0x0
// 2695   uint8 neighborLqiCount = 0;
        MOV       ?V5,#0x0
// 2696   uint8 neighborLqiEntries = 0;
        MOV       ?V4,#0x0
// 2697   uint8 *msg;
// 2698 
// 2699   msg = inMsg->asdu;
        LCALL     ?Subroutine69 & 0xFFFF
// 2700 
// 2701   status = *msg++;
// 2702   if ( status == ZSuccess )
??CrossCallReturnLabel_112:
        JNZ       ??ZDO_ParseMgmtLqiRsp_0
// 2703   {
// 2704     neighborLqiEntries = *msg++;
        MOVX      A,@DPTR
        MOV       ?V4,A
// 2705     startIndex = *msg++;
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V6,A
// 2706     neighborLqiCount = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_0
        INC       R7
// 2707   }
// 2708 
// 2709   // Allocate a buffer big enough to handle the list.
// 2710   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 2711             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( neighborLqiItem_t )) );
??ZDO_ParseMgmtLqiRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V5
        MOV       B,#0xe
        LCALL     ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2712   if ( pRsp )
        MOV       A,R2
        ORL       A,?V3
        JZ        ??ZDO_ParseMgmtLqiRsp_1
// 2713   {
// 2714     uint8 x;
// 2715     neighborLqiItem_t *pList = pRsp->list;
        LCALL     ?Subroutine16 & 0xFFFF
// 2716     pRsp->status = status;
// 2717     pRsp->neighborLqiEntries = neighborLqiEntries;
// 2718     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_634:
        MOV       A,?V6
        LCALL     ??Subroutine267_0 & 0xFFFF
// 2719     pRsp->neighborLqiCount = neighborLqiCount;
??CrossCallReturnLabel_652:
        MOV       A,?V5
        MOVX      @DPTR,A
// 2720 
// 2721     for ( x = 0; x < neighborLqiCount; x++ )
        MOV       ?V4,#0x0
        SJMP      ??ZDO_ParseMgmtLqiRsp_2
// 2722     {
// 2723       osal_cpyExtAddr(pList->extPANId, msg);   //Copy extended PAN ID
??ZDO_ParseMgmtLqiRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_667:
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2724       msg += Z_EXTADDR_LEN;
// 2725 
// 2726       msg += Z_EXTADDR_LEN;  // Throwing away IEEE.
        MOV       A,R6
        ADD       A,#0x10
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_4
        INC       R7
// 2727       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtLqiRsp_4:
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_149:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine17 & 0xFFFF
// 2728       msg += 2 + 1 + 1 + 1;      // Skip DeviceType, RxOnIdle, Rlationship, PermitJoining and Depth
// 2729       pList->rxLqi = *msg++;
??CrossCallReturnLabel_17:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_249:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x6
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_5
        INC       R7
// 2730       pList->txQuality = 0;  // This is not specified OTA by ZigBee 1.1.
??ZDO_ParseMgmtLqiRsp_5:
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_228:
        CLR       A
        MOVX      @DPTR,A
// 2731       pList++;
        MOV       A,?V0
        ADD       A,#0xe
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmtLqiRsp_6
        INC       ?V1
// 2732     }
??ZDO_ParseMgmtLqiRsp_6:
        INC       ?V4
??ZDO_ParseMgmtLqiRsp_2:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V5
        JC        ??ZDO_ParseMgmtLqiRsp_3
// 2733   }
// 2734 
// 2735   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_1:
        LJMP      ?Subroutine3 & 0xFFFF
// 2736 }
          CFI EndBlock cfiBlock1423

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond1424 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1425 Using cfiCommon0
          CFI (cfiCond1425) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1425) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond1425) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1425) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1425) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1425) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1425) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1425) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1425) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1425) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1425) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1425) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1425) CFA_SP SP+-2
          CFI (cfiCond1425) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1426 Using cfiCommon0
          CFI (cfiCond1426) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1426) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond1426) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1426) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1426) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1426) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1426) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1426) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1426) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1426) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1426) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1426) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1426) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1427 Using cfiCommon1
          CFI (cfiPicker1427) NoFunction
          CFI (cfiPicker1427) Picker
        LCALL     ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_633:
        RET
          CFI EndBlock cfiCond1424
          CFI EndBlock cfiCond1425
          CFI EndBlock cfiCond1426
          CFI EndBlock cfiPicker1427

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine191:
          CFI Block cfiCond1428 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_225
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1429 Using cfiCommon0
          CFI (cfiCond1429) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1429) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_226
          CFI (cfiCond1429) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1429) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1429) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1429) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1429) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1429) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1429) CFA_SP SP+-4
          CFI (cfiCond1429) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1430 Using cfiCommon0
          CFI (cfiCond1430) Function ZDO_ParseAddrRsp
          CFI (cfiCond1430) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_227
          CFI (cfiCond1430) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1430) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1430) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1430) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1430) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1430) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1430) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1430) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1430) CFA_SP SP+-5
          CFI (cfiCond1430) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1431 Using cfiCommon0
          CFI (cfiCond1431) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1431) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_228
          CFI (cfiCond1431) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1431) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1431) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1431) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1431) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1431) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1431) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1431) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1431) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1431) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1431) CFA_SP SP+-4
          CFI (cfiCond1431) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1432 Using cfiCommon0
          CFI (cfiCond1432) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1432) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_229
          CFI (cfiCond1432) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1432) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1432) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1432) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1432) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1432) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1432) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1432) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1432) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1432) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1432) CFA_SP SP+-5
          CFI (cfiCond1432) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1433 Using cfiCommon1
          CFI (cfiPicker1433) NoFunction
          CFI (cfiPicker1433) Picker
        MOV       A,?V0
        ADD       A,#0xc
          CFI EndBlock cfiCond1428
          CFI EndBlock cfiCond1429
          CFI EndBlock cfiCond1430
          CFI EndBlock cfiCond1431
          CFI EndBlock cfiCond1432
          CFI EndBlock cfiPicker1433
        REQUIRE ??Subroutine260_0
        ; // Fall through to label ??Subroutine260_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine260_0:
          CFI Block cfiCond1434 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1435 Using cfiCommon0
          CFI (cfiCond1435) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1435) Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_248
          CFI (cfiCond1435) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1435) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1435) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1435) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1435) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1435) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1435) CFA_SP SP+-4
          CFI (cfiCond1435) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1436 Using cfiCommon0
          CFI (cfiCond1436) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1436) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_237
          CFI (cfiCond1436) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1436) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1436) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1436) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1436) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1436) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1436) CFA_SP SP+-4
          CFI (cfiCond1436) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1437 Using cfiCommon0
          CFI (cfiCond1437) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1437) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_238
          CFI (cfiCond1437) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1437) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1437) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1437) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1437) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1437) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1437) CFA_SP SP+-4
          CFI (cfiCond1437) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1438 Using cfiCommon0
          CFI (cfiCond1438) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1438) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_239
          CFI (cfiCond1438) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1438) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1438) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1438) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1438) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1438) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1438) CFA_SP SP+-4
          CFI (cfiCond1438) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1439 Using cfiCommon0
          CFI (cfiCond1439) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1439) Conditional ??CrossCallReturnLabel_626, ??CrossCallReturnLabel_219
          CFI (cfiCond1439) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1439) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1439) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1439) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1439) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1439) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1439) CFA_SP SP+-4
          CFI (cfiCond1439) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1440 Using cfiCommon0
          CFI (cfiCond1440) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1440) Conditional ??CrossCallReturnLabel_626, ??CrossCallReturnLabel_220
          CFI (cfiCond1440) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1440) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1440) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1440) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1440) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1440) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1440) CFA_SP SP+-4
          CFI (cfiCond1440) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1441 Using cfiCommon0
          CFI (cfiCond1441) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1441) Conditional ??CrossCallReturnLabel_624, ??CrossCallReturnLabel_156
          CFI (cfiCond1441) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1441) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1441) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1441) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1441) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1441) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1441) CFA_SP SP+-4
          CFI (cfiCond1441) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1442 Using cfiCommon0
          CFI (cfiCond1442) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1442) Conditional ??CrossCallReturnLabel_624, ??CrossCallReturnLabel_157
          CFI (cfiCond1442) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1442) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1442) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1442) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1442) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1442) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1442) CFA_SP SP+-4
          CFI (cfiCond1442) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1443 Using cfiCommon0
          CFI (cfiCond1443) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1443) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_221
          CFI (cfiCond1443) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1443) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1443) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1443) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1443) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1443) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1443) CFA_SP SP+-4
          CFI (cfiCond1443) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1444 Using cfiCommon0
          CFI (cfiCond1444) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1444) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_222
          CFI (cfiCond1444) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1444) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1444) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1444) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1444) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1444) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1444) CFA_SP SP+-4
          CFI (cfiCond1444) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1445 Using cfiCommon0
          CFI (cfiCond1445) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1445) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_223
          CFI (cfiCond1445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1445) CFA_SP SP+-5
          CFI (cfiCond1445) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1446 Using cfiCommon0
          CFI (cfiCond1446) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1446) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_224
          CFI (cfiCond1446) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1446) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1446) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1446) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1446) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1446) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1446) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1446) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1446) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1446) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1446) CFA_SP SP+-5
          CFI (cfiCond1446) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1447 Using cfiCommon0
          CFI (cfiCond1447) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1447) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_249
          CFI (cfiCond1447) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1447) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1447) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1447) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1447) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1447) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1447) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1447) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1447) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1447) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1447) CFA_SP SP+-5
          CFI (cfiCond1447) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1448 Using cfiCommon0
          CFI (cfiCond1448) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1448) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_250
          CFI (cfiCond1448) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1448) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1448) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1448) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1448) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1448) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1448) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1448) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1448) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1448) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1448) CFA_SP SP+-5
          CFI (cfiCond1448) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1449 Using cfiCommon0
          CFI (cfiCond1449) Function ZDO_ParseAddrRsp
          CFI (cfiCond1449) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_234
          CFI (cfiCond1449) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1449) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1449) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1449) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1449) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1449) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1449) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1449) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1449) CFA_SP SP+-4
          CFI (cfiCond1449) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1450 Using cfiCommon0
          CFI (cfiCond1450) Function ZDO_ParseAddrRsp
          CFI (cfiCond1450) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_235
          CFI (cfiCond1450) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1450) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1450) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1450) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1450) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1450) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1450) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1450) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1450) CFA_SP SP+-5
          CFI (cfiCond1450) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1451 Using cfiCommon0
          CFI (cfiCond1451) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1451) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_236
          CFI (cfiCond1451) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1451) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1451) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1451) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1451) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1451) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1451) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1451) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1451) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1451) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1451) CFA_SP SP+-5
          CFI (cfiCond1451) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1452 Using cfiCommon0
          CFI (cfiCond1452) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1452) Conditional ??CrossCallReturnLabel_625, ??CrossCallReturnLabel_204
          CFI (cfiCond1452) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1452) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1452) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1452) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1452) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1452) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1452) CFA_SP SP+-5
          CFI (cfiCond1452) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1453 Using cfiCommon0
          CFI (cfiCond1453) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1453) Conditional ??CrossCallReturnLabel_625, ??CrossCallReturnLabel_205
          CFI (cfiCond1453) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1453) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1453) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1453) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1453) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1453) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1453) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1453) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1453) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1453) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1453) CFA_SP SP+-5
          CFI (cfiCond1453) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1454 Using cfiCommon0
          CFI (cfiCond1454) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1454) Conditional ??CrossCallReturnLabel_623, ??CrossCallReturnLabel_98
          CFI (cfiCond1454) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1454) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1454) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1454) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1454) CFA_SP SP+-4
          CFI (cfiCond1454) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1455 Using cfiCommon0
          CFI (cfiCond1455) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1455) Conditional ??CrossCallReturnLabel_623, ??CrossCallReturnLabel_99
          CFI (cfiCond1455) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1455) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1455) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1455) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1455) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1455) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1455) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1455) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1455) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1455) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1455) CFA_SP SP+-4
          CFI (cfiCond1455) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1456 Using cfiCommon0
          CFI (cfiCond1456) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1456) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_225
          CFI (cfiCond1456) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1456) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1456) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1456) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1456) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1456) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1456) CFA_SP SP+-4
          CFI (cfiCond1456) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1457 Using cfiCommon0
          CFI (cfiCond1457) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1457) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_226
          CFI (cfiCond1457) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1457) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1457) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1457) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1457) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1457) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1457) CFA_SP SP+-4
          CFI (cfiCond1457) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1458 Using cfiCommon0
          CFI (cfiCond1458) Function ZDO_ParseAddrRsp
          CFI (cfiCond1458) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_227
          CFI (cfiCond1458) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1458) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1458) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1458) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1458) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1458) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1458) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1458) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1458) CFA_SP SP+-5
          CFI (cfiCond1458) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1459 Using cfiCommon0
          CFI (cfiCond1459) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1459) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_228
          CFI (cfiCond1459) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1459) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1459) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1459) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1459) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1459) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1459) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1459) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1459) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1459) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1459) CFA_SP SP+-4
          CFI (cfiCond1459) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1460 Using cfiCommon0
          CFI (cfiCond1460) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1460) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_229
          CFI (cfiCond1460) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1460) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1460) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1460) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1460) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1460) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1460) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1460) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1460) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1460) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1460) CFA_SP SP+-5
          CFI (cfiCond1460) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1461 Using cfiCommon1
          CFI (cfiPicker1461) NoFunction
          CFI (cfiPicker1461) Picker
        MOV       DPL,A
        CLR       A
          CFI EndBlock cfiCond1434
          CFI EndBlock cfiCond1435
          CFI EndBlock cfiCond1436
          CFI EndBlock cfiCond1437
          CFI EndBlock cfiCond1438
          CFI EndBlock cfiCond1439
          CFI EndBlock cfiCond1440
          CFI EndBlock cfiCond1441
          CFI EndBlock cfiCond1442
          CFI EndBlock cfiCond1443
          CFI EndBlock cfiCond1444
          CFI EndBlock cfiCond1445
          CFI EndBlock cfiCond1446
          CFI EndBlock cfiCond1447
          CFI EndBlock cfiCond1448
          CFI EndBlock cfiCond1449
          CFI EndBlock cfiCond1450
          CFI EndBlock cfiCond1451
          CFI EndBlock cfiCond1452
          CFI EndBlock cfiCond1453
          CFI EndBlock cfiCond1454
          CFI EndBlock cfiCond1455
          CFI EndBlock cfiCond1456
          CFI EndBlock cfiCond1457
          CFI EndBlock cfiCond1458
          CFI EndBlock cfiCond1459
          CFI EndBlock cfiCond1460
          CFI EndBlock cfiPicker1461
        REQUIRE ??Subroutine261_0
        ; // Fall through to label ??Subroutine261_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine261_0:
          CFI Block cfiCond1462 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_622, ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1463 Using cfiCommon0
          CFI (cfiCond1463) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1463) Conditional ??CrossCallReturnLabel_622, ??CrossCallReturnLabel_198
          CFI (cfiCond1463) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1463) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1463) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1463) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1463) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1463) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1463) CFA_SP SP+-4
          CFI (cfiCond1463) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1464 Using cfiCommon0
          CFI (cfiCond1464) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1464) Conditional ??CrossCallReturnLabel_622, ??CrossCallReturnLabel_199
          CFI (cfiCond1464) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1464) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1464) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1464) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1464) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1464) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1464) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1464) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1464) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1464) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1464) CFA_SP SP+-5
          CFI (cfiCond1464) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1465 Using cfiCommon0
          CFI (cfiCond1465) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1465) Conditional ??CrossCallReturnLabel_621, ??CrossCallReturnLabel_4
          CFI (cfiCond1465) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1465) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1465) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1465) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1465) CFA_SP SP+-4
          CFI (cfiCond1465) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1466 Using cfiCommon0
          CFI (cfiCond1466) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1466) Conditional ??CrossCallReturnLabel_621, ??CrossCallReturnLabel_5
          CFI (cfiCond1466) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1466) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1466) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1466) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1466) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1466) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1466) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1466) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1466) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1466) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1466) CFA_SP SP+-4
          CFI (cfiCond1466) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1467 Using cfiCommon0
          CFI (cfiCond1467) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1467) Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_247
          CFI (cfiCond1467) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1467) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1467) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1467) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1467) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1467) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1467) CFA_SP SP+-4
          CFI (cfiCond1467) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1468 Using cfiCommon0
          CFI (cfiCond1468) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1468) Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_248
          CFI (cfiCond1468) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1468) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1468) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1468) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1468) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1468) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1468) CFA_SP SP+-4
          CFI (cfiCond1468) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1469 Using cfiCommon0
          CFI (cfiCond1469) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1469) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_237
          CFI (cfiCond1469) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1469) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1469) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1469) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1469) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1469) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1469) CFA_SP SP+-4
          CFI (cfiCond1469) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1470 Using cfiCommon0
          CFI (cfiCond1470) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1470) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_238
          CFI (cfiCond1470) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1470) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1470) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1470) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1470) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1470) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1470) CFA_SP SP+-4
          CFI (cfiCond1470) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1471 Using cfiCommon0
          CFI (cfiCond1471) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1471) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_239
          CFI (cfiCond1471) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1471) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1471) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1471) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1471) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1471) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1471) CFA_SP SP+-4
          CFI (cfiCond1471) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1472 Using cfiCommon0
          CFI (cfiCond1472) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1472) Conditional ??CrossCallReturnLabel_626, ??CrossCallReturnLabel_219
          CFI (cfiCond1472) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1472) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1472) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1472) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1472) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1472) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1472) CFA_SP SP+-4
          CFI (cfiCond1472) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1473 Using cfiCommon0
          CFI (cfiCond1473) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1473) Conditional ??CrossCallReturnLabel_626, ??CrossCallReturnLabel_220
          CFI (cfiCond1473) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1473) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1473) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1473) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1473) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1473) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1473) CFA_SP SP+-4
          CFI (cfiCond1473) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1474 Using cfiCommon0
          CFI (cfiCond1474) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1474) Conditional ??CrossCallReturnLabel_624, ??CrossCallReturnLabel_156
          CFI (cfiCond1474) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1474) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1474) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1474) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1474) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1474) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1474) CFA_SP SP+-4
          CFI (cfiCond1474) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1475 Using cfiCommon0
          CFI (cfiCond1475) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1475) Conditional ??CrossCallReturnLabel_624, ??CrossCallReturnLabel_157
          CFI (cfiCond1475) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1475) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1475) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1475) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1475) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1475) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1475) CFA_SP SP+-4
          CFI (cfiCond1475) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1476 Using cfiCommon0
          CFI (cfiCond1476) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1476) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_221
          CFI (cfiCond1476) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1476) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1476) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1476) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1476) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1476) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1476) CFA_SP SP+-4
          CFI (cfiCond1476) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1477 Using cfiCommon0
          CFI (cfiCond1477) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1477) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_222
          CFI (cfiCond1477) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1477) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1477) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1477) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1477) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1477) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1477) CFA_SP SP+-4
          CFI (cfiCond1477) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1478 Using cfiCommon0
          CFI (cfiCond1478) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1478) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_223
          CFI (cfiCond1478) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1478) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1478) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1478) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1478) CFA_SP SP+-5
          CFI (cfiCond1478) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1479 Using cfiCommon0
          CFI (cfiCond1479) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1479) Conditional ??CrossCallReturnLabel_627, ??CrossCallReturnLabel_224
          CFI (cfiCond1479) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1479) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1479) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1479) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1479) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1479) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1479) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1479) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1479) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1479) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1479) CFA_SP SP+-5
          CFI (cfiCond1479) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1480 Using cfiCommon0
          CFI (cfiCond1480) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1480) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_249
          CFI (cfiCond1480) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1480) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1480) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1480) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1480) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1480) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1480) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1480) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1480) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1480) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1480) CFA_SP SP+-5
          CFI (cfiCond1480) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1481 Using cfiCommon0
          CFI (cfiCond1481) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1481) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_250
          CFI (cfiCond1481) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1481) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1481) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1481) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1481) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1481) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1481) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1481) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1481) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1481) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1481) CFA_SP SP+-5
          CFI (cfiCond1481) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1482 Using cfiCommon0
          CFI (cfiCond1482) Function ZDO_ParseAddrRsp
          CFI (cfiCond1482) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_234
          CFI (cfiCond1482) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1482) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1482) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1482) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1482) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1482) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1482) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1482) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1482) CFA_SP SP+-4
          CFI (cfiCond1482) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1483 Using cfiCommon0
          CFI (cfiCond1483) Function ZDO_ParseAddrRsp
          CFI (cfiCond1483) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_235
          CFI (cfiCond1483) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1483) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1483) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1483) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1483) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1483) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1483) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1483) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1483) CFA_SP SP+-5
          CFI (cfiCond1483) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1484 Using cfiCommon0
          CFI (cfiCond1484) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1484) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_236
          CFI (cfiCond1484) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1484) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1484) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1484) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1484) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1484) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1484) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1484) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1484) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1484) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1484) CFA_SP SP+-5
          CFI (cfiCond1484) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1485 Using cfiCommon0
          CFI (cfiCond1485) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1485) Conditional ??CrossCallReturnLabel_625, ??CrossCallReturnLabel_204
          CFI (cfiCond1485) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1485) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1485) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1485) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1485) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1485) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1485) CFA_SP SP+-5
          CFI (cfiCond1485) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1486 Using cfiCommon0
          CFI (cfiCond1486) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1486) Conditional ??CrossCallReturnLabel_625, ??CrossCallReturnLabel_205
          CFI (cfiCond1486) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1486) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1486) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1486) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1486) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1486) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1486) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1486) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1486) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1486) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1486) CFA_SP SP+-5
          CFI (cfiCond1486) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1487 Using cfiCommon0
          CFI (cfiCond1487) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1487) Conditional ??CrossCallReturnLabel_623, ??CrossCallReturnLabel_98
          CFI (cfiCond1487) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1487) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1487) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1487) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1487) CFA_SP SP+-4
          CFI (cfiCond1487) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1488 Using cfiCommon0
          CFI (cfiCond1488) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1488) Conditional ??CrossCallReturnLabel_623, ??CrossCallReturnLabel_99
          CFI (cfiCond1488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1488) CFA_SP SP+-4
          CFI (cfiCond1488) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1489 Using cfiCommon0
          CFI (cfiCond1489) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1489) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_225
          CFI (cfiCond1489) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1489) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1489) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1489) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1489) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1489) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1489) CFA_SP SP+-4
          CFI (cfiCond1489) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1490 Using cfiCommon0
          CFI (cfiCond1490) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1490) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_226
          CFI (cfiCond1490) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1490) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1490) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1490) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1490) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1490) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1490) CFA_SP SP+-4
          CFI (cfiCond1490) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1491 Using cfiCommon0
          CFI (cfiCond1491) Function ZDO_ParseAddrRsp
          CFI (cfiCond1491) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_227
          CFI (cfiCond1491) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1491) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1491) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1491) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1491) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1491) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1491) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1491) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1491) CFA_SP SP+-5
          CFI (cfiCond1491) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1492 Using cfiCommon0
          CFI (cfiCond1492) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1492) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_228
          CFI (cfiCond1492) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1492) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1492) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1492) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1492) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1492) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1492) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1492) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1492) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1492) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1492) CFA_SP SP+-4
          CFI (cfiCond1492) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1493 Using cfiCommon0
          CFI (cfiCond1493) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1493) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_229
          CFI (cfiCond1493) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1493) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1493) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1493) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1493) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1493) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1493) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1493) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1493) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1493) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1493) CFA_SP SP+-5
          CFI (cfiCond1493) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1494 Using cfiCommon1
          CFI (cfiPicker1494) NoFunction
          CFI (cfiPicker1494) Picker
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1462
          CFI EndBlock cfiCond1463
          CFI EndBlock cfiCond1464
          CFI EndBlock cfiCond1465
          CFI EndBlock cfiCond1466
          CFI EndBlock cfiCond1467
          CFI EndBlock cfiCond1468
          CFI EndBlock cfiCond1469
          CFI EndBlock cfiCond1470
          CFI EndBlock cfiCond1471
          CFI EndBlock cfiCond1472
          CFI EndBlock cfiCond1473
          CFI EndBlock cfiCond1474
          CFI EndBlock cfiCond1475
          CFI EndBlock cfiCond1476
          CFI EndBlock cfiCond1477
          CFI EndBlock cfiCond1478
          CFI EndBlock cfiCond1479
          CFI EndBlock cfiCond1480
          CFI EndBlock cfiCond1481
          CFI EndBlock cfiCond1482
          CFI EndBlock cfiCond1483
          CFI EndBlock cfiCond1484
          CFI EndBlock cfiCond1485
          CFI EndBlock cfiCond1486
          CFI EndBlock cfiCond1487
          CFI EndBlock cfiCond1488
          CFI EndBlock cfiCond1489
          CFI EndBlock cfiCond1490
          CFI EndBlock cfiCond1491
          CFI EndBlock cfiCond1492
          CFI EndBlock cfiCond1493
          CFI EndBlock cfiPicker1494

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond1495 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1496 Using cfiCommon0
          CFI (cfiCond1496) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1496) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond1496) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1496) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1496) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1496) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1496) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1496) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1496) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1496) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1496) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1496) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1496) CFA_SP SP+-2
          CFI (cfiCond1496) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1497 Using cfiCommon1
          CFI (cfiPicker1497) NoFunction
          CFI (cfiPicker1497) Picker
        LCALL     ?Subroutine202 & 0xFFFF
??CrossCallReturnLabel_332:
        RET
          CFI EndBlock cfiCond1495
          CFI EndBlock cfiCond1496
          CFI EndBlock cfiPicker1497

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine202:
          CFI Block cfiCond1498 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1499 Using cfiCommon0
          CFI (cfiCond1499) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1499) Conditional ??CrossCallReturnLabel_332, ??CrossCallReturnLabel_149
          CFI (cfiCond1499) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1499) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1499) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1499) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1499) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1499) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1499) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1499) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1499) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1499) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1499) CFA_SP SP+-4
          CFI (cfiCond1499) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1500 Using cfiCommon0
          CFI (cfiCond1500) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1500) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_4
          CFI (cfiCond1500) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1500) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1500) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1500) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1500) CFA_SP SP+-6
          CFI (cfiCond1500) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1501 Using cfiCommon0
          CFI (cfiCond1501) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1501) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_5
          CFI (cfiCond1501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1501) CFA_SP SP+-6
          CFI (cfiCond1501) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1502 Using cfiCommon0
          CFI (cfiCond1502) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1502) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_100
          CFI (cfiCond1502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1502) CFA_SP SP+-6
          CFI (cfiCond1502) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1503 Using cfiCommon0
          CFI (cfiCond1503) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1503) Conditional ??CrossCallReturnLabel_333, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_101
          CFI (cfiCond1503) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1503) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1503) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1503) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1503) CFA_SP SP+-6
          CFI (cfiCond1503) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1504 Using cfiCommon1
          CFI (cfiPicker1504) NoFunction
          CFI (cfiPicker1504) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine259_0 & 0xFFFF
??CrossCallReturnLabel_616:
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond1498
          CFI EndBlock cfiCond1499
          CFI EndBlock cfiCond1500
          CFI EndBlock cfiCond1501
          CFI EndBlock cfiCond1502
          CFI EndBlock cfiCond1503
          CFI EndBlock cfiPicker1504

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond1505 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_634
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1506 Using cfiCommon0
          CFI (cfiCond1506) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1506) Conditional ??CrossCallReturnLabel_635
          CFI (cfiCond1506) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1506) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1506) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1506) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1506) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1506) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1506) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1506) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1506) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1506) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1506) CFA_SP SP+-2
          CFI (cfiCond1506) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1507 Using cfiCommon1
          CFI (cfiPicker1507) NoFunction
          CFI (cfiPicker1507) Picker
        LCALL     ?Subroutine194 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V7
          CFI EndBlock cfiCond1505
          CFI EndBlock cfiCond1506
          CFI EndBlock cfiPicker1507
        REQUIRE ??Subroutine262_0
        ; // Fall through to label ??Subroutine262_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine262_0:
          CFI Block cfiCond1508 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_636
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1509 Using cfiCommon0
          CFI (cfiCond1509) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1509) Conditional ??CrossCallReturnLabel_634
          CFI (cfiCond1509) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1509) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1509) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1509) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1509) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1509) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1509) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1509) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1509) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1509) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1509) CFA_SP SP+-2
          CFI (cfiCond1509) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1510 Using cfiCommon0
          CFI (cfiCond1510) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1510) Conditional ??CrossCallReturnLabel_635
          CFI (cfiCond1510) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1510) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1510) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1510) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1510) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1510) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1510) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1510) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1510) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1510) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1510) CFA_SP SP+-2
          CFI (cfiCond1510) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1511 Using cfiCommon1
          CFI (cfiPicker1511) NoFunction
          CFI (cfiPicker1511) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V4
        LCALL     ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_655:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1508
          CFI EndBlock cfiCond1509
          CFI EndBlock cfiCond1510
          CFI EndBlock cfiPicker1511
// 2737 
// 2738 /*********************************************************************
// 2739  * @fn          ZDO_ParseMgmNwkDiscRsp
// 2740  *
// 2741  * @brief       This function parses the incoming Management
// 2742  *              Network Discover response.
// 2743  *
// 2744  * @param       inMsg - incoming message
// 2745  *
// 2746  * @return      pointer to parsed response.  This structure was
// 2747  *          allocated using osal_mem_alloc, so it must be freed
// 2748  *          by the calling function [osal_mem_free()].
// 2749  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2750 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock1512 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 2751 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2752   ZDO_MgmNwkDiscRsp_t *pRsp;
// 2753   uint8 status;
// 2754   uint8 networkCount = 0;
        MOV       ?V0,#0x0
// 2755   uint8 startIndex = 0;
        MOV       ?V1,#0x0
// 2756   uint8 networkListCount = 0;
        MOV       ?V7,#0x0
// 2757   uint8 *msg;
// 2758 
// 2759   msg = inMsg->asdu;
        LCALL     ??Subroutine263_0 & 0xFFFF
// 2760   status = *msg++;
??CrossCallReturnLabel_640:
        MOV       ?V6,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 2761 
// 2762   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmNwkDiscRsp_0
// 2763   {
// 2764     networkCount = *msg++;
        MOVX      A,@DPTR
        MOV       ?V0,A
// 2765     startIndex = *msg++;
        LCALL     ?Subroutine98 & 0xFFFF
// 2766     networkListCount = *msg++;
// 2767   }
??CrossCallReturnLabel_162:
        MOV       ?V7,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_0
        INC       R7
// 2768 
// 2769   // Allocate a buffer big enough to handle the list.
// 2770   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 2771                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V7
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       A,#0x4
        MOV       R0,#?V2
        LCALL     ?S_SHL
        MOV       A,?V2
        LCALL     ??Subroutine269_0 & 0xFFFF
??CrossCallReturnLabel_664:
        ADDC      A,?V3
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2772   if ( pRsp )
        MOV       A,R2
        ORL       A,?V3
        JNZ       $+5
        LJMP      ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 2773   {
// 2774     uint8 x;
// 2775     mgmtNwkDiscItem_t *pList;
// 2776 
// 2777     pRsp->status = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V6
        MOVX      @DPTR,A
// 2778     pRsp->networkCount = networkCount;
        INC       DPTR
        MOV       A,?V0
        LCALL     ??Subroutine253_0 & 0xFFFF
// 2779     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_560:
        INC       DPTR
        LCALL     ?Subroutine38 & 0xFFFF
// 2780     pRsp->networkListCount = networkListCount;
??CrossCallReturnLabel_649:
        MOV       A,?V7
        MOVX      @DPTR,A
// 2781     pList = pRsp->list;
        LCALL     ?Subroutine194 & 0xFFFF
// 2782 
// 2783     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_318:
        MOV       ?V4,#0x0
        SJMP      ??ZDO_ParseMgmNwkDiscRsp_2
// 2784     {
// 2785       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2786       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_100:
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine28 & 0xFFFF
// 2787       msg += Z_EXTADDR_LEN;
// 2788 
// 2789       pList->logicalChannel = *msg++;
??CrossCallReturnLabel_37:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 2790       pList->stackProfile = (*msg) & 0x0F;
        MOV       A,R6
        ADD       A,#0x9
        MOV       R0,A
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_191:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_236:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine44 & 0xFFFF
// 2791       pList->version = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_60:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_229:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2792       pList->beaconOrder = (*msg) & 0x0F;
        MOV       A,R6
        ADD       A,#0xa
        INC       R0
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_192:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_250:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine44 & 0xFFFF
// 2793       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_61:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_205:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2794       pList->permitJoining = *msg++;
        MOV       A,R6
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_199:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0xc
        MOV       R6,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_4
        INC       R7
// 2795       pList++;
??ZDO_ParseMgmNwkDiscRsp_4:
        MOV       A,?V0
        ADD       A,#0x10
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_5
        INC       ?V1
// 2796     }
??ZDO_ParseMgmNwkDiscRsp_5:
        INC       ?V4
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V7
        JNC       $+5
        LJMP      ??ZDO_ParseMgmNwkDiscRsp_3 & 0xFFFF
// 2797   }
// 2798 
// 2799   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        LJMP      ?Subroutine3 & 0xFFFF
// 2800 }
          CFI EndBlock cfiBlock1512

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine194:
          CFI Block cfiCond1513 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_634
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1514 Using cfiCommon0
          CFI (cfiCond1514) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1514) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_635
          CFI (cfiCond1514) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1514) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1514) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1514) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1514) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1514) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1514) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1514) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1514) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1514) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1514) CFA_SP SP+-4
          CFI (cfiCond1514) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1515 Using cfiCommon0
          CFI (cfiCond1515) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1515) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond1515) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1515) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1515) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1515) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1515) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1515) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1515) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1515) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1515) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1515) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1515) CFA_SP SP+-2
          CFI (cfiCond1515) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1516 Using cfiCommon1
          CFI (cfiPicker1516) NoFunction
          CFI (cfiPicker1516) Picker
        MOV       A,R2
        ADD       A,#0x4
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V3
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond1513
          CFI EndBlock cfiCond1514
          CFI EndBlock cfiCond1515
          CFI EndBlock cfiPicker1516

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond1517 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_249
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1518 Using cfiCommon0
          CFI (cfiCond1518) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1518) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond1518) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1518) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1518) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1518) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1518) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1518) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1518) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1518) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1518) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1518) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1518) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1519 Using cfiCommon1
          CFI (cfiPicker1519) NoFunction
          CFI (cfiPicker1519) Picker
        MOV       A,?V0
        ADD       A,#0xd
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_631:
        RET
          CFI EndBlock cfiCond1517
          CFI EndBlock cfiCond1518
          CFI EndBlock cfiPicker1519

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond1520 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_234
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1521 Using cfiCommon0
          CFI (cfiCond1521) Function ZDO_ParseAddrRsp
          CFI (cfiCond1521) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond1521) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1521) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1521) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1521) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1521) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1521) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1521) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1521) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1521) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1522 Using cfiCommon0
          CFI (cfiCond1522) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1522) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond1522) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1522) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1522) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1522) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1522) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1522) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1522) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1522) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1522) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1522) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1522) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1523 Using cfiCommon1
          CFI (cfiPicker1523) NoFunction
          CFI (cfiPicker1523) Picker
        MOV       A,?V0
        ADD       A,#0xb
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_628:
        RET
          CFI EndBlock cfiCond1520
          CFI EndBlock cfiCond1521
          CFI EndBlock cfiCond1522
          CFI EndBlock cfiPicker1523

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond1524 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1525 Using cfiCommon0
          CFI (cfiCond1525) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1525) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond1525) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1525) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1525) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1525) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1525) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1525) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1525) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1525) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1525) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1525) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1525) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1526 Using cfiCommon1
          CFI (cfiPicker1526) NoFunction
          CFI (cfiPicker1526) Picker
        MOV       A,?V0
        ADD       A,#0xe
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_625:
        RET
          CFI EndBlock cfiCond1524
          CFI EndBlock cfiCond1525
          CFI EndBlock cfiPicker1526

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond1527 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_191
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1528 Using cfiCommon0
          CFI (cfiCond1528) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1528) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond1528) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1528) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1528) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1528) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1528) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1528) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1528) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1528) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1528) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1528) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1528) CFA_SP SP+-2
          CFI (cfiCond1528) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1529 Using cfiCommon1
          CFI (cfiPicker1529) NoFunction
          CFI (cfiPicker1529) Picker
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        ANL       A,#0xf
        RET
          CFI EndBlock cfiCond1527
          CFI EndBlock cfiCond1528
          CFI EndBlock cfiPicker1529
// 2801 
// 2802 /*********************************************************************
// 2803  * @fn          ZDO_ParseMgmtRtgRsp
// 2804  *
// 2805  * @brief       This function parses the incoming Management
// 2806  *              Routing response.
// 2807  *
// 2808  * @param       inMsg - incoming message
// 2809  *
// 2810  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2811  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2812  *          by the calling function [osal_mem_free()].
// 2813  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond1530 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_637
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1531 Using cfiCommon0
          CFI (cfiCond1531) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1531) Conditional ??CrossCallReturnLabel_638
          CFI (cfiCond1531) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1531) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1531) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1531) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1531) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1531) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1531) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1531) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1531) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1531) CFA_SP SP+-2
          CFI (cfiCond1531) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1532 Using cfiCommon1
          CFI (cfiPicker1532) NoFunction
          CFI (cfiPicker1532) Picker
        MOV       ?V0,#0x0
          CFI EndBlock cfiCond1530
          CFI EndBlock cfiCond1531
          CFI EndBlock cfiPicker1532
        REQUIRE ??Subroutine263_0
        ; // Fall through to label ??Subroutine263_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine263_0:
          CFI Block cfiCond1533 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_639
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1534 Using cfiCommon0
          CFI (cfiCond1534) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1534) Conditional ??CrossCallReturnLabel_640
          CFI (cfiCond1534) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1534) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1534) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1534) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1534) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1534) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1534) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1534) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1534) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1534) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1534) CFA_SP SP+-2
          CFI (cfiCond1534) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1535 Using cfiCommon0
          CFI (cfiCond1535) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1535) Conditional ??CrossCallReturnLabel_637
          CFI (cfiCond1535) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1535) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1535) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1535) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1535) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1535) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1535) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1535) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1535) CFA_SP SP+-2
          CFI (cfiCond1535) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1536 Using cfiCommon0
          CFI (cfiCond1536) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1536) Conditional ??CrossCallReturnLabel_638
          CFI (cfiCond1536) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1536) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1536) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1536) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1536) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1536) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1536) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1536) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1536) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1536) CFA_SP SP+-2
          CFI (cfiCond1536) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1537 Using cfiCommon1
          CFI (cfiPicker1537) NoFunction
          CFI (cfiPicker1537) Picker
        LCALL     ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_688:
          CFI EndBlock cfiCond1533
          CFI EndBlock cfiCond1534
          CFI EndBlock cfiCond1535
          CFI EndBlock cfiCond1536
          CFI EndBlock cfiPicker1537
        REQUIRE ??Subroutine264_0
        ; // Fall through to label ??Subroutine264_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine264_0:
          CFI Block cfiCond1538 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_641
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1539 Using cfiCommon0
          CFI (cfiCond1539) Function ZDO_ParseEPListRsp
          CFI (cfiCond1539) Conditional ??CrossCallReturnLabel_639
          CFI (cfiCond1539) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1539) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1539) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1539) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1539) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1539) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1539) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1539) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1539) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1539) CFA_SP SP+-2
          CFI (cfiCond1539) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1540 Using cfiCommon0
          CFI (cfiCond1540) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1540) Conditional ??CrossCallReturnLabel_640
          CFI (cfiCond1540) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1540) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1540) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1540) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1540) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1540) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1540) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1540) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1540) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1540) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1540) CFA_SP SP+-2
          CFI (cfiCond1540) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1541 Using cfiCommon0
          CFI (cfiCond1541) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1541) Conditional ??CrossCallReturnLabel_637
          CFI (cfiCond1541) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1541) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1541) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1541) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1541) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1541) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1541) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1541) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1541) CFA_SP SP+-2
          CFI (cfiCond1541) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1542 Using cfiCommon0
          CFI (cfiCond1542) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1542) Conditional ??CrossCallReturnLabel_638
          CFI (cfiCond1542) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1542) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1542) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1542) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1542) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1542) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1542) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1542) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1542) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1542) CFA_SP SP+-2
          CFI (cfiCond1542) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1543 Using cfiCommon1
          CFI (cfiPicker1543) NoFunction
          CFI (cfiPicker1543) Picker
        LCALL     ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_642:
        RET
          CFI EndBlock cfiCond1538
          CFI EndBlock cfiCond1539
          CFI EndBlock cfiCond1540
          CFI EndBlock cfiCond1541
          CFI EndBlock cfiCond1542
          CFI EndBlock cfiPicker1543

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine166:
          CFI Block cfiCond1544 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_637
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1545 Using cfiCommon0
          CFI (cfiCond1545) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1545) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_638
          CFI (cfiCond1545) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1545) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1545) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1545) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1545) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1545) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1545) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1545) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1545) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1545) CFA_SP SP+-4
          CFI (cfiCond1545) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1546 Using cfiCommon0
          CFI (cfiCond1546) Function ZDO_ParseEPListRsp
          CFI (cfiCond1546) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_639
          CFI (cfiCond1546) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1546) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1546) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1546) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1546) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1546) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1546) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1546) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1546) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1546) CFA_SP SP+-4
          CFI (cfiCond1546) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1547 Using cfiCommon0
          CFI (cfiCond1547) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1547) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_640
          CFI (cfiCond1547) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1547) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1547) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1547) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1547) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1547) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1547) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1547) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1547) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1547) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1547) CFA_SP SP+-4
          CFI (cfiCond1547) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1548 Using cfiCommon0
          CFI (cfiCond1548) Function ZDO_ParseAddrRsp
          CFI (cfiCond1548) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_641
          CFI (cfiCond1548) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1548) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1548) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1548) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1548) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1548) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1548) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1548) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1548) CFA_SP SP+-4
          CFI (cfiCond1548) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1549 Using cfiCommon0
          CFI (cfiCond1549) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1549) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_112
          CFI (cfiCond1549) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1549) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1549) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1549) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1549) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1549) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1549) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1549) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1549) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1549) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1549) CFA_SP SP+-4
          CFI (cfiCond1549) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1550 Using cfiCommon0
          CFI (cfiCond1550) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1550) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_113
          CFI (cfiCond1550) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1550) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1550) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1550) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1550) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1550) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1550) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1550) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1550) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1550) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1550) CFA_SP SP+-4
          CFI (cfiCond1550) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1551 Using cfiCommon1
          CFI (cfiPicker1551) NoFunction
          CFI (cfiPicker1551) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond1544
          CFI EndBlock cfiCond1545
          CFI EndBlock cfiCond1546
          CFI EndBlock cfiCond1547
          CFI EndBlock cfiCond1548
          CFI EndBlock cfiCond1549
          CFI EndBlock cfiCond1550
          CFI EndBlock cfiPicker1551
        REQUIRE ??Subroutine265_0
        ; // Fall through to label ??Subroutine265_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine265_0:
          CFI Block cfiCond1552 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1553 Using cfiCommon0
          CFI (cfiCond1553) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1553) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_91
          CFI (cfiCond1553) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1553) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1553) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1553) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1553) CFA_SP SP+-4
          CFI (cfiCond1553) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1554 Using cfiCommon0
          CFI (cfiCond1554) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1554) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_637
          CFI (cfiCond1554) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1554) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1554) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1554) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1554) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1554) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1554) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1554) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1554) CFA_SP SP+-4
          CFI (cfiCond1554) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1555 Using cfiCommon0
          CFI (cfiCond1555) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1555) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_638
          CFI (cfiCond1555) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1555) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1555) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1555) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1555) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1555) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1555) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1555) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1555) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1555) CFA_SP SP+-4
          CFI (cfiCond1555) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1556 Using cfiCommon0
          CFI (cfiCond1556) Function ZDO_ParseEPListRsp
          CFI (cfiCond1556) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_639
          CFI (cfiCond1556) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1556) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1556) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1556) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1556) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1556) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1556) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1556) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1556) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1556) CFA_SP SP+-4
          CFI (cfiCond1556) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1557 Using cfiCommon0
          CFI (cfiCond1557) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1557) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_640
          CFI (cfiCond1557) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1557) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1557) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1557) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1557) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1557) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1557) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1557) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1557) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1557) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1557) CFA_SP SP+-4
          CFI (cfiCond1557) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1558 Using cfiCommon0
          CFI (cfiCond1558) Function ZDO_ParseAddrRsp
          CFI (cfiCond1558) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_641
          CFI (cfiCond1558) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1558) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1558) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1558) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1558) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1558) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1558) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1558) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1558) CFA_SP SP+-4
          CFI (cfiCond1558) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1559 Using cfiCommon0
          CFI (cfiCond1559) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1559) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_112
          CFI (cfiCond1559) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1559) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1559) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1559) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1559) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1559) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1559) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1559) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1559) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1559) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1559) CFA_SP SP+-4
          CFI (cfiCond1559) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1560 Using cfiCommon0
          CFI (cfiCond1560) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1560) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_113
          CFI (cfiCond1560) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1560) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1560) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1560) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1560) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1560) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1560) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1560) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1560) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1560) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1560) CFA_SP SP+-4
          CFI (cfiCond1560) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1561 Using cfiCommon1
          CFI (cfiPicker1561) NoFunction
          CFI (cfiPicker1561) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1552
          CFI EndBlock cfiCond1553
          CFI EndBlock cfiCond1554
          CFI EndBlock cfiCond1555
          CFI EndBlock cfiCond1556
          CFI EndBlock cfiCond1557
          CFI EndBlock cfiCond1558
          CFI EndBlock cfiCond1559
          CFI EndBlock cfiCond1560
          CFI EndBlock cfiPicker1561

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond1562 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1563 Using cfiCommon0
          CFI (cfiCond1563) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1563) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond1563) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1563) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1563) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1563) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1563) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1563) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1563) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1563) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1563) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1563) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1563) CFA_SP SP+-2
          CFI (cfiCond1563) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1564 Using cfiCommon1
          CFI (cfiPicker1564) NoFunction
          CFI (cfiPicker1564) Picker
        LCALL     ?Subroutine198 & 0xFFFF
??CrossCallReturnLabel_328:
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf
        RET
          CFI EndBlock cfiCond1562
          CFI EndBlock cfiCond1563
          CFI EndBlock cfiPicker1564

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond1565 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1566 Using cfiCommon0
          CFI (cfiCond1566) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1566) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond1566) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1566) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1566) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1566) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1566) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1566) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1566) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1566) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1566) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1566) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1566) CFA_SP SP+-2
          CFI (cfiCond1566) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1567 Using cfiCommon1
          CFI (cfiPicker1567) NoFunction
          CFI (cfiPicker1567) Picker
        LCALL     ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_266:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1565
          CFI EndBlock cfiCond1566
          CFI EndBlock cfiPicker1567

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine157:
          CFI Block cfiCond1568 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1569 Using cfiCommon0
          CFI (cfiCond1569) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1569) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_16
          CFI (cfiCond1569) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1569) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1569) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1569) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1569) CFA_SP SP+-4
          CFI (cfiCond1569) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1570 Using cfiCommon0
          CFI (cfiCond1570) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1570) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_17
          CFI (cfiCond1570) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1570) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1570) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1570) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1570) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1570) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1570) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1570) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1570) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1570) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1570) CFA_SP SP+-4
          CFI (cfiCond1570) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1571 Using cfiCommon0
          CFI (cfiCond1571) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1571) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_36
          CFI (cfiCond1571) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1571) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1571) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1571) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1571) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1571) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1571) CFA_SP SP+-4
          CFI (cfiCond1571) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1572 Using cfiCommon0
          CFI (cfiCond1572) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1572) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_37
          CFI (cfiCond1572) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1572) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1572) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1572) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1572) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1572) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1572) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1572) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1572) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1572) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1572) CFA_SP SP+-4
          CFI (cfiCond1572) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1573 Using cfiCommon1
          CFI (cfiPicker1573) NoFunction
          CFI (cfiPicker1573) Picker
        LCALL     ?Subroutine199 & 0xFFFF
??CrossCallReturnLabel_331:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1568
          CFI EndBlock cfiCond1569
          CFI EndBlock cfiCond1570
          CFI EndBlock cfiCond1571
          CFI EndBlock cfiCond1572
          CFI EndBlock cfiPicker1573

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2814 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock1574 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 2815 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2816   ZDO_MgmtRtgRsp_t *pRsp;
// 2817   uint8 status;
// 2818   uint8 rtgCount = 0;
        MOV       ?V4,#0x0
// 2819   uint8 startIndex = 0;
        MOV       ?V1,#0x0
// 2820   uint8 rtgListCount = 0;
        LCALL     ?Subroutine70 & 0xFFFF
// 2821   uint8 *msg;
// 2822 
// 2823   msg = inMsg->asdu;
// 2824 
// 2825   status = *msg++;
??CrossCallReturnLabel_637:
        MOV       ?V5,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 2826   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmtRtgRsp_0
// 2827   {
// 2828     rtgCount = *msg++;
        MOVX      A,@DPTR
        MOV       ?V4,A
// 2829     startIndex = *msg++;
        LCALL     ?Subroutine98 & 0xFFFF
// 2830     rtgListCount = *msg++;
// 2831   }
??CrossCallReturnLabel_163:
        MOV       ?V0,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_0
        INC       R7
// 2832 
// 2833   // Allocate a buffer big enough to handle the list
// 2834   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 2835           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V0
        MOV       B,#0x7
        LCALL     ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
// 2836   if ( pRsp )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ParseMgmtRtgRsp_1
// 2837   {
// 2838     uint8 x;
// 2839     rtgItem_t *pList = pRsp->list;
        MOV       A,R2
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
// 2840     pRsp->status = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V5
        LCALL     ??Subroutine262_0 & 0xFFFF
// 2841     pRsp->rtgCount = rtgCount;
// 2842     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_636:
        LCALL     ?Subroutine38 & 0xFFFF
// 2843     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_650:
        MOV       A,?V0
        MOVX      @DPTR,A
// 2844 
// 2845     for ( x = 0; x < rtgListCount; x++ )
        MOV       R4,#0x0
        SJMP      ??ZDO_ParseMgmtRtgRsp_2
// 2846     {
// 2847       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_144:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        LCALL     ?Subroutine21 & 0xFFFF
// 2848       msg += 2;
// 2849       pList->status = *msg++;
??CrossCallReturnLabel_20:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_4
        INC       R7
// 2850       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_4:
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_145:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 2851       msg += 2;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_5
        INC       R7
// 2852       pList++;
??ZDO_ParseMgmtRtgRsp_5:
        MOV       A,R0
        ADD       A,#0x7
        MOV       R0,A
        JNC       ??ZDO_ParseMgmtRtgRsp_6
        INC       R1
// 2853     }
??ZDO_ParseMgmtRtgRsp_6:
        INC       R4
??ZDO_ParseMgmtRtgRsp_2:
        MOV       A,R4
        CLR       C
        SUBB      A,?V0
        JC        ??ZDO_ParseMgmtRtgRsp_3
// 2854   }
// 2855 
// 2856   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP      ??Subroutine274_0 & 0xFFFF
// 2857 }
          CFI EndBlock cfiBlock1574

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond1575 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1576 Using cfiCommon0
          CFI (cfiCond1576) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1576) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond1576) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1576) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1576) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1576) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1576) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1576) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1576) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1576) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1576) CFA_SP SP+-2
          CFI (cfiCond1576) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1577 Using cfiCommon0
          CFI (cfiCond1577) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1577) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond1577) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1577) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1577) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1577) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1577) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1577) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1577) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1577) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1577) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1577) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1577) CFA_SP SP+-2
          CFI (cfiCond1577) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1578 Using cfiCommon1
          CFI (cfiPicker1578) NoFunction
          CFI (cfiPicker1578) Picker
        MUL       AB
        MOV       R1,B
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond1575
          CFI EndBlock cfiCond1576
          CFI EndBlock cfiCond1577
          CFI EndBlock cfiPicker1578

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond1579 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1580 Using cfiCommon0
          CFI (cfiCond1580) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1580) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond1580) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1580) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1580) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1580) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1580) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1580) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1580) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1580) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1580) CFA_SP SP+-2
          CFI (cfiCond1580) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1581 Using cfiCommon1
          CFI (cfiPicker1581) NoFunction
          CFI (cfiPicker1581) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1579
          CFI EndBlock cfiCond1580
          CFI EndBlock cfiPicker1581

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond1582 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1583 Using cfiCommon0
          CFI (cfiCond1583) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1583) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond1583) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1583) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1583) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1583) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1583) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1583) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1583) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1583) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1583) CFA_SP SP+-2
          CFI (cfiCond1583) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1584 Using cfiCommon1
          CFI (cfiPicker1584) NoFunction
          CFI (cfiPicker1584) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       A,?V4
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond1582
          CFI EndBlock cfiCond1583
          CFI EndBlock cfiPicker1584

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond1585 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1586 Using cfiCommon0
          CFI (cfiCond1586) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1586) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond1586) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1586) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1586) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1586) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1586) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1586) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1586) CFA_SP SP+-2
          CFI (cfiCond1586) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1587 Using cfiCommon0
          CFI (cfiCond1587) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1587) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond1587) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1587) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1587) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1587) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1587) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1587) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1587) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1587) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1587) CFA_SP SP+-2
          CFI (cfiCond1587) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1588 Using cfiCommon0
          CFI (cfiCond1588) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1588) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond1588) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1588) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1588) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1588) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1588) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1588) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1588) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1588) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1588) CFA_SP SP+-2
          CFI (cfiCond1588) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1589 Using cfiCommon1
          CFI (cfiPicker1589) NoFunction
          CFI (cfiPicker1589) Picker
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_269:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1585
          CFI EndBlock cfiCond1586
          CFI EndBlock cfiCond1587
          CFI EndBlock cfiCond1588
          CFI EndBlock cfiPicker1589
// 2858 
// 2859 /*********************************************************************
// 2860  * @fn          ZDO_ParseMgmtBindRsp
// 2861  *
// 2862  * @brief       This function parses the incoming Management
// 2863  *              Binding response.
// 2864  *
// 2865  * @param       inMsg - pointer to message to parse
// 2866  *
// 2867  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2868  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2869  *          by the calling function [osal_mem_free()].
// 2870  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2871 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock1590 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 2872 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2873   ZDO_MgmtBindRsp_t *pRsp;
// 2874   uint8 status;
// 2875   uint8 bindingCount = 0;
        MOV       ?V4,#0x0
// 2876   uint8 startIndex = 0;
        MOV       ?V5,#0x0
// 2877   uint8 bindingListCount = 0;
        MOV       ?V6,#0x0
// 2878   uint8 *msg;
// 2879 
// 2880   msg = inMsg->asdu;
        LCALL     ?Subroutine69 & 0xFFFF
// 2881 
// 2882   status = *msg++;
// 2883   if ( status == ZSuccess )
??CrossCallReturnLabel_113:
        JNZ       ??ZDO_ParseMgmtBindRsp_0
// 2884   {
// 2885     bindingCount = *msg++;
        MOVX      A,@DPTR
        MOV       ?V4,A
// 2886     startIndex = *msg++;
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
// 2887     bindingListCount = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V6,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtBindRsp_0
        INC       R7
// 2888   }
// 2889 
// 2890   // Allocate a buffer big enough to handle the list
// 2891   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 2892           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??ZDO_ParseMgmtBindRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V6
        MOV       B,#0x15
        LCALL     ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2893   if ( pRsp )
        MOV       A,R2
        ORL       A,?V3
        JZ        ??ZDO_ParseMgmtBindRsp_1
// 2894   {
// 2895     uint8 x;
// 2896     apsBindingItem_t *pList = pRsp->list;
        LCALL     ?Subroutine16 & 0xFFFF
// 2897     pRsp->status = status;
// 2898     pRsp->bindingCount = bindingCount;
// 2899     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_635:
        MOV       A,?V5
        LCALL     ??Subroutine267_0 & 0xFFFF
// 2900     pRsp->bindingListCount = bindingListCount;
??CrossCallReturnLabel_653:
        MOV       A,?V6
        MOVX      @DPTR,A
// 2901 
// 2902     for ( x = 0; x < bindingListCount; x++ )
        MOV       ?V4,#0x0
        SJMP      ??ZDO_ParseMgmtBindRsp_2
// 2903     {
// 2904       osal_cpyExtAddr( pList->srcAddr, msg );
// 2905       msg += Z_EXTADDR_LEN;
// 2906       pList->srcEP = *msg++;
// 2907 
// 2908       // Get the Cluster ID
// 2909 
// 2910       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 2911       msg += 2;
// 2912       pList->dstAddr.addrMode = *msg++;
// 2913       if ( pList->dstAddr.addrMode == Addr64Bit )
// 2914       {
// 2915         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 2916         msg += Z_EXTADDR_LEN;
// 2917         pList->dstEP = *msg++;
// 2918       }
// 2919       else
// 2920       {
// 2921         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_3:
        LCALL     ?Subroutine62 & 0xFFFF
// 2922         msg += 2;
// 2923       }
??CrossCallReturnLabel_99:
        LCALL     ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_568:
        JNC       ??ZDO_ParseMgmtBindRsp_4
        INC       R7
// 2924 
// 2925       pList++;
??ZDO_ParseMgmtBindRsp_4:
        MOV       A,?V0
        ADD       A,#0x15
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmtBindRsp_5
        INC       ?V1
??ZDO_ParseMgmtBindRsp_5:
        INC       ?V4
??ZDO_ParseMgmtBindRsp_2:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V6
        JNC       ??ZDO_ParseMgmtBindRsp_1
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_648:
        JNC       ??ZDO_ParseMgmtBindRsp_6
        INC       R7
??ZDO_ParseMgmtBindRsp_6:
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_5:
        JNC       ??ZDO_ParseMgmtBindRsp_7
        INC       R7
??ZDO_ParseMgmtBindRsp_7:
        MOV       A,#0x3
        XRL       A,R0
        JNZ       ??ZDO_ParseMgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xb
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine136 & 0xFFFF
// 2926     }
// 2927   }
??CrossCallReturnLabel_224:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine266_0 & 0xFFFF
??CrossCallReturnLabel_646:
        JNC       ??ZDO_ParseMgmtBindRsp_4
        INC       R7
??ZDO_ParseMgmtBindRsp_8:
        SJMP      ??ZDO_ParseMgmtBindRsp_4
// 2928 
// 2929   return ( pRsp );
??ZDO_ParseMgmtBindRsp_1:
        LJMP      ?Subroutine3 & 0xFFFF
// 2930 }
          CFI EndBlock cfiBlock1590

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond1591 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1592 Using cfiCommon0
          CFI (cfiCond1592) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1592) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond1592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1592) CFA_SP SP+-2
          CFI (cfiCond1592) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1593 Using cfiCommon1
          CFI (cfiPicker1593) NoFunction
          CFI (cfiPicker1593) Picker
        LCALL     ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_687:
        LCALL     ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_643:
        MOV       ?V7,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        RET
          CFI EndBlock cfiCond1591
          CFI EndBlock cfiCond1592
          CFI EndBlock cfiPicker1593

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1594 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1595 Using cfiCommon0
          CFI (cfiCond1595) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1595) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond1595) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1595) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1595) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1595) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1595) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1595) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1595) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1595) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1595) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1595) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1595) CFA_SP SP+-2
          CFI (cfiCond1595) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1596 Using cfiCommon1
          CFI (cfiPicker1596) NoFunction
          CFI (cfiPicker1596) Picker
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_558:
        MOV       A,?V0
        ADD       A,#0xb
        LCALL     ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_623:
        MOV       A,R0
        RET
          CFI EndBlock cfiCond1594
          CFI EndBlock cfiCond1595
          CFI EndBlock cfiPicker1596

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond1597 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_647
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1598 Using cfiCommon0
          CFI (cfiCond1598) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1598) Conditional ??CrossCallReturnLabel_648
          CFI (cfiCond1598) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1598) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1598) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1598) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1598) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1598) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1598) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1598) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1598) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1598) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1598) CFA_SP SP+-2
          CFI (cfiCond1598) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1599 Using cfiCommon1
          CFI (cfiPicker1599) NoFunction
          CFI (cfiPicker1599) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_291:
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond1597
          CFI EndBlock cfiCond1598
          CFI EndBlock cfiPicker1599
        REQUIRE ??Subroutine266_0
        ; // Fall through to label ??Subroutine266_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine266_0:
          CFI Block cfiCond1600 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_645
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1601 Using cfiCommon0
          CFI (cfiCond1601) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1601) Conditional ??CrossCallReturnLabel_646
          CFI (cfiCond1601) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1601) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1601) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1601) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1601) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1601) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1601) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1601) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1601) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1601) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1601) CFA_SP SP+-2
          CFI (cfiCond1601) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1602 Using cfiCommon0
          CFI (cfiCond1602) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1602) Conditional ??CrossCallReturnLabel_647
          CFI (cfiCond1602) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1602) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1602) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1602) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1602) CFA_SP SP+-2
          CFI (cfiCond1602) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1603 Using cfiCommon0
          CFI (cfiCond1603) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1603) Conditional ??CrossCallReturnLabel_648
          CFI (cfiCond1603) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1603) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1603) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1603) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1603) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1603) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1603) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1603) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1603) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1603) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1603) CFA_SP SP+-2
          CFI (cfiCond1603) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1604 Using cfiCommon1
          CFI (cfiPicker1604) NoFunction
          CFI (cfiPicker1604) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x9
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1600
          CFI EndBlock cfiCond1601
          CFI EndBlock cfiCond1602
          CFI EndBlock cfiCond1603
          CFI EndBlock cfiPicker1604

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond1605 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_649
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1606 Using cfiCommon0
          CFI (cfiCond1606) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1606) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1606) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1606) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1606) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1606) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1606) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1606) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1606) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1606) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1606) CFA_SP SP+-2
          CFI (cfiCond1606) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1607 Using cfiCommon1
          CFI (cfiPicker1607) NoFunction
          CFI (cfiPicker1607) Picker
        MOV       A,?V1
          CFI EndBlock cfiCond1605
          CFI EndBlock cfiCond1606
          CFI EndBlock cfiPicker1607
        REQUIRE ??Subroutine267_0
        ; // Fall through to label ??Subroutine267_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine267_0:
          CFI Block cfiCond1608 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_651
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1609 Using cfiCommon0
          CFI (cfiCond1609) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1609) Conditional ??CrossCallReturnLabel_652
          CFI (cfiCond1609) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1609) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1609) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1609) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1609) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1609) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1609) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1609) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1609) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1609) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1609) CFA_SP SP+-2
          CFI (cfiCond1609) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1610 Using cfiCommon0
          CFI (cfiCond1610) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1610) Conditional ??CrossCallReturnLabel_653
          CFI (cfiCond1610) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1610) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1610) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1610) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1610) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1610) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1610) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1610) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1610) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1610) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1610) CFA_SP SP+-2
          CFI (cfiCond1610) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1611 Using cfiCommon0
          CFI (cfiCond1611) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1611) Conditional ??CrossCallReturnLabel_649
          CFI (cfiCond1611) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1611) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1611) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1611) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1611) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1611) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1611) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1611) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1611) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1611) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1611) CFA_SP SP+-2
          CFI (cfiCond1611) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1612 Using cfiCommon0
          CFI (cfiCond1612) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1612) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1612) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1612) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1612) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1612) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1612) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1612) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1612) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1612) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1612) CFA_SP SP+-2
          CFI (cfiCond1612) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1613 Using cfiCommon1
          CFI (cfiPicker1613) NoFunction
          CFI (cfiPicker1613) Picker
        LCALL     ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_656:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1608
          CFI EndBlock cfiCond1609
          CFI EndBlock cfiCond1610
          CFI EndBlock cfiCond1611
          CFI EndBlock cfiCond1612
          CFI EndBlock cfiPicker1613

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond1614 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1615 Using cfiCommon0
          CFI (cfiCond1615) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1615) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond1615) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1615) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1615) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1615) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1615) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1615) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1615) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1615) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1615) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1615) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1615) CFA_SP SP+-2
          CFI (cfiCond1615) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1616 Using cfiCommon1
          CFI (cfiPicker1616) NoFunction
          CFI (cfiPicker1616) Picker
        LCALL     ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_276:
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine268_0 & 0xFFFF
??CrossCallReturnLabel_657:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V0
        LCALL     ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_434:
        LCALL     ??Subroutine261_0 & 0xFFFF
??CrossCallReturnLabel_621:
        MOV       A,R0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1614
          CFI EndBlock cfiCond1615
          CFI EndBlock cfiPicker1616

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine159:
          CFI Block cfiCond1617 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1618 Using cfiCommon0
          CFI (cfiCond1618) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1618) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_28
          CFI (cfiCond1618) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1618) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1618) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1618) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1618) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1618) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1618) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1618) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1618) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1618) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1618) CFA_SP SP+-4
          CFI (cfiCond1618) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1619 Using cfiCommon0
          CFI (cfiCond1619) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1619) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_535
          CFI (cfiCond1619) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1619) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1619) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1619) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1619) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1619) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1619) CFA_SP SP+-4
          CFI (cfiCond1619) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1620 Using cfiCommon0
          CFI (cfiCond1620) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1620) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_536
          CFI (cfiCond1620) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1620) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1620) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1620) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1620) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1620) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1620) CFA_SP SP+-4
          CFI (cfiCond1620) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1621 Using cfiCommon0
          CFI (cfiCond1621) Function ZDO_CopyMatchInfo
          CFI (cfiCond1621) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_531
          CFI (cfiCond1621) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1621) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1621) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1621) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1621) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1621) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1621) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1621) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1621) CFA_SP SP+-4
          CFI (cfiCond1621) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1622 Using cfiCommon0
          CFI (cfiCond1622) Function ZDO_CopyMatchInfo
          CFI (cfiCond1622) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_532
          CFI (cfiCond1622) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1622) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1622) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1622) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1622) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1622) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1622) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1622) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1622) CFA_SP SP+-4
          CFI (cfiCond1622) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1623 Using cfiCommon0
          CFI (cfiCond1623) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1623) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_534
          CFI (cfiCond1623) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1623) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1623) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1623) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1623) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1623) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1623) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1623) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1623) CFA_SP SP+-4
          CFI (cfiCond1623) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1624 Using cfiCommon0
          CFI (cfiCond1624) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1624) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_533
          CFI (cfiCond1624) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1624) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1624) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1624) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1624) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1624) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1624) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1624) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1624) CFA_SP SP+-4
          CFI (cfiCond1624) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1625 Using cfiCommon1
          CFI (cfiPicker1625) NoFunction
          CFI (cfiPicker1625) Picker
        MOV       A,R0
          CFI EndBlock cfiCond1617
          CFI EndBlock cfiCond1618
          CFI EndBlock cfiCond1619
          CFI EndBlock cfiCond1620
          CFI EndBlock cfiCond1621
          CFI EndBlock cfiCond1622
          CFI EndBlock cfiCond1623
          CFI EndBlock cfiCond1624
          CFI EndBlock cfiPicker1625
        REQUIRE ??Subroutine268_0
        ; // Fall through to label ??Subroutine268_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine268_0:
          CFI Block cfiCond1626 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_381
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1627 Using cfiCommon0
          CFI (cfiCond1627) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1627) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_382
          CFI (cfiCond1627) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1627) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1627) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1627) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1627) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1627) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1627) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1627) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1627) CFA_SP SP+-4
          CFI (cfiCond1627) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1628 Using cfiCommon0
          CFI (cfiCond1628) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1628) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_373
          CFI (cfiCond1628) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1628) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1628) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1628) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1628) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1628) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1628) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1628) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1628) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1628) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1628) CFA_SP SP+-4
          CFI (cfiCond1628) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1629 Using cfiCommon0
          CFI (cfiCond1629) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1629) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_374
          CFI (cfiCond1629) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1629) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1629) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1629) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1629) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1629) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1629) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1629) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1629) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1629) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1629) CFA_SP SP+-4
          CFI (cfiCond1629) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1630 Using cfiCommon0
          CFI (cfiCond1630) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1630) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_375
          CFI (cfiCond1630) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1630) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1630) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1630) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1630) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1630) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1630) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1630) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1630) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1630) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1630) CFA_SP SP+-4
          CFI (cfiCond1630) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1631 Using cfiCommon0
          CFI (cfiCond1631) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1631) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_376
          CFI (cfiCond1631) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1631) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1631) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1631) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1631) CFA_SP SP+-4
          CFI (cfiCond1631) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1632 Using cfiCommon0
          CFI (cfiCond1632) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1632) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_377
          CFI (cfiCond1632) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1632) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1632) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1632) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1632) CFA_SP SP+-4
          CFI (cfiCond1632) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1633 Using cfiCommon0
          CFI (cfiCond1633) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1633) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_378
          CFI (cfiCond1633) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1633) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1633) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1633) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1633) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1633) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1633) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1633) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1633) CFA_SP SP+-4
          CFI (cfiCond1633) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1634 Using cfiCommon0
          CFI (cfiCond1634) Function ZDMatchSendState
          CFI (cfiCond1634) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_379
          CFI (cfiCond1634) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1634) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1634) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1634) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1634) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1634) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1634) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1634) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1634) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1634) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1634) CFA_SP SP+-4
          CFI (cfiCond1634) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1635 Using cfiCommon0
          CFI (cfiCond1635) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1635) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_380
          CFI (cfiCond1635) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1635) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1635) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1635) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1635) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1635) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1635) CFA_SP SP+-4
          CFI (cfiCond1635) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1636 Using cfiCommon0
          CFI (cfiCond1636) Function ZDO_ParseAddrRsp
          CFI (cfiCond1636) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_366
          CFI (cfiCond1636) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1636) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1636) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1636) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1636) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1636) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1636) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1636) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1636) CFA_SP SP+-4
          CFI (cfiCond1636) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1637 Using cfiCommon0
          CFI (cfiCond1637) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1637) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_367
          CFI (cfiCond1637) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1637) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1637) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1637) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1637) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1637) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1637) CFA_SP SP+-4
          CFI (cfiCond1637) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1638 Using cfiCommon0
          CFI (cfiCond1638) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1638) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_368
          CFI (cfiCond1638) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1638) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1638) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1638) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1638) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1638) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1638) CFA_SP SP+-4
          CFI (cfiCond1638) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1639 Using cfiCommon0
          CFI (cfiCond1639) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1639) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_369
          CFI (cfiCond1639) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1639) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1639) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1639) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1639) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1639) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1639) CFA_SP SP+-4
          CFI (cfiCond1639) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1640 Using cfiCommon0
          CFI (cfiCond1640) Function ZDO_ParseEPListRsp
          CFI (cfiCond1640) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_370
          CFI (cfiCond1640) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1640) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1640) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1640) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1640) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1640) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1640) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1640) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1640) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1640) CFA_SP SP+-4
          CFI (cfiCond1640) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1641 Using cfiCommon0
          CFI (cfiCond1641) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1641) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_371
          CFI (cfiCond1641) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1641) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1641) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1641) CFA_SP SP+-4
          CFI (cfiCond1641) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1642 Using cfiCommon0
          CFI (cfiCond1642) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1642) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_372
          CFI (cfiCond1642) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1642) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1642) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1642) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1642) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1642) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1642) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1642) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1642) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1642) CFA_SP SP+-4
          CFI (cfiCond1642) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1643 Using cfiCommon0
          CFI (cfiCond1643) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1643) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_562
          CFI (cfiCond1643) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1643) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1643) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1643) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1643) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1643) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1643) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1643) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1643) CFA_SP SP+-4
          CFI (cfiCond1643) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1644 Using cfiCommon0
          CFI (cfiCond1644) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1644) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_563
          CFI (cfiCond1644) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1644) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1644) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1644) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1644) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1644) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1644) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1644) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1644) CFA_SP SP+-4
          CFI (cfiCond1644) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1645 Using cfiCommon0
          CFI (cfiCond1645) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1645) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_564
          CFI (cfiCond1645) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1645) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1645) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1645) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1645) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1645) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1645) CFA_SP SP+-4
          CFI (cfiCond1645) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1646 Using cfiCommon0
          CFI (cfiCond1646) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1646) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_565
          CFI (cfiCond1646) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1646) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1646) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1646) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1646) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1646) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1646) CFA_SP SP+-4
          CFI (cfiCond1646) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1647 Using cfiCommon0
          CFI (cfiCond1647) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1647) Conditional ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_566
          CFI (cfiCond1647) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1647) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1647) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1647) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1647) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1647) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1647) CFA_SP SP+-4
          CFI (cfiCond1647) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1648 Using cfiCommon0
          CFI (cfiCond1648) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1648) Conditional ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_567
          CFI (cfiCond1648) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1648) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1648) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1648) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1648) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1648) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1648) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1648) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1648) CFA_SP SP+-4
          CFI (cfiCond1648) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1649 Using cfiCommon0
          CFI (cfiCond1649) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1649) Conditional ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_568
          CFI (cfiCond1649) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1649) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1649) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1649) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1649) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1649) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1649) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1649) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1649) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1649) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1649) CFA_SP SP+-4
          CFI (cfiCond1649) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1650 Using cfiCommon0
          CFI (cfiCond1650) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1650) Conditional ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_569
          CFI (cfiCond1650) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1650) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1650) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1650) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1650) CFA_SP SP+-4
          CFI (cfiCond1650) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1651 Using cfiCommon0
          CFI (cfiCond1651) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1651) Conditional ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_4
          CFI (cfiCond1651) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1651) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1651) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1651) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1651) CFA_SP SP+-4
          CFI (cfiCond1651) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1652 Using cfiCommon0
          CFI (cfiCond1652) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1652) Conditional ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_5
          CFI (cfiCond1652) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1652) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1652) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1652) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1652) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1652) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1652) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1652) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1652) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1652) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1652) CFA_SP SP+-4
          CFI (cfiCond1652) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1653 Using cfiCommon0
          CFI (cfiCond1653) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1653) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_27
          CFI (cfiCond1653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1653) CFA_SP SP+-4
          CFI (cfiCond1653) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1654 Using cfiCommon0
          CFI (cfiCond1654) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1654) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_28
          CFI (cfiCond1654) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1654) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1654) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1654) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1654) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1654) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1654) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1654) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1654) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1654) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1654) CFA_SP SP+-4
          CFI (cfiCond1654) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1655 Using cfiCommon0
          CFI (cfiCond1655) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1655) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_535
          CFI (cfiCond1655) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1655) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1655) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1655) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1655) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1655) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1655) CFA_SP SP+-4
          CFI (cfiCond1655) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1656 Using cfiCommon0
          CFI (cfiCond1656) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1656) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_536
          CFI (cfiCond1656) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1656) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1656) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1656) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1656) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1656) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1656) CFA_SP SP+-4
          CFI (cfiCond1656) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1657 Using cfiCommon0
          CFI (cfiCond1657) Function ZDO_CopyMatchInfo
          CFI (cfiCond1657) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_531
          CFI (cfiCond1657) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1657) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1657) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1657) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1657) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1657) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1657) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1657) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1657) CFA_SP SP+-4
          CFI (cfiCond1657) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1658 Using cfiCommon0
          CFI (cfiCond1658) Function ZDO_CopyMatchInfo
          CFI (cfiCond1658) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_532
          CFI (cfiCond1658) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1658) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1658) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1658) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1658) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1658) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1658) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1658) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1658) CFA_SP SP+-4
          CFI (cfiCond1658) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1659 Using cfiCommon0
          CFI (cfiCond1659) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1659) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_534
          CFI (cfiCond1659) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1659) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1659) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1659) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1659) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1659) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1659) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1659) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1659) CFA_SP SP+-4
          CFI (cfiCond1659) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1660 Using cfiCommon0
          CFI (cfiCond1660) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1660) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_533
          CFI (cfiCond1660) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1660) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1660) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1660) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1660) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1660) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1660) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1660) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1660) CFA_SP SP+-4
          CFI (cfiCond1660) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1661 Using cfiCommon1
          CFI (cfiPicker1661) NoFunction
          CFI (cfiPicker1661) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1626
          CFI EndBlock cfiCond1627
          CFI EndBlock cfiCond1628
          CFI EndBlock cfiCond1629
          CFI EndBlock cfiCond1630
          CFI EndBlock cfiCond1631
          CFI EndBlock cfiCond1632
          CFI EndBlock cfiCond1633
          CFI EndBlock cfiCond1634
          CFI EndBlock cfiCond1635
          CFI EndBlock cfiCond1636
          CFI EndBlock cfiCond1637
          CFI EndBlock cfiCond1638
          CFI EndBlock cfiCond1639
          CFI EndBlock cfiCond1640
          CFI EndBlock cfiCond1641
          CFI EndBlock cfiCond1642
          CFI EndBlock cfiCond1643
          CFI EndBlock cfiCond1644
          CFI EndBlock cfiCond1645
          CFI EndBlock cfiCond1646
          CFI EndBlock cfiCond1647
          CFI EndBlock cfiCond1648
          CFI EndBlock cfiCond1649
          CFI EndBlock cfiCond1650
          CFI EndBlock cfiCond1651
          CFI EndBlock cfiCond1652
          CFI EndBlock cfiCond1653
          CFI EndBlock cfiCond1654
          CFI EndBlock cfiCond1655
          CFI EndBlock cfiCond1656
          CFI EndBlock cfiCond1657
          CFI EndBlock cfiCond1658
          CFI EndBlock cfiCond1659
          CFI EndBlock cfiCond1660
          CFI EndBlock cfiPicker1661
// 2931 
// 2932 /*********************************************************************
// 2933  * @fn          ZDO_ParseUserDescRsp
// 2934  *
// 2935  * @brief       This function parses the incoming User
// 2936  *              Descriptor Response.
// 2937  *
// 2938  * @param       inMsg - incoming response message
// 2939  *
// 2940  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2941  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2942  *          by the calling function [osal_mem_free()].
// 2943  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2944 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock1662 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 2945 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
// 2946   ZDO_UserDescRsp_t *pRsp;
// 2947   uint8 *msg;
// 2948   uint8 descLen = 0;
        LCALL     ?Subroutine70 & 0xFFFF
// 2949 
// 2950   msg = inMsg->asdu;
// 2951 
// 2952   if ( msg[0] == ZSuccess )
??CrossCallReturnLabel_638:
        JNZ       ??ZDO_ParseUserDescRsp_0
// 2953     descLen = msg[3];
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
// 2954 
// 2955   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_668:
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2956   if ( pRsp )
        MOV       A,R2
        ORL       A,?V3
        JZ        ??ZDO_ParseUserDescRsp_1
// 2957   {
// 2958     pRsp->status = msg[0];
        LCALL     ?Subroutine97 & 0xFFFF
// 2959     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_161:
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_343:
        MOV       DPL,?V2
        MOV       DPH,R3
        INC       DPTR
        LCALL     ??Subroutine223_0 & 0xFFFF
// 2960     pRsp->length = descLen;
??CrossCallReturnLabel_372:
        MOV       DPL,?V2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
// 2961     if ( descLen )
        JZ        ??ZDO_ParseUserDescRsp_1
// 2962       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,R6
        ADD       A,#0x4
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       ?V6,R0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,?V2
        LCALL     ??Subroutine269_0 & 0xFFFF
// 2963   }
??CrossCallReturnLabel_665:
        ADDC      A,?V3
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2964 
// 2965   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        MOV       R2,?V2
        MOV       R3,?V3
        LJMP      ?Subroutine6 & 0xFFFF
// 2966 }
          CFI EndBlock cfiBlock1662

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond1663 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_666
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1664 Using cfiCommon0
          CFI (cfiCond1664) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1664) Conditional ??CrossCallReturnLabel_667
          CFI (cfiCond1664) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1664) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1664) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1664) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1664) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1664) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1664) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1664) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1664) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1664) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1664) CFA_SP SP+-2
          CFI (cfiCond1664) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1665 Using cfiCommon0
          CFI (cfiCond1665) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1665) Conditional ??CrossCallReturnLabel_668
          CFI (cfiCond1665) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1665) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1665) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1665) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1665) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1665) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1665) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1665) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1665) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1665) CFA_SP SP+-2
          CFI (cfiCond1665) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1666 Using cfiCommon1
          CFI (cfiPicker1666) NoFunction
          CFI (cfiPicker1666) Picker
        MOV       A,?V0
          CFI EndBlock cfiCond1663
          CFI EndBlock cfiCond1664
          CFI EndBlock cfiCond1665
          CFI EndBlock cfiPicker1666
        REQUIRE ??Subroutine269_0
        ; // Fall through to label ??Subroutine269_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine269_0:
          CFI Block cfiCond1667 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_663
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1668 Using cfiCommon0
          CFI (cfiCond1668) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1668) Conditional ??CrossCallReturnLabel_664
          CFI (cfiCond1668) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1668) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1668) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1668) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1668) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1668) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1668) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1668) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1668) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1668) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1668) CFA_SP SP+-2
          CFI (cfiCond1668) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1669 Using cfiCommon0
          CFI (cfiCond1669) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1669) Conditional ??CrossCallReturnLabel_665
          CFI (cfiCond1669) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1669) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1669) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1669) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1669) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1669) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1669) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1669) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1669) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1669) CFA_SP SP+-2
          CFI (cfiCond1669) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1670 Using cfiCommon0
          CFI (cfiCond1670) Function ZDO_ParseEPListRsp
          CFI (cfiCond1670) Conditional ??CrossCallReturnLabel_666
          CFI (cfiCond1670) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1670) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1670) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1670) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1670) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1670) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1670) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1670) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1670) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1670) CFA_SP SP+-2
          CFI (cfiCond1670) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1671 Using cfiCommon0
          CFI (cfiCond1671) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1671) Conditional ??CrossCallReturnLabel_667
          CFI (cfiCond1671) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1671) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1671) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1671) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1671) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1671) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1671) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1671) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1671) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1671) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1671) CFA_SP SP+-2
          CFI (cfiCond1671) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1672 Using cfiCommon0
          CFI (cfiCond1672) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1672) Conditional ??CrossCallReturnLabel_668
          CFI (cfiCond1672) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1672) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1672) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1672) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1672) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1672) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1672) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1672) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1672) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1672) CFA_SP SP+-2
          CFI (cfiCond1672) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1673 Using cfiCommon1
          CFI (cfiPicker1673) NoFunction
          CFI (cfiPicker1673) Picker
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        RET
          CFI EndBlock cfiCond1667
          CFI EndBlock cfiCond1668
          CFI EndBlock cfiCond1669
          CFI EndBlock cfiCond1670
          CFI EndBlock cfiCond1671
          CFI EndBlock cfiCond1672
          CFI EndBlock cfiPicker1673

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond1674 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1675 Using cfiCommon0
          CFI (cfiCond1675) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1675) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond1675) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1675) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1675) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1675) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1675) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1675) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1675) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1675) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1675) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1675) CFA_SP SP+-2
          CFI (cfiCond1675) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1676 Using cfiCommon1
          CFI (cfiPicker1676) NoFunction
          CFI (cfiPicker1676) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_446:
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_270:
        RET
          CFI EndBlock cfiCond1674
          CFI EndBlock cfiCond1675
          CFI EndBlock cfiPicker1676

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine161:
          CFI Block cfiCond1677 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1678 Using cfiCommon0
          CFI (cfiCond1678) Function ZDO_ParseAddrRsp
          CFI (cfiCond1678) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_23
          CFI (cfiCond1678) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1678) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1678) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1678) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1678) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1678) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1678) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1678) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1678) CFA_SP SP+-4
          CFI (cfiCond1678) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1679 Using cfiCommon0
          CFI (cfiCond1679) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1679) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_24
          CFI (cfiCond1679) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1679) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1679) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1679) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1679) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1679) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1679) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1679) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1679) CFA_SP SP+-4
          CFI (cfiCond1679) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1680 Using cfiCommon0
          CFI (cfiCond1680) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1680) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_18
          CFI (cfiCond1680) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1680) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1680) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1680) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1680) CFA_SP SP+-4
          CFI (cfiCond1680) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1681 Using cfiCommon0
          CFI (cfiCond1681) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1681) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_19
          CFI (cfiCond1681) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1681) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1681) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1681) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1681) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1681) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1681) CFA_SP SP+-4
          CFI (cfiCond1681) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1682 Using cfiCommon0
          CFI (cfiCond1682) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1682) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_20
          CFI (cfiCond1682) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1682) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1682) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1682) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1682) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1682) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1682) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1682) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1682) CFA_SP SP+-4
          CFI (cfiCond1682) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1683 Using cfiCommon0
          CFI (cfiCond1683) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1683) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_21
          CFI (cfiCond1683) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1683) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1683) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1683) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1683) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1683) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1683) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1683) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1683) CFA_SP SP+-4
          CFI (cfiCond1683) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1684 Using cfiCommon0
          CFI (cfiCond1684) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1684) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_160
          CFI (cfiCond1684) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1684) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1684) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1684) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1684) CFA_SP SP+-4
          CFI (cfiCond1684) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1685 Using cfiCommon0
          CFI (cfiCond1685) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1685) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_161
          CFI (cfiCond1685) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1685) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1685) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1685) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1685) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1685) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1685) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1685) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1685) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1685) CFA_SP SP+-4
          CFI (cfiCond1685) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker1686 Using cfiCommon1
          CFI (cfiPicker1686) NoFunction
          CFI (cfiPicker1686) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        RET
          CFI EndBlock cfiCond1677
          CFI EndBlock cfiCond1678
          CFI EndBlock cfiCond1679
          CFI EndBlock cfiCond1680
          CFI EndBlock cfiCond1681
          CFI EndBlock cfiCond1682
          CFI EndBlock cfiCond1683
          CFI EndBlock cfiCond1684
          CFI EndBlock cfiCond1685
          CFI EndBlock cfiPicker1686
// 2967 
// 2968 /*********************************************************************
// 2969  * @fn          ZDO_ParseSimpleDescBuf
// 2970  *
// 2971  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 2972  *
// 2973  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 2974  * @param       desc - SimpleDescriptionFormat_t *
// 2975  *
// 2976  *              This routine allocates storage for the cluster IDs because
// 2977  *              they are 16-bit and need to be aligned to be properly processed.
// 2978  *              This routine returns non-zero if an allocation fails.
// 2979  *
// 2980  *              NOTE: This means that the caller or user of the input structure
// 2981  *                    is responsible for freeing the memory
// 2982  *
// 2983  * @return      0: success
// 2984  *              1: failure due to malloc failure.
// 2985  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2986 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock1687 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 2987 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2988   uint8 num, i;
// 2989 
// 2990   desc->EndPoint = *buf++;
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine271_0 & 0xFFFF
??CrossCallReturnLabel_678:
        LCALL     ?Subroutine22 & 0xFFFF
// 2991   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_24:
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_164:
        LCALL     ?Subroutine20 & 0xFFFF
// 2992   buf += 2;
??CrossCallReturnLabel_567:
        JNC       ??ZDO_ParseSimpleDescBuf_0
        INC       R7
// 2993   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_0:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_165:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine21 & 0xFFFF
// 2994   buf += 2;
// 2995   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_21:
        SWAP      A
        ANL       A,#0xf
// 2996 
// 2997   desc->Reserved = 0;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine41 & 0xFFFF
// 2998   buf++;
// 2999 
// 3000   // move in input cluster list (if any). allocate aligned memory.
// 3001   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_56:
        MOV       ?V4,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseSimpleDescBuf_1
        INC       R7
??ZDO_ParseSimpleDescBuf_1:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V4
        MOVX      @DPTR,A
// 3002   if ( num )
        JZ        ??ZDO_ParseSimpleDescBuf_2
// 3003   {
// 3004     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ??Subroutine270_0 & 0xFFFF
??CrossCallReturnLabel_673:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R0,?V2
        MOV       R1,?V3
        MOV       A,?V0
        ADD       A,#0x7
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V1
        MOV       DPL,?V2
        LCALL     ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_534:
        JNZ       $+5
        LJMP      ??ZDO_ParseSimpleDescBuf_3 & 0xFFFF
// 3005     {
// 3006       // malloc failed. we're done.
// 3007       return 1;
// 3008     }
// 3009     for (i=0; i<num; ++i)
        MOV       R0,#0x0
        SJMP      ??ZDO_ParseSimpleDescBuf_4
// 3010     {
// 3011       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_5:
        LCALL     ?Subroutine52 & 0xFFFF
// 3012       buf += 2;
// 3013     }
??CrossCallReturnLabel_76:
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_62:
        JNC       ??ZDO_ParseSimpleDescBuf_6
        INC       R7
??ZDO_ParseSimpleDescBuf_6:
        INC       R0
??ZDO_ParseSimpleDescBuf_4:
        MOV       A,R0
        CLR       C
        SUBB      A,?V4
        JC        ??ZDO_ParseSimpleDescBuf_5
// 3014   }
// 3015 
// 3016   // move in output cluster list (if any). allocate aligned memory.
// 3017   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_2:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3018   if (num)
        JZ        ??ZDO_ParseSimpleDescBuf_7
// 3019   {
// 3020     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ??Subroutine270_0 & 0xFFFF
??CrossCallReturnLabel_674:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R0,?V4
        MOV       R1,?V5
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine247_0 & 0xFFFF
??CrossCallReturnLabel_533:
        JNZ       ??ZDO_ParseSimpleDescBuf_8
// 3021     {
// 3022       // malloc failed. free input cluster list memory if there is any
// 3023       if ( desc->pAppInClusterList != NULL )
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_497:
        JZ        ??ZDO_ParseSimpleDescBuf_3
// 3024       {
// 3025         osal_mem_free(desc->pAppInClusterList);
        MOV       A,?V0
        ADD       A,#0x7
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V3,A
        ; Setup parameters for call to function osal_mem_free
        MOV       DPL,?V2
        LCALL     ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_473:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3026         
// 3027         desc->pAppInClusterList = NULL;
        MOV       DPL,?V2
        MOV       DPH,?V3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3028       }
// 3029       return 1;
??ZDO_ParseSimpleDescBuf_3:
        MOV       R1,#0x1
        SJMP      ??ZDO_ParseSimpleDescBuf_9
// 3030     }
// 3031     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_8:
        MOV       R0,#0x0
        SJMP      ??ZDO_ParseSimpleDescBuf_10
// 3032     {
// 3033       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_11:
        LCALL     ?Subroutine52 & 0xFFFF
// 3034       buf += 2;
// 3035     }
??CrossCallReturnLabel_77:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_63:
        JNC       ??ZDO_ParseSimpleDescBuf_12
        INC       R7
??ZDO_ParseSimpleDescBuf_12:
        INC       R0
??ZDO_ParseSimpleDescBuf_10:
        MOV       A,R0
        CLR       C
        SUBB      A,?V2
        JC        ??ZDO_ParseSimpleDescBuf_11
// 3036   }
// 3037   return 0;
??ZDO_ParseSimpleDescBuf_7:
        MOV       R1,#0x0
??ZDO_ParseSimpleDescBuf_9:
        LJMP      ??Subroutine274_0 & 0xFFFF
// 3038 }
          CFI EndBlock cfiBlock1687

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond1688 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_675
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1689 Using cfiCommon0
          CFI (cfiCond1689) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1689) Conditional ??CrossCallReturnLabel_676
          CFI (cfiCond1689) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1689) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1689) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1689) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1689) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1689) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1689) CFA_SP SP+-2
          CFI (cfiCond1689) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1690 Using cfiCommon1
          CFI (cfiPicker1690) NoFunction
          CFI (cfiPicker1690) Picker
        MOV       R0,A
          CFI EndBlock cfiCond1688
          CFI EndBlock cfiCond1689
          CFI EndBlock cfiPicker1690
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        REQUIRE ??Subroutine270_0
        ; // Fall through to label ??Subroutine270_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine270_0:
          CFI Block cfiCond1691 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_669
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1692 Using cfiCommon0
          CFI (cfiCond1692) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1692) Conditional ??CrossCallReturnLabel_670
          CFI (cfiCond1692) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1692) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1692) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1692) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1692) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1692) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1692) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1692) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1692) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1692) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1692) CFA_SP SP+-2
          CFI (cfiCond1692) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1693 Using cfiCommon0
          CFI (cfiCond1693) Function ZDO_CopyMatchInfo
          CFI (cfiCond1693) Conditional ??CrossCallReturnLabel_671
          CFI (cfiCond1693) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1693) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1693) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1693) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1693) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1693) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1693) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1693) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1693) CFA_SP SP+-2
          CFI (cfiCond1693) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1694 Using cfiCommon0
          CFI (cfiCond1694) Function ZDO_CopyMatchInfo
          CFI (cfiCond1694) Conditional ??CrossCallReturnLabel_672
          CFI (cfiCond1694) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1694) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1694) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1694) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1694) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1694) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1694) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1694) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1694) CFA_SP SP+-2
          CFI (cfiCond1694) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1695 Using cfiCommon0
          CFI (cfiCond1695) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1695) Conditional ??CrossCallReturnLabel_673
          CFI (cfiCond1695) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1695) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1695) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1695) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1695) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1695) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1695) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1695) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1695) CFA_SP SP+-2
          CFI (cfiCond1695) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1696 Using cfiCommon0
          CFI (cfiCond1696) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1696) Conditional ??CrossCallReturnLabel_674
          CFI (cfiCond1696) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1696) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1696) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1696) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1696) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1696) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1696) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1696) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1696) CFA_SP SP+-2
          CFI (cfiCond1696) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1697 Using cfiCommon0
          CFI (cfiCond1697) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1697) Conditional ??CrossCallReturnLabel_675
          CFI (cfiCond1697) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1697) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1697) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1697) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1697) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1697) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1697) CFA_SP SP+-2
          CFI (cfiCond1697) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1698 Using cfiCommon0
          CFI (cfiCond1698) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1698) Conditional ??CrossCallReturnLabel_676
          CFI (cfiCond1698) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1698) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1698) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1698) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1698) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1698) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1698) CFA_SP SP+-2
          CFI (cfiCond1698) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1699 Using cfiCommon1
          CFI (cfiPicker1699) NoFunction
          CFI (cfiPicker1699) Picker
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        RET
          CFI EndBlock cfiCond1691
          CFI EndBlock cfiCond1692
          CFI EndBlock cfiCond1693
          CFI EndBlock cfiCond1694
          CFI EndBlock cfiCond1695
          CFI EndBlock cfiCond1696
          CFI EndBlock cfiCond1697
          CFI EndBlock cfiCond1698
          CFI EndBlock cfiPicker1699

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond1700 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_679
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1701 Using cfiCommon0
          CFI (cfiCond1701) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1701) Conditional ??CrossCallReturnLabel_680
          CFI (cfiCond1701) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1701) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1701) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1701) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1701) CFA_SP SP+-2
          CFI (cfiCond1701) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1702 Using cfiCommon1
          CFI (cfiPicker1702) NoFunction
          CFI (cfiPicker1702) Picker
        INC       DPTR
          CFI EndBlock cfiCond1700
          CFI EndBlock cfiCond1701
          CFI EndBlock cfiPicker1702
        REQUIRE ??Subroutine271_0
        ; // Fall through to label ??Subroutine271_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine271_0:
          CFI Block cfiCond1703 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_677
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1704 Using cfiCommon0
          CFI (cfiCond1704) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1704) Conditional ??CrossCallReturnLabel_678
          CFI (cfiCond1704) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1704) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1704) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1704) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1704) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1704) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1704) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1704) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1704) CFA_SP SP+-2
          CFI (cfiCond1704) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1705 Using cfiCommon0
          CFI (cfiCond1705) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1705) Conditional ??CrossCallReturnLabel_679
          CFI (cfiCond1705) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1705) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1705) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1705) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1705) CFA_SP SP+-2
          CFI (cfiCond1705) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1706 Using cfiCommon0
          CFI (cfiCond1706) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1706) Conditional ??CrossCallReturnLabel_680
          CFI (cfiCond1706) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1706) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1706) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1706) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1706) CFA_SP SP+-2
          CFI (cfiCond1706) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1707 Using cfiCommon1
          CFI (cfiPicker1707) NoFunction
          CFI (cfiPicker1707) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1703
          CFI EndBlock cfiCond1704
          CFI EndBlock cfiCond1705
          CFI EndBlock cfiCond1706
          CFI EndBlock cfiPicker1707

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond1708 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1709 Using cfiCommon0
          CFI (cfiCond1709) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1709) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond1709) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1709) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1709) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1709) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1709) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1709) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1709) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1709) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1709) CFA_SP SP+-2
          CFI (cfiCond1709) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1710 Using cfiCommon1
          CFI (cfiPicker1710) NoFunction
          CFI (cfiPicker1710) Picker
        MOVX      A,@DPTR
        LCALL     ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_696:
        RET
          CFI EndBlock cfiCond1708
          CFI EndBlock cfiCond1709
          CFI EndBlock cfiPicker1710

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond1711 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1712 Using cfiCommon0
          CFI (cfiCond1712) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1712) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond1712) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1712) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1712) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1712) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1712) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1712) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1712) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1712) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1712) CFA_SP SP+-2
          CFI (cfiCond1712) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1713 Using cfiCommon1
          CFI (cfiPicker1713) NoFunction
          CFI (cfiPicker1713) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        CLR       A
        XCH       A,R2
        MOV       R3,A
        MOV       A,R4
        ADD       A,R2
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        MOV       A,R0
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond1711
          CFI EndBlock cfiCond1712
          CFI EndBlock cfiPicker1713

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond1714 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1715 Using cfiCommon0
          CFI (cfiCond1715) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1715) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond1715) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1715) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1715) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1715) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1715) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1715) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1715) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1715) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1715) CFA_SP SP+-2
          CFI (cfiCond1715) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1716 Using cfiCommon1
          CFI (cfiPicker1716) NoFunction
          CFI (cfiPicker1716) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ADD       A,R2
        MOV       R1,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R3
        MOV       DPL,R1
        MOV       DPH,A
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1714
          CFI EndBlock cfiCond1715
          CFI EndBlock cfiPicker1716

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond1717 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1718 Using cfiCommon0
          CFI (cfiCond1718) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1718) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond1718) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1718) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1718) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1718) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1718) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1718) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1718) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1718) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1718) CFA_SP SP+-2
          CFI (cfiCond1718) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1719 Using cfiCommon1
          CFI (cfiPicker1719) NoFunction
          CFI (cfiPicker1719) Picker
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_268:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1717
          CFI EndBlock cfiCond1718
          CFI EndBlock cfiPicker1719
// 3039 
// 3040 /*********************************************************************
// 3041  * @fn          ZDO_ParseDeviceAnnce
// 3042  *
// 3043  * @brief       Parse a Device Announce message.
// 3044  *
// 3045  * @param       inMsg - Incoming message
// 3046  * @param       pAnnce - place to put the parsed information
// 3047  *
// 3048  * @return      none
// 3049  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3050 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1720 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3051 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine119 & 0xFFFF
// 3052   uint8 *msg;
// 3053 
// 3054   // Parse incoming message
// 3055   msg = inMsg->asdu;
??CrossCallReturnLabel_682:
        MOV       DPH,A
        LCALL     ?Subroutine58 & 0xFFFF
// 3056   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_91:
        LCALL     ??Subroutine256_0 & 0xFFFF
// 3057   msg += 2;
??CrossCallReturnLabel_569:
        JNC       ??ZDO_ParseDeviceAnnce_0
        INC       R7
// 3058   osal_cpyExtAddr( pAnnce->extAddr, msg );
??ZDO_ParseDeviceAnnce_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3059   msg += Z_EXTADDR_LEN;
// 3060   pAnnce->capabilities = *msg;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_146:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3061 }
        LJMP      ??Subroutine214_0 & 0xFFFF
          CFI EndBlock cfiBlock1720

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond1721 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_681
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1722 Using cfiCommon0
          CFI (cfiCond1722) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1722) Conditional ??CrossCallReturnLabel_682
          CFI (cfiCond1722) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1722) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1722) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1722) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1722) CFA_SP SP+-2
          CFI (cfiCond1722) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1723 Using cfiCommon0
          CFI (cfiCond1723) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1723) Conditional ??CrossCallReturnLabel_683
          CFI (cfiCond1723) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1723) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1723) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1723) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1723) CFA_SP SP+-2
          CFI (cfiCond1723) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1724 Using cfiCommon1
          CFI (cfiPicker1724) NoFunction
          CFI (cfiPicker1724) Picker
        MOV       ?V0,R4
        MOV       ?V1,R5
          CFI EndBlock cfiCond1721
          CFI EndBlock cfiCond1722
          CFI EndBlock cfiCond1723
          CFI EndBlock cfiPicker1724
        REQUIRE ??Subroutine272_0
        ; // Fall through to label ??Subroutine272_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine272_0:
          CFI Block cfiCond1725 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_684
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1726 Using cfiCommon0
          CFI (cfiCond1726) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1726) Conditional ??CrossCallReturnLabel_681
          CFI (cfiCond1726) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1726) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1726) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1726) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1726) CFA_SP SP+-2
          CFI (cfiCond1726) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1727 Using cfiCommon0
          CFI (cfiCond1727) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1727) Conditional ??CrossCallReturnLabel_682
          CFI (cfiCond1727) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1727) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1727) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1727) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1727) CFA_SP SP+-2
          CFI (cfiCond1727) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1728 Using cfiCommon0
          CFI (cfiCond1728) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1728) Conditional ??CrossCallReturnLabel_683
          CFI (cfiCond1728) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1728) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1728) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1728) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1728) CFA_SP SP+-2
          CFI (cfiCond1728) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1729 Using cfiCommon1
          CFI (cfiPicker1729) NoFunction
          CFI (cfiPicker1729) Picker
        LCALL     ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_689:
        RET
          CFI EndBlock cfiCond1725
          CFI EndBlock cfiCond1726
          CFI EndBlock cfiCond1727
          CFI EndBlock cfiCond1728
          CFI EndBlock cfiPicker1729

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine185:
          CFI Block cfiCond1730 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_685, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1731 Using cfiCommon0
          CFI (cfiCond1731) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1731) Conditional ??CrossCallReturnLabel_685, ??CrossCallReturnLabel_3
          CFI (cfiCond1731) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1731) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1731) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1731) CFA_SP SP+-4
          CFI (cfiCond1731) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1732 Using cfiCommon0
          CFI (cfiCond1732) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1732) Conditional ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_637
          CFI (cfiCond1732) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1732) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1732) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1732) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1732) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1732) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1732) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1732) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1732) CFA_SP SP+-4
          CFI (cfiCond1732) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1733 Using cfiCommon0
          CFI (cfiCond1733) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1733) Conditional ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_638
          CFI (cfiCond1733) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1733) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1733) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1733) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1733) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1733) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1733) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1733) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1733) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1733) CFA_SP SP+-4
          CFI (cfiCond1733) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1734 Using cfiCommon0
          CFI (cfiCond1734) Function ZDO_ParseEPListRsp
          CFI (cfiCond1734) Conditional ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_639
          CFI (cfiCond1734) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1734) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1734) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1734) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1734) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1734) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1734) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1734) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1734) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1734) CFA_SP SP+-4
          CFI (cfiCond1734) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1735 Using cfiCommon0
          CFI (cfiCond1735) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1735) Conditional ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_640
          CFI (cfiCond1735) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1735) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1735) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1735) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1735) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1735) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1735) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1735) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1735) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1735) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1735) CFA_SP SP+-4
          CFI (cfiCond1735) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1736 Using cfiCommon0
          CFI (cfiCond1736) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1736) Conditional ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_112
          CFI (cfiCond1736) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1736) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1736) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1736) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1736) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1736) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1736) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1736) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1736) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1736) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1736) CFA_SP SP+-4
          CFI (cfiCond1736) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1737 Using cfiCommon0
          CFI (cfiCond1737) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1737) Conditional ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_113
          CFI (cfiCond1737) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1737) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1737) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1737) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1737) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1737) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1737) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1737) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1737) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1737) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1737) CFA_SP SP+-4
          CFI (cfiCond1737) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1738 Using cfiCommon0
          CFI (cfiCond1738) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1738) Conditional ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_681
          CFI (cfiCond1738) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1738) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1738) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1738) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1738) CFA_SP SP+-4
          CFI (cfiCond1738) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1739 Using cfiCommon0
          CFI (cfiCond1739) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1739) Conditional ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_682
          CFI (cfiCond1739) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1739) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1739) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1739) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1739) CFA_SP SP+-4
          CFI (cfiCond1739) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1740 Using cfiCommon0
          CFI (cfiCond1740) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1740) Conditional ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_683
          CFI (cfiCond1740) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1740) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1740) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1740) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1740) CFA_SP SP+-4
          CFI (cfiCond1740) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1741 Using cfiCommon0
          CFI (cfiCond1741) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1741) Conditional ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_684
          CFI (cfiCond1741) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1741) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1741) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1741) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1741) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1741) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1741) CFA_SP SP+-4
          CFI (cfiCond1741) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1742 Using cfiCommon0
          CFI (cfiCond1742) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1742) Conditional ??CrossCallReturnLabel_686, ??CrossCallReturnLabel_44
          CFI (cfiCond1742) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1742) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1742) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1742) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1742) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1742) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1742) CFA_SP SP+-4
          CFI (cfiCond1742) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1743 Using cfiCommon0
          CFI (cfiCond1743) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1743) Conditional ??CrossCallReturnLabel_686, ??CrossCallReturnLabel_45
          CFI (cfiCond1743) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1743) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1743) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1743) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1743) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1743) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1743) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1743) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1743) CFA_SP SP+-4
          CFI (cfiCond1743) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1744 Using cfiCommon1
          CFI (cfiPicker1744) NoFunction
          CFI (cfiPicker1744) Picker
        MOV       A,R2
        LCALL     ?Subroutine206 & 0xFFFF
??CrossCallReturnLabel_693:
        ADDC      A,R3
        RET
          CFI EndBlock cfiCond1730
          CFI EndBlock cfiCond1731
          CFI EndBlock cfiCond1732
          CFI EndBlock cfiCond1733
          CFI EndBlock cfiCond1734
          CFI EndBlock cfiCond1735
          CFI EndBlock cfiCond1736
          CFI EndBlock cfiCond1737
          CFI EndBlock cfiCond1738
          CFI EndBlock cfiCond1739
          CFI EndBlock cfiCond1740
          CFI EndBlock cfiCond1741
          CFI EndBlock cfiCond1742
          CFI EndBlock cfiCond1743
          CFI EndBlock cfiPicker1744

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond1745 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_90
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1746 Using cfiCommon0
          CFI (cfiCond1746) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1746) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond1746) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1746) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1746) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1746) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1746) CFA_SP SP+-2
          CFI (cfiCond1746) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1747 Using cfiCommon1
          CFI (cfiPicker1747) NoFunction
          CFI (cfiPicker1747) Picker
        LCALL     ??Subroutine265_0 & 0xFFFF
??CrossCallReturnLabel_644:
        LCALL     ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_695:
        RET
          CFI EndBlock cfiCond1745
          CFI EndBlock cfiCond1746
          CFI EndBlock cfiPicker1747

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine176:
          CFI Block cfiCond1748 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1749 Using cfiCommon0
          CFI (cfiCond1749) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1749) Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_165
          CFI (cfiCond1749) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1749) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1749) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1749) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1749) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1749) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1749) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1749) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1749) CFA_SP SP+-4
          CFI (cfiCond1749) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1750 Using cfiCommon0
          CFI (cfiCond1750) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1750) Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_90
          CFI (cfiCond1750) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1750) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1750) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1750) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1750) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1750) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1750) CFA_SP SP+-4
          CFI (cfiCond1750) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1751 Using cfiCommon0
          CFI (cfiCond1751) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1751) Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_91
          CFI (cfiCond1751) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1751) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1751) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1751) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1751) CFA_SP SP+-4
          CFI (cfiCond1751) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1752 Using cfiCommon1
          CFI (cfiPicker1752) NoFunction
          CFI (cfiPicker1752) Picker
        MOV       R2,A
          CFI EndBlock cfiCond1748
          CFI EndBlock cfiCond1749
          CFI EndBlock cfiCond1750
          CFI EndBlock cfiCond1751
          CFI EndBlock cfiPicker1752
        REQUIRE ??Subroutine273_0
        ; // Fall through to label ??Subroutine273_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine273_0:
          CFI Block cfiCond1753 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_694
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1754 Using cfiCommon0
          CFI (cfiCond1754) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1754) Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_164
          CFI (cfiCond1754) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1754) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1754) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1754) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1754) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1754) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1754) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1754) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1754) CFA_SP SP+-4
          CFI (cfiCond1754) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1755 Using cfiCommon0
          CFI (cfiCond1755) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1755) Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_165
          CFI (cfiCond1755) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1755) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1755) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1755) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1755) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1755) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1755) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1755) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1755) CFA_SP SP+-4
          CFI (cfiCond1755) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1756 Using cfiCommon0
          CFI (cfiCond1756) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1756) Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_90
          CFI (cfiCond1756) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1756) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1756) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1756) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1756) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1756) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1756) CFA_SP SP+-4
          CFI (cfiCond1756) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1757 Using cfiCommon0
          CFI (cfiCond1757) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1757) Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_91
          CFI (cfiCond1757) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1757) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1757) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1757) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1757) CFA_SP SP+-4
          CFI (cfiCond1757) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1758 Using cfiCommon1
          CFI (cfiPicker1758) NoFunction
          CFI (cfiPicker1758) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1753
          CFI EndBlock cfiCond1754
          CFI EndBlock cfiCond1755
          CFI EndBlock cfiCond1756
          CFI EndBlock cfiCond1757
          CFI EndBlock cfiPicker1758
// 3062 
// 3063 /*********************************************************************
// 3064  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3065  *
// 3066  * @brief       This function handles parsing of the incoming Management
// 3067  *              Network Update notify.
// 3068  *
// 3069  * @param       inMsg - incoming message (request)
// 3070  *
// 3071  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3072  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3073  *          by the calling function [osal_mem_free()].
// 3074  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3075 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1759 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3076 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 3077   uint8 status;
// 3078   uint32 scannedChannels = 0;
        MOV       ?V0,#0x0
        MOV       ?V1,#0x0
        MOV       ?V2,#0x0
        MOV       ?V3,#0x0
// 3079   uint16 totalTransmissions = 0;
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 3080   uint16 transmissionFailures = 0;
        MOV       R6,#0x0
        MOV       R7,#0x0
// 3081   uint8 listCount = 0;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine32 & 0xFFFF
// 3082   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_45:
        LCALL     ?Subroutine26 & 0xFFFF
// 3083   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3084 
// 3085   status = *msg++;
??CrossCallReturnLabel_30:
        MOV       DPH,A
        MOV       DPL,R0
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_34:
        ADD       A,#0x1
        LCALL     ?Subroutine37 & 0xFFFF
// 3086   if ( status == ZSuccess )
??CrossCallReturnLabel_381:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JNZ       ??CrossCallReturnLabel_382
// 3087   {
// 3088     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV       R1,#0x4
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_470:
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       ?V2,R4
        MOV       ?V3,R5
// 3089     msg += 4;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        ADD       A,#0x4
        LCALL     ?Subroutine9 & 0xFFFF
// 3090     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_0:
        MOV       ?V4,A
        CLR       A
        ADDC      A,R1
        MOV       ?V5,A
// 3091     msg += 2;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        ADD       A,#0x2
        LCALL     ?Subroutine9 & 0xFFFF
// 3092     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_1:
        MOV       R6,A
        CLR       A
        ADDC      A,R1
        MOV       R7,A
// 3093     msg += 2;
// 3094     listCount = *msg++;
        LCALL     ?Subroutine101 & 0xFFFF
// 3095   }
??CrossCallReturnLabel_350:
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_35:
        ADD       A,#0x3
        LCALL     ?Subroutine37 & 0xFFFF
// 3096 
// 3097   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??CrossCallReturnLabel_382:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 3098 
// 3099   if ( pRsp )
??CrossCallReturnLabel_396:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_498:
        JNZ       $+5
        LJMP      ??ZDO_ParseMgmtNwkUpdateNotify_0 & 0xFFFF
// 3100   {
// 3101     pRsp->status = status;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine208 & 0xFFFF
??CrossCallReturnLabel_412:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3102     pRsp->scannedChannels = scannedChannels;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R0,A
        LCALL     ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_348:
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 3103     pRsp->totalTransmissions = totalTransmissions;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_135:
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 3104     pRsp->transmissionFailures = transmissionFailures;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_576:
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_231:
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
// 3105     pRsp->listCount = listCount;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_137:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3106 
// 3107     // Allocate a buffer big enough to handle the list.
// 3108     if ( listCount > 0 )
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JZ        ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3109       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine57 & 0xFFFF
// 3110   }
??CrossCallReturnLabel_89:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xa
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 3111 
// 3112   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_471:
        MOV       A,#0x6
          CFI EndBlock cfiBlock1759
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 3113 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock1760 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock1760
        REQUIRE ??Subroutine274_0
        ; // Fall through to label ??Subroutine274_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine274_0:
          CFI Block cfiBlock1761 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1761

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond1762 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1763 Using cfiCommon0
          CFI (cfiCond1763) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1763) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond1763) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1763) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1763) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1763) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1763) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1763) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1763) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1763) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1763) CFA_SP SP+-2
          CFI (cfiCond1763) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1764 Using cfiCommon1
          CFI (cfiPicker1764) NoFunction
          CFI (cfiPicker1764) Picker
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1762
          CFI EndBlock cfiCond1763
          CFI EndBlock cfiPicker1764

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond1765 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1766 Using cfiCommon0
          CFI (cfiCond1766) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1766) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond1766) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1766) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1766) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1766) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1766) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1766) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1766) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1766) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1766) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1767 Using cfiCommon1
          CFI (cfiPicker1767) NoFunction
          CFI (cfiPicker1767) Picker
        LCALL     ??Subroutine248_0 & 0xFFFF
??CrossCallReturnLabel_592:
        ADD       A,#0x9
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1765
          CFI EndBlock cfiCond1766
          CFI EndBlock cfiPicker1767

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond1768 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1769 Using cfiCommon0
          CFI (cfiCond1769) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1769) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond1769) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1769) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1769) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1769) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1769) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1769) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1769) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1769) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1769) CFA_SP SP+-2
          CFI (cfiCond1769) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1770 Using cfiCommon1
          CFI (cfiPicker1770) NoFunction
          CFI (cfiPicker1770) Picker
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_279:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1768
          CFI EndBlock cfiCond1769
          CFI EndBlock cfiPicker1770

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond1771 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1772 Using cfiCommon0
          CFI (cfiCond1772) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1772) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond1772) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1772) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1772) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1772) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1772) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1772) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1772) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1772) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1772) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1772) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1772) CFA_SP SP+-2
          CFI (cfiCond1772) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1773 Using cfiCommon0
          CFI (cfiCond1773) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1773) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond1773) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1773) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1773) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1773) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1773) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1773) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1773) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1773) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1773) CFA_SP SP+-2
          CFI (cfiCond1773) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1774 Using cfiCommon1
          CFI (cfiPicker1774) NoFunction
          CFI (cfiPicker1774) Picker
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_340:
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1771
          CFI EndBlock cfiCond1772
          CFI EndBlock cfiCond1773
          CFI EndBlock cfiPicker1774

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond1775 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_44
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1776 Using cfiCommon0
          CFI (cfiCond1776) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1776) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond1776) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1776) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1776) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1776) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1776) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1776) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1776) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1776) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1776) CFA_SP SP+-2
          CFI (cfiCond1776) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1777 Using cfiCommon1
          CFI (cfiPicker1777) NoFunction
          CFI (cfiPicker1777) Picker
        MOVX      @DPTR,A
        LCALL     ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_686:
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1775
          CFI EndBlock cfiCond1776
          CFI EndBlock cfiPicker1777

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond1778 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1779 Using cfiCommon0
          CFI (cfiCond1779) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1779) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond1779) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1779) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1779) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1779) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1779) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1779) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1779) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1779) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1779) CFA_SP SP+-2
          CFI (cfiCond1779) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1780 Using cfiCommon1
          CFI (cfiPicker1780) NoFunction
          CFI (cfiPicker1780) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        LCALL     ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_256:
        RET
          CFI EndBlock cfiCond1778
          CFI EndBlock cfiCond1779
          CFI EndBlock cfiPicker1780

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond1781 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1782 Using cfiCommon0
          CFI (cfiCond1782) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1782) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_30
          CFI (cfiCond1782) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1782) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1782) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1782) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1782) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1782) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1782) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1782) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1782) CFA_SP SP+-4
          CFI (cfiCond1782) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1783 Using cfiCommon0
          CFI (cfiCond1783) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1783) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_0
          CFI (cfiCond1783) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1783) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1783) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1783) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1783) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1783) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1783) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1783) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1783) CFA_SP SP+-4
          CFI (cfiCond1783) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1784 Using cfiCommon0
          CFI (cfiCond1784) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1784) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_1
          CFI (cfiCond1784) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1784) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1784) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1784) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1784) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1784) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1784) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1784) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1784) CFA_SP SP+-4
          CFI (cfiCond1784) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1785 Using cfiCommon1
          CFI (cfiPicker1785) NoFunction
          CFI (cfiPicker1785) Picker
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine196 & 0xFFFF
??CrossCallReturnLabel_323:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1781
          CFI EndBlock cfiCond1782
          CFI EndBlock cfiCond1783
          CFI EndBlock cfiCond1784
          CFI EndBlock cfiPicker1785

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond1786 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1787 Using cfiCommon0
          CFI (cfiCond1787) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1787) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1787) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1787) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1787) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1787) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1787) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1787) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1787) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1787) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1787) CFA_SP SP+-2
          CFI (cfiCond1787) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker1788 Using cfiCommon1
          CFI (cfiPicker1788) NoFunction
          CFI (cfiPicker1788) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        LCALL     ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_257:
        MOV       DPH,A
        MOV       DPL,R0
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_351:
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        ADD       A,R6
        RET
          CFI EndBlock cfiCond1786
          CFI EndBlock cfiCond1787
          CFI EndBlock cfiPicker1788
// 3114 
// 3115 /*********************************************************************
// 3116  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3117  *
// 3118  * @brief       This function handles parsing the incoming Management
// 3119  *              Network Update request and starts the request (if needed).
// 3120  *
// 3121  * @param       inMsg - incoming message (request)
// 3122  * @param       pReq - pointer to place to parse message to
// 3123  *
// 3124  * @return      none
// 3125  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3126 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1789 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3127 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine119 & 0xFFFF
// 3128   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_683:
        LCALL     ?Subroutine92 & 0xFFFF
// 3129 
// 3130   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_155:
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       A,R4
        MOV       R2,A
        MOV       A,R5
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?XSTORE_R0123
// 3131   msg += 4;
// 3132   pReq->scanDuration = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3133 
// 3134   if ( pReq->scanDuration <= 0x05 )
        CLR       C
        SUBB      A,#0x6
        JNC       ??ZDO_ParseMgmtNwkUpdateReq_0
// 3135   {
// 3136     // Request is to scan over channelMask
// 3137     pReq->scanCount = *msg;
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine203 & 0xFFFF
// 3138   }
??CrossCallReturnLabel_334:
        SJMP      ??ZDO_ParseMgmtNwkUpdateReq_1
// 3139   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0xfe
        JZ        ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDO_ParseMgmtNwkUpdateReq_3
// 3140   {
// 3141     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3142     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_147:
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x6
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtNwkUpdateReq_4
        INC       R7
// 3143 
// 3144     if ( pReq->scanDuration == 0xFF )
??ZDO_ParseMgmtNwkUpdateReq_4:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDO_ParseMgmtNwkUpdateReq_3
// 3145     {
// 3146       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL     ?Subroutine63 & 0xFFFF
// 3147     }
// 3148   }
??CrossCallReturnLabel_101:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX      @DPTR,A
// 3149 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP      ??Subroutine214_0 & 0xFFFF
          CFI EndBlock cfiBlock1789

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond1790 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1791 Using cfiCommon0
          CFI (cfiCond1791) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1791) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond1791) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1791) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1791) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1791) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1791) CFA_SP SP+-2
          CFI (cfiCond1791) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1792 Using cfiCommon1
          CFI (cfiPicker1792) NoFunction
          CFI (cfiPicker1792) Picker
        LCALL     ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_427:
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV       R1,#0x4
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        RET
          CFI EndBlock cfiCond1790
          CFI EndBlock cfiCond1791
          CFI EndBlock cfiPicker1792

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond1793 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1794 Using cfiCommon0
          CFI (cfiCond1794) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1794) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond1794) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1794) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1794) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1794) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1794) CFA_SP SP+-2
          CFI (cfiCond1794) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1795 Using cfiCommon1
          CFI (cfiPicker1795) NoFunction
          CFI (cfiPicker1795) Picker
        LCALL     ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_292:
        RET
          CFI EndBlock cfiCond1793
          CFI EndBlock cfiCond1794
          CFI EndBlock cfiPicker1795

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine175:
          CFI Block cfiCond1796 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_647
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1797 Using cfiCommon0
          CFI (cfiCond1797) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1797) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_648
          CFI (cfiCond1797) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1797) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1797) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1797) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1797) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1797) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1797) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1797) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1797) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1797) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1797) CFA_SP SP+-4
          CFI (cfiCond1797) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1798 Using cfiCommon0
          CFI (cfiCond1798) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1798) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_146
          CFI (cfiCond1798) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1798) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1798) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1798) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1798) CFA_SP SP+-4
          CFI (cfiCond1798) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1799 Using cfiCommon0
          CFI (cfiCond1799) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1799) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_147
          CFI (cfiCond1799) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1799) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1799) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1799) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1799) CFA_SP SP+-4
          CFI (cfiCond1799) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1800 Using cfiCommon1
          CFI (cfiPicker1800) NoFunction
          CFI (cfiPicker1800) Picker
        LCALL     ?Subroutine203 & 0xFFFF
??CrossCallReturnLabel_335:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1796
          CFI EndBlock cfiCond1797
          CFI EndBlock cfiCond1798
          CFI EndBlock cfiCond1799
          CFI EndBlock cfiPicker1800

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine203:
          CFI Block cfiCond1801 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_334
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1802 Using cfiCommon0
          CFI (cfiCond1802) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1802) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_647
          CFI (cfiCond1802) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1802) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1802) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1802) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1802) CFA_SP SP+-6
          CFI (cfiCond1802) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1803 Using cfiCommon0
          CFI (cfiCond1803) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1803) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_648
          CFI (cfiCond1803) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1803) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1803) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1803) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1803) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1803) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1803) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1803) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1803) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1803) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1803) CFA_SP SP+-6
          CFI (cfiCond1803) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1804 Using cfiCommon0
          CFI (cfiCond1804) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1804) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_146
          CFI (cfiCond1804) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1804) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1804) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1804) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1804) CFA_SP SP+-6
          CFI (cfiCond1804) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1805 Using cfiCommon0
          CFI (cfiCond1805) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1805) Conditional ??CrossCallReturnLabel_335, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_147
          CFI (cfiCond1805) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1805) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1805) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1805) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1805) CFA_SP SP+-6
          CFI (cfiCond1805) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1806 Using cfiCommon1
          CFI (cfiPicker1806) NoFunction
          CFI (cfiPicker1806) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1801
          CFI EndBlock cfiCond1802
          CFI EndBlock cfiCond1803
          CFI EndBlock cfiCond1804
          CFI EndBlock cfiCond1805
          CFI EndBlock cfiPicker1806

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond1807 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1808 Using cfiCommon0
          CFI (cfiCond1808) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1808) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond1808) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1808) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1808) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1808) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1808) CFA_SP SP+-2
          CFI (cfiCond1808) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1809 Using cfiCommon1
          CFI (cfiPicker1809) NoFunction
          CFI (cfiPicker1809) Picker
        LCALL     ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_277:
        RET
          CFI EndBlock cfiCond1807
          CFI EndBlock cfiCond1808
          CFI EndBlock cfiPicker1809

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine165:
          CFI Block cfiCond1810 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1811 Using cfiCommon0
          CFI (cfiCond1811) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1811) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_5
          CFI (cfiCond1811) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1811) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1811) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1811) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1811) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1811) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1811) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1811) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1811) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1811) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1811) CFA_SP SP+-4
          CFI (cfiCond1811) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1812 Using cfiCommon0
          CFI (cfiCond1812) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1812) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_100
          CFI (cfiCond1812) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1812) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1812) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1812) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1812) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1812) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1812) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1812) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1812) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1812) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1812) CFA_SP SP+-4
          CFI (cfiCond1812) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1813 Using cfiCommon0
          CFI (cfiCond1813) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1813) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_101
          CFI (cfiCond1813) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1813) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1813) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1813) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1813) CFA_SP SP+-4
          CFI (cfiCond1813) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1814 Using cfiCommon1
          CFI (cfiPicker1814) NoFunction
          CFI (cfiPicker1814) Picker
        LCALL     ?Subroutine202 & 0xFFFF
??CrossCallReturnLabel_333:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1810
          CFI EndBlock cfiCond1811
          CFI EndBlock cfiCond1812
          CFI EndBlock cfiCond1813
          CFI EndBlock cfiPicker1814

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_Init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_StartDevice::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateNwkStatus::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CompareClusterLists::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CompareClusterLists

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_AnyClusterMatches::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessPowerDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessActiveEPReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ConvertOTAClusters::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateAddrManager::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLqiReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtRtgReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??NLME_PermitJoiningTimeout::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_BuildSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_MatchEndDeviceBind::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_MatchEndDeviceBind

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveMatchMemory::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveMatchMemory

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CopyMatchInfo::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CopyMatchInfo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDMatchSendState::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDMatchSendState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceBindMatchTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceBindMatchTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseAddrRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParsePowerDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEPListRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseUserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        END
// 3150 
// 3151 /*********************************************************************
// 3152 *********************************************************************/
// 3153 
// 3154 
// 
// 11 919 bytes in segment BANKED_CODE
//    294 bytes in segment BANK_RELAYS
//     61 bytes in segment XDATA_Z
// 
//    294 bytes of CODE     memory
// 11 919 bytes of HUGECODE memory
//     61 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
